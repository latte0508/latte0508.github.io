!function(){var t={359:function(t,e,i){"use strict";i.r(e);const{EventDispatcher:s,MOUSE:n,Quaternion:o,Spherical:r,TOUCH:a,Vector2:l,Vector3:c}=THREE,h={type:"change"},u={type:"start"},d={type:"end"};THREE.OrbitControls=class extends s{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new c,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:n.ROTATE,MIDDLE:n.DOLLY,RIGHT:n.PAN},this.touches={ONE:a.ROTATE,TWO:a.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return y.phi},this.getAzimuthalAngle=function(){return y.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(t){t.addEventListener("keydown",$),this._domElementKeyEvents=t},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",$),this._domElementKeyEvents=null},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(h),i.update(),p=s.NONE},this.update=function(){const e=new c,n=(new o).setFromUnitVectors(t.up,new c(0,1,0)),r=n.clone().invert(),a=new c,l=new o,u=2*Math.PI;return function(){const t=i.object.position;e.copy(t).sub(i.target),e.applyQuaternion(n),y.setFromVector3(e),i.autoRotate&&p===s.NONE&&I(2*Math.PI/60/60*i.autoRotateSpeed),i.enableDamping?(y.theta+=f.theta*i.dampingFactor,y.phi+=f.phi*i.dampingFactor):(y.theta+=f.theta,y.phi+=f.phi);let o=i.minAzimuthAngle,c=i.maxAzimuthAngle;return isFinite(o)&&isFinite(c)&&(o<-Math.PI?o+=u:o>Math.PI&&(o-=u),c<-Math.PI?c+=u:c>Math.PI&&(c-=u),y.theta=o<=c?Math.max(o,Math.min(c,y.theta)):y.theta>(o+c)/2?Math.max(o,y.theta):Math.min(c,y.theta)),y.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,y.phi)),y.makeSafe(),y.radius*=v,y.radius=Math.max(i.minDistance,Math.min(i.maxDistance,y.radius)),!0===i.enableDamping?i.target.addScaledVector(w,i.dampingFactor):i.target.add(w),e.setFromSpherical(y),e.applyQuaternion(r),t.copy(i.target).add(e),i.object.lookAt(i.target),!0===i.enableDamping?(f.theta*=1-i.dampingFactor,f.phi*=1-i.dampingFactor,w.multiplyScalar(1-i.dampingFactor)):(f.set(0,0,0),w.set(0,0,0)),v=1,!!(g||a.distanceToSquared(i.object.position)>m||8*(1-l.dot(i.object.quaternion))>m)&&(i.dispatchEvent(h),a.copy(i.object.position),l.copy(i.object.quaternion),g=!1,!0)}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",Q),i.domElement.removeEventListener("pointerdown",G),i.domElement.removeEventListener("pointercancel",K),i.domElement.removeEventListener("wheel",Z),i.domElement.removeEventListener("pointermove",X),i.domElement.removeEventListener("pointerup",K),null!==i._domElementKeyEvents&&(i._domElementKeyEvents.removeEventListener("keydown",$),i._domElementKeyEvents=null)};const i=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let p=s.NONE;const m=1e-6,y=new r,f=new r;let v=1;const w=new c;let g=!1;const b=new l,x=new l,E=new l,S=new l,A=new l,R=new l,z=new l,M=new l,C=new l,P=[],T={};function F(){return Math.pow(.95,i.zoomSpeed)}function I(t){f.theta-=t}function B(t){f.phi-=t}const L=function(){const t=new c;return function(e,i){t.setFromMatrixColumn(i,0),t.multiplyScalar(-e),w.add(t)}}(),N=function(){const t=new c;return function(e,s){!0===i.screenSpacePanning?t.setFromMatrixColumn(s,1):(t.setFromMatrixColumn(s,0),t.crossVectors(i.object.up,t)),t.multiplyScalar(e),w.add(t)}}(),q=function(){const t=new c;return function(e,s){const n=i.domElement;if(i.object.isPerspectiveCamera){const o=i.object.position;t.copy(o).sub(i.target);let r=t.length();r*=Math.tan(i.object.fov/2*Math.PI/180),L(2*e*r/n.clientHeight,i.object.matrix),N(2*s*r/n.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(L(e*(i.object.right-i.object.left)/i.object.zoom/n.clientWidth,i.object.matrix),N(s*(i.object.top-i.object.bottom)/i.object.zoom/n.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function j(t){i.object.isPerspectiveCamera?v/=t:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*t)),i.object.updateProjectionMatrix(),g=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function k(t){i.object.isPerspectiveCamera?v*=t:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/t)),i.object.updateProjectionMatrix(),g=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function O(t){b.set(t.clientX,t.clientY)}function W(t){S.set(t.clientX,t.clientY)}function V(){if(1===P.length)b.set(P[0].pageX,P[0].pageY);else{const t=.5*(P[0].pageX+P[1].pageX),e=.5*(P[0].pageY+P[1].pageY);b.set(t,e)}}function D(){if(1===P.length)S.set(P[0].pageX,P[0].pageY);else{const t=.5*(P[0].pageX+P[1].pageX),e=.5*(P[0].pageY+P[1].pageY);S.set(t,e)}}function H(){const t=P[0].pageX-P[1].pageX,e=P[0].pageY-P[1].pageY,i=Math.sqrt(t*t+e*e);z.set(0,i)}function Y(t){if(1==P.length)x.set(t.pageX,t.pageY);else{const e=tt(t),i=.5*(t.pageX+e.x),s=.5*(t.pageY+e.y);x.set(i,s)}E.subVectors(x,b).multiplyScalar(i.rotateSpeed);const e=i.domElement;I(2*Math.PI*E.x/e.clientHeight),B(2*Math.PI*E.y/e.clientHeight),b.copy(x)}function _(t){if(1===P.length)A.set(t.pageX,t.pageY);else{const e=tt(t),i=.5*(t.pageX+e.x),s=.5*(t.pageY+e.y);A.set(i,s)}R.subVectors(A,S).multiplyScalar(i.panSpeed),q(R.x,R.y),S.copy(A)}function U(t){const e=tt(t),s=t.pageX-e.x,n=t.pageY-e.y,o=Math.sqrt(s*s+n*n);M.set(0,o),C.set(0,Math.pow(M.y/z.y,i.zoomSpeed)),j(C.y),z.copy(M)}function G(t){!1!==i.enabled&&(0===P.length&&(i.domElement.setPointerCapture(t.pointerId),i.domElement.addEventListener("pointermove",X),i.domElement.addEventListener("pointerup",K)),function(t){P.push(t)}(t),"touch"===t.pointerType?function(t){switch(J(t),P.length){case 1:switch(i.touches.ONE){case a.ROTATE:if(!1===i.enableRotate)return;V(),p=s.TOUCH_ROTATE;break;case a.PAN:if(!1===i.enablePan)return;D(),p=s.TOUCH_PAN;break;default:p=s.NONE}break;case 2:switch(i.touches.TWO){case a.DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;i.enableZoom&&H(),i.enablePan&&D(),p=s.TOUCH_DOLLY_PAN;break;case a.DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;i.enableZoom&&H(),i.enableRotate&&V(),p=s.TOUCH_DOLLY_ROTATE;break;default:p=s.NONE}break;default:p=s.NONE}p!==s.NONE&&i.dispatchEvent(u)}(t):function(t){let e;switch(t.button){case 0:e=i.mouseButtons.LEFT;break;case 1:e=i.mouseButtons.MIDDLE;break;case 2:e=i.mouseButtons.RIGHT;break;default:e=-1}switch(e){case n.DOLLY:if(!1===i.enableZoom)return;!function(t){z.set(t.clientX,t.clientY)}(t),p=s.DOLLY;break;case n.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===i.enablePan)return;W(t),p=s.PAN}else{if(!1===i.enableRotate)return;O(t),p=s.ROTATE}break;case n.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===i.enableRotate)return;O(t),p=s.ROTATE}else{if(!1===i.enablePan)return;W(t),p=s.PAN}break;default:p=s.NONE}p!==s.NONE&&i.dispatchEvent(u)}(t))}function X(t){!1!==i.enabled&&("touch"===t.pointerType?function(t){switch(J(t),p){case s.TOUCH_ROTATE:if(!1===i.enableRotate)return;Y(t),i.update();break;case s.TOUCH_PAN:if(!1===i.enablePan)return;_(t),i.update();break;case s.TOUCH_DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(t){i.enableZoom&&U(t),i.enablePan&&_(t)}(t),i.update();break;case s.TOUCH_DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(t){i.enableZoom&&U(t),i.enableRotate&&Y(t)}(t),i.update();break;default:p=s.NONE}}(t):function(t){switch(p){case s.ROTATE:if(!1===i.enableRotate)return;!function(t){x.set(t.clientX,t.clientY),E.subVectors(x,b).multiplyScalar(i.rotateSpeed);const e=i.domElement;I(2*Math.PI*E.x/e.clientHeight),B(2*Math.PI*E.y/e.clientHeight),b.copy(x),i.update()}(t);break;case s.DOLLY:if(!1===i.enableZoom)return;!function(t){M.set(t.clientX,t.clientY),C.subVectors(M,z),C.y>0?j(F()):C.y<0&&k(F()),z.copy(M),i.update()}(t);break;case s.PAN:if(!1===i.enablePan)return;!function(t){A.set(t.clientX,t.clientY),R.subVectors(A,S).multiplyScalar(i.panSpeed),q(R.x,R.y),S.copy(A),i.update()}(t)}}(t))}function K(t){!function(t){delete T[t.pointerId];for(let e=0;e<P.length;e++)if(P[e].pointerId==t.pointerId)return void P.splice(e,1)}(t),0===P.length&&(i.domElement.releasePointerCapture(t.pointerId),i.domElement.removeEventListener("pointermove",X),i.domElement.removeEventListener("pointerup",K)),i.dispatchEvent(d),p=s.NONE}function Z(t){!1!==i.enabled&&!1!==i.enableZoom&&p===s.NONE&&(t.preventDefault(),i.dispatchEvent(u),function(t){t.deltaY<0?k(F()):t.deltaY>0&&j(F()),i.update()}(t),i.dispatchEvent(d))}function $(t){!1!==i.enabled&&!1!==i.enablePan&&function(t){let e=!1;switch(t.code){case i.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?B(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):q(0,i.keyPanSpeed),e=!0;break;case i.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?B(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):q(0,-i.keyPanSpeed),e=!0;break;case i.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?I(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):q(i.keyPanSpeed,0),e=!0;break;case i.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?I(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):q(-i.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),i.update())}(t)}function Q(t){!1!==i.enabled&&t.preventDefault()}function J(t){let e=T[t.pointerId];void 0===e&&(e=new l,T[t.pointerId]=e),e.set(t.pageX,t.pageY)}function tt(t){const e=t.pointerId===P[0].pointerId?P[1]:P[0];return T[e.pointerId]}i.domElement.addEventListener("contextmenu",Q),i.domElement.addEventListener("pointerdown",G),i.domElement.addEventListener("pointercancel",K),i.domElement.addEventListener("wheel",Z,{passive:!1}),this.update()}};var p=AFRAME.utils.bind;AFRAME.registerComponent("orbit-controls",{dependencies:["camera"],schema:{autoRotate:{type:"boolean"},autoRotateSpeed:{default:2},dampingFactor:{default:.1},enabled:{default:!0},enableDamping:{default:!0},enableKeys:{default:!0},enablePan:{default:!0},enableRotate:{default:!0},enableZoom:{default:!0},initialPosition:{type:"vec3"},keyPanSpeed:{default:7},minAzimuthAngle:{type:"number",default:-1/0},maxAzimuthAngle:{type:"number",default:1/0},maxDistance:{default:1e3},maxPolarAngle:{default:AFRAME.utils.device.isMobile()?90:120},minDistance:{default:1},minPolarAngle:{default:0},minZoom:{default:0},panSpeed:{default:1},rotateSpeed:{default:.05},screenSpacePanning:{default:!1},target:{type:"vec3"},zoomSpeed:{default:.5}},init:function(){var t=this.el;this.oldPosition=new THREE.Vector3,this.bindMethods(),t.sceneEl.addEventListener("enter-vr",this.onEnterVR),t.sceneEl.addEventListener("exit-vr",this.onExitVR),document.body.style.cursor="grab",document.addEventListener("mousedown",(()=>{document.body.style.cursor="grabbing"})),document.addEventListener("mouseup",(()=>{document.body.style.cursor="grab"})),this.target=new THREE.Vector3,t.getObject3D("camera").position.copy(this.data.initialPosition)},pause:function(){this.controls.dispose()},play:function(){const t=this.el;this.controls=new THREE.OrbitControls(t.getObject3D("camera"),t.sceneEl.renderer.domElement),this.update(),this.controls.saveState()},onEnterVR:function(){var t=this.el;(AFRAME.utils.device.checkHeadsetConnected()||AFRAME.utils.device.isMobile())&&(this.controls.enabled=!1,t.hasAttribute("look-controls")&&(t.setAttribute("look-controls","enabled",!0),this.oldPosition.copy(t.getObject3D("camera").position),t.getObject3D("camera").position.set(0,0,0)))},onExitVR:function(){var t=this.el;(AFRAME.utils.device.checkHeadsetConnected()||AFRAME.utils.device.isMobile())&&(this.controls.enabled=!0,t.getObject3D("camera").position.copy(this.oldPosition),t.hasAttribute("look-controls")&&t.setAttribute("look-controls","enabled",!1))},bindMethods:function(){this.onEnterVR=p(this.onEnterVR,this),this.onExitVR=p(this.onExitVR,this)},update:function(t){var e=this.controls,i=this.data;e&&(e.target=this.target.copy(i.target),e.autoRotate=i.autoRotate,e.autoRotateSpeed=i.autoRotateSpeed,e.dampingFactor=i.dampingFactor,e.enabled=i.enabled,e.enableDamping=i.enableDamping,e.enableKeys=i.enableKeys,e.enablePan=i.enablePan,e.enableRotate=i.enableRotate,e.enableZoom=i.enableZoom,e.keyPanSpeed=i.keyPanSpeed,e.maxPolarAngle=THREE.MathUtils.degToRad(i.maxPolarAngle),e.maxAzimuthAngle=THREE.MathUtils.degToRad(i.maxAzimuthAngle),e.maxDistance=i.maxDistance,e.minDistance=i.minDistance,e.minPolarAngle=THREE.MathUtils.degToRad(i.minPolarAngle),e.minAzimuthAngle=THREE.MathUtils.degToRad(i.minAzimuthAngle),e.minZoom=i.minZoom,e.panSpeed=i.panSpeed,e.rotateSpeed=i.rotateSpeed,e.screenSpacePanning=i.screenSpacePanning,e.zoomSpeed=i.zoomSpeed)},tick:function(){var t=this.controls;this.data.enabled&&t.enabled&&(t.enableDamping||t.autoRotate)&&this.controls.update()},remove:function(){this.controls.reset(),this.controls.dispose(),this.el.sceneEl.removeEventListener("enter-vr",this.onEnterVR),this.el.sceneEl.removeEventListener("exit-vr",this.onExitVR)}})},466:function(t){var e;t.exports=((e=function(){function t(t){return n.appendChild(t.dom),t}function i(t){for(var e=0;e<n.children.length;e++)n.children[e].style.display=e===t?"block":"none";s=t}var s=0,n=document.createElement("div");n.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",n.addEventListener("click",(function(t){t.preventDefault(),i(++s%n.children.length)}),!1);var o=(performance||Date).now(),r=o,a=0,l=t(new e.Panel("FPS","#0ff","#002")),c=t(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var h=t(new e.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:n,addPanel:t,showPanel:i,begin:function(){o=(performance||Date).now()},end:function(){a++;var t=(performance||Date).now();if(c.update(t-o,200),t>r+1e3&&(l.update(1e3*a/(t-r),100),r=t,a=0,h)){var e=performance.memory;h.update(e.usedJSHeapSize/1048576,e.jsHeapSizeLimit/1048576)}return t},update:function(){o=this.end()},domElement:n,setMode:i}}).Panel=function(t,e,i){var s=1/0,n=0,o=Math.round,r=o(window.devicePixelRatio||1),a=80*r,l=48*r,c=3*r,h=2*r,u=3*r,d=15*r,p=74*r,m=30*r,y=document.createElement("canvas");y.width=a,y.height=l,y.style.cssText="width:80px;height:48px";var f=y.getContext("2d");return f.font="bold "+9*r+"px Helvetica,Arial,sans-serif",f.textBaseline="top",f.fillStyle=i,f.fillRect(0,0,a,l),f.fillStyle=e,f.fillText(t,c,h),f.fillRect(u,d,p,m),f.fillStyle=i,f.globalAlpha=.9,f.fillRect(u,d,p,m),{dom:y,update:function(l,v){s=Math.min(s,l),n=Math.max(n,l),f.fillStyle=i,f.globalAlpha=1,f.fillRect(0,0,a,d),f.fillStyle=e,f.fillText(o(l)+" "+t+" ("+o(s)+"-"+o(n)+")",c,h),f.drawImage(y,u+r,d,p-r,m,u,d,p-r,m),f.fillRect(u+p-r,d,r,m),f.fillStyle=i,f.globalAlpha=.9,f.fillRect(u+p-r,d,r,o((1-l/v)*m))}}},e)}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var o=e[s]={exports:{}};return t[s].call(o.exports,o,o.exports,i),o.exports}i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},i.d=function(t,e){for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},function(){"use strict";var t=i(466),e=i.n(t);class s{constructor(t){void 0===t&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){void 0===t&&(t=new o);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){void 0===e&&(e=new o);const i=this.elements,s=t.x,n=t.y,r=t.z;return e.x=i[0]*s+i[1]*n+i[2]*r,e.y=i[3]*s+i[4]*n+i[5]*r,e.z=i[6]*s+i[7]*n+i[8]*r,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){void 0===e&&(e=new s);const i=this.elements,n=t.elements,o=e.elements,r=i[0],a=i[1],l=i[2],c=i[3],h=i[4],u=i[5],d=i[6],p=i[7],m=i[8],y=n[0],f=n[1],v=n[2],w=n[3],g=n[4],b=n[5],x=n[6],E=n[7],S=n[8];return o[0]=r*y+a*w+l*x,o[1]=r*f+a*g+l*E,o[2]=r*v+a*b+l*S,o[3]=c*y+h*w+u*x,o[4]=c*f+h*g+u*E,o[5]=c*v+h*b+u*S,o[6]=d*y+p*w+m*x,o[7]=d*f+p*g+m*E,o[8]=d*v+p*b+m*S,e}scale(t,e){void 0===e&&(e=new s);const i=this.elements,n=e.elements;for(let e=0;3!==e;e++)n[3*e+0]=t.x*i[3*e+0],n[3*e+1]=t.y*i[3*e+1],n[3*e+2]=t.z*i[3*e+2];return e}solve(t,e){void 0===e&&(e=new o);const i=[];let s,n;for(s=0;s<12;s++)i.push(0);for(s=0;s<3;s++)for(n=0;n<3;n++)i[s+4*n]=this.elements[s+3*n];i[3]=t.x,i[7]=t.y,i[11]=t.z;let r=3;const a=r;let l;let c;do{if(s=a-r,0===i[s+4*s])for(n=s+1;n<a;n++)if(0!==i[s+4*n]){l=4;do{c=4-l,i[c+4*s]+=i[c+4*n]}while(--l);break}if(0!==i[s+4*s])for(n=s+1;n<a;n++){const t=i[s+4*n]/i[s+4*s];l=4;do{c=4-l,i[c+4*n]=c<=s?0:i[c+4*n]-i[c+4*s]*t}while(--l)}}while(--r);if(e.z=i[11]/i[10],e.y=(i[7]-i[6]*e.z)/i[5],e.x=(i[3]-i[2]*e.z-i[1]*e.y)/i[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,i){if(void 0===i)return this.elements[e+3*t];this.elements[e+3*t]=i}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";for(let e=0;e<9;e++)t+=this.elements[e]+",";return t}reverse(t){void 0===t&&(t=new s);const e=n;let i,o;for(i=0;i<3;i++)for(o=0;o<3;o++)e[i+6*o]=this.elements[i+3*o];e[3]=1,e[9]=0,e[15]=0,e[4]=0,e[10]=1,e[16]=0,e[5]=0,e[11]=0,e[17]=1;let r=3;const a=r;let l;let c;do{if(i=a-r,0===e[i+6*i])for(o=i+1;o<a;o++)if(0!==e[i+6*o]){l=6;do{c=6-l,e[c+6*i]+=e[c+6*o]}while(--l);break}if(0!==e[i+6*i])for(o=i+1;o<a;o++){const t=e[i+6*o]/e[i+6*i];l=6;do{c=6-l,e[c+6*o]=c<=i?0:e[c+6*o]-e[c+6*i]*t}while(--l)}}while(--r);i=2;do{o=i-1;do{const t=e[i+6*o]/e[i+6*i];l=6;do{c=6-l,e[c+6*o]=e[c+6*o]-e[c+6*i]*t}while(--l)}while(o--)}while(--i);i=2;do{const t=1/e[i+6*i];l=6;do{c=6-l,e[c+6*i]=e[c+6*i]*t}while(--l)}while(i--);i=2;do{o=2;do{if(c=e[3+o+6*i],isNaN(c)||c===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,o,c)}while(o--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,i=t.y,s=t.z,n=t.w,o=e+e,r=i+i,a=s+s,l=e*o,c=e*r,h=e*a,u=i*r,d=i*a,p=s*a,m=n*o,y=n*r,f=n*a,v=this.elements;return v[0]=1-(u+p),v[1]=c-f,v[2]=h+y,v[3]=c+f,v[4]=1-(l+p),v[5]=d-m,v[6]=h-y,v[7]=d+m,v[8]=1-(l+u),this}transpose(t){void 0===t&&(t=new s);const e=this.elements,i=t.elements;let n;return i[0]=e[0],i[4]=e[4],i[8]=e[8],n=e[1],i[1]=e[3],i[3]=n,n=e[2],i[2]=e[6],i[6]=n,n=e[5],i[5]=e[7],i[7]=n,t}}const n=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class o{constructor(t,e,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),this.x=t,this.y=e,this.z=i}cross(t,e){void 0===e&&(e=new o);const i=t.x,s=t.y,n=t.z,r=this.x,a=this.y,l=this.z;return e.x=a*n-l*s,e.y=l*i-r*n,e.z=r*s-a*i,e}set(t,e,i){return this.x=t,this.y=e,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(!e)return new o(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z}vsub(t,e){if(!e)return new o(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z}crossmat(){return new s([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,i=this.z,s=Math.sqrt(t*t+e*e+i*i);if(s>0){const t=1/s;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return s}unit(t){void 0===t&&(t=new o);const e=this.x,i=this.y,s=this.z;let n=Math.sqrt(e*e+i*i+s*s);return n>0?(n=1/n,t.x=e*n,t.y=i*n,t.z=s*n):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,i=this.z;return Math.sqrt(t*t+e*e+i*i)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,i=this.y,s=this.z,n=t.x,o=t.y,r=t.z;return Math.sqrt((n-e)*(n-e)+(o-i)*(o-i)+(r-s)*(r-s))}distanceSquared(t){const e=this.x,i=this.y,s=this.z,n=t.x,o=t.y,r=t.z;return(n-e)*(n-e)+(o-i)*(o-i)+(r-s)*(r-s)}scale(t,e){void 0===e&&(e=new o);const i=this.x,s=this.y,n=this.z;return e.x=t*i,e.y=t*s,e.z=t*n,e}vmul(t,e){return void 0===e&&(e=new o),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,i){return void 0===i&&(i=new o),i.x=this.x+t*e.x,i.y=this.y+t*e.y,i.z=this.z+t*e.z,i}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(t){return void 0===t&&(t=new o),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const i=this.length();if(i>0){const s=r,n=1/i;s.set(this.x*n,this.y*n,this.z*n);const o=a;Math.abs(s.x)<.9?(o.set(1,0,0),s.cross(o,t)):(o.set(0,1,0),s.cross(o,t)),s.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,i){const s=this.x,n=this.y,o=this.z;i.x=s+(t.x-s)*e,i.y=n+(t.y-n)*e,i.z=o+(t.z-o)*e}almostEquals(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(l),l.almostEquals(t,e)}clone(){return new o(this.x,this.y,this.z)}}o.ZERO=new o(0,0,0),o.UNIT_X=new o(1,0,0),o.UNIT_Y=new o(0,1,0),o.UNIT_Z=new o(0,0,1);const r=new o,a=new o,l=new o;class c{constructor(t){void 0===t&&(t={}),this.lowerBound=new o,this.upperBound=new o,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,i,s){const n=this.lowerBound,o=this.upperBound,r=i;n.copy(t[0]),r&&r.vmult(n,n),o.copy(n);for(let e=1;e<t.length;e++){let i=t[e];r&&(r.vmult(i,h),i=h),i.x>o.x&&(o.x=i.x),i.x<n.x&&(n.x=i.x),i.y>o.y&&(o.y=i.y),i.y<n.y&&(n.y=i.y),i.z>o.z&&(o.z=i.z),i.z<n.z&&(n.z=i.z)}return e&&(e.vadd(n,n),e.vadd(o,o)),s&&(n.x-=s,n.y-=s,n.z-=s,o.x+=s,o.y+=s,o.z+=s),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return(new c).copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,i=this.upperBound,s=t.lowerBound,n=t.upperBound,o=s.x<=i.x&&i.x<=n.x||e.x<=n.x&&n.x<=i.x,r=s.y<=i.y&&i.y<=n.y||e.y<=n.y&&n.y<=i.y,a=s.z<=i.z&&i.z<=n.z||e.z<=n.z&&n.z<=i.z;return o&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,i=this.upperBound,s=t.lowerBound,n=t.upperBound;return e.x<=s.x&&i.x>=n.x&&e.y<=s.y&&i.y>=n.y&&e.z<=s.z&&i.z>=n.z}getCorners(t,e,i,s,n,o,r,a){const l=this.lowerBound,c=this.upperBound;t.copy(l),e.set(c.x,l.y,l.z),i.set(c.x,c.y,l.z),s.set(l.x,c.y,c.z),n.set(c.x,l.y,c.z),o.set(l.x,c.y,l.z),r.set(l.x,l.y,c.z),a.copy(c)}toLocalFrame(t,e){const i=u,s=i[0],n=i[1],o=i[2],r=i[3],a=i[4],l=i[5],c=i[6],h=i[7];this.getCorners(s,n,o,r,a,l,c,h);for(let e=0;8!==e;e++){const s=i[e];t.pointToLocal(s,s)}return e.setFromPoints(i)}toWorldFrame(t,e){const i=u,s=i[0],n=i[1],o=i[2],r=i[3],a=i[4],l=i[5],c=i[6],h=i[7];this.getCorners(s,n,o,r,a,l,c,h);for(let e=0;8!==e;e++){const s=i[e];t.pointToWorld(s,s)}return e.setFromPoints(i)}overlapsRay(t){const{direction:e,from:i}=t,s=1/e.x,n=1/e.y,o=1/e.z,r=(this.lowerBound.x-i.x)*s,a=(this.upperBound.x-i.x)*s,l=(this.lowerBound.y-i.y)*n,c=(this.upperBound.y-i.y)*n,h=(this.lowerBound.z-i.z)*o,u=(this.upperBound.z-i.z)*o,d=Math.max(Math.max(Math.min(r,a),Math.min(l,c)),Math.min(h,u)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,c)),Math.max(h,u));return!(p<0)&&!(d>p)}}const h=new o,u=[new o,new o,new o,new o,new o,new o,new o,new o];class d{constructor(){this.matrix=[]}get(t,e){let{index:i}=t,{index:s}=e;if(s>i){const t=s;s=i,i=t}return this.matrix[(i*(i+1)>>1)+s-1]}set(t,e,i){let{index:s}=t,{index:n}=e;if(n>s){const t=n;n=s,s=t}this.matrix[(s*(s+1)>>1)+n-1]=i?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class p{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;return void 0===i[t]&&(i[t]=[]),i[t].includes(e)||i[t].push(e),this}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return!(void 0===i[t]||!i[t].includes(e))}hasAnyEventListener(t){if(void 0===this._listeners)return!1;return void 0!==this._listeners[t]}removeEventListener(t,e){if(void 0===this._listeners)return this;const i=this._listeners;if(void 0===i[t])return this;const s=i[t].indexOf(e);return-1!==s&&i[t].splice(s,1),this}dispatchEvent(t){if(void 0===this._listeners)return this;const e=this._listeners[t.type];if(void 0!==e){t.target=this;for(let i=0,s=e.length;i<s;i++)e[i].call(this,t)}return this}}class m{constructor(t,e,i,s){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===s&&(s=1),this.x=t,this.y=e,this.z=i,this.w=s}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const i=Math.sin(.5*e);return this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e),this}toAxisAngle(t){void 0===t&&(t=new o),this.normalize();const e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const e=y,i=f;t.tangents(e,i),this.setFromAxisAngle(e,Math.PI)}else{const i=t.cross(e);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){void 0===e&&(e=new m);const i=this.x,s=this.y,n=this.z,o=this.w,r=t.x,a=t.y,l=t.z,c=t.w;return e.x=i*c+o*r+s*l-n*a,e.y=s*c+o*a+n*r-i*l,e.z=n*c+o*l+i*a-s*r,e.w=o*c-i*r-s*a-n*l,e}inverse(t){void 0===t&&(t=new m);const e=this.x,i=this.y,s=this.z,n=this.w;this.conjugate(t);const o=1/(e*e+i*i+s*s+n*n);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return void 0===t&&(t=new m),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){void 0===e&&(e=new o);const i=t.x,s=t.y,n=t.z,r=this.x,a=this.y,l=this.z,c=this.w,h=c*i+a*n-l*s,u=c*s+l*i-r*n,d=c*n+r*s-a*i,p=-r*i-a*s-l*n;return e.x=h*c+p*-r+u*-l-d*-a,e.y=u*c+p*-a+d*-r-h*-l,e.z=d*c+p*-l+h*-a-u*-r,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){let i,s,n;void 0===e&&(e="YZX");const o=this.x,r=this.y,a=this.z,l=this.w;if("YZX"!==e)throw new Error(`Euler order ${e} not supported yet.`);{const t=o*r+a*l;if(t>.499&&(i=2*Math.atan2(o,l),s=Math.PI/2,n=0),t<-.499&&(i=-2*Math.atan2(o,l),s=-Math.PI/2,n=0),void 0===i){const e=o*o,c=r*r,h=a*a;i=Math.atan2(2*r*l-2*o*a,1-2*c-2*h),s=Math.asin(2*t),n=Math.atan2(2*o*l-2*r*a,1-2*e-2*h)}}t.y=i,t.z=s,t.x=n}setFromEuler(t,e,i,s){void 0===s&&(s="XYZ");const n=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(i/2),a=Math.sin(t/2),l=Math.sin(e/2),c=Math.sin(i/2);return"XYZ"===s?(this.x=a*o*r+n*l*c,this.y=n*l*r-a*o*c,this.z=n*o*c+a*l*r,this.w=n*o*r-a*l*c):"YXZ"===s?(this.x=a*o*r+n*l*c,this.y=n*l*r-a*o*c,this.z=n*o*c-a*l*r,this.w=n*o*r+a*l*c):"ZXY"===s?(this.x=a*o*r-n*l*c,this.y=n*l*r+a*o*c,this.z=n*o*c+a*l*r,this.w=n*o*r-a*l*c):"ZYX"===s?(this.x=a*o*r-n*l*c,this.y=n*l*r+a*o*c,this.z=n*o*c-a*l*r,this.w=n*o*r+a*l*c):"YZX"===s?(this.x=a*o*r+n*l*c,this.y=n*l*r+a*o*c,this.z=n*o*c-a*l*r,this.w=n*o*r-a*l*c):"XZY"===s&&(this.x=a*o*r-n*l*c,this.y=n*l*r-a*o*c,this.z=n*o*c+a*l*r,this.w=n*o*r+a*l*c),this}clone(){return new m(this.x,this.y,this.z,this.w)}slerp(t,e,i){void 0===i&&(i=new m);const s=this.x,n=this.y,o=this.z,r=this.w;let a,l,c,h,u,d=t.x,p=t.y,y=t.z,f=t.w;return l=s*d+n*p+o*y+r*f,l<0&&(l=-l,d=-d,p=-p,y=-y,f=-f),1-l>1e-6?(a=Math.acos(l),c=Math.sin(a),h=Math.sin((1-e)*a)/c,u=Math.sin(e*a)/c):(h=1-e,u=e),i.x=h*s+u*d,i.y=h*n+u*p,i.z=h*o+u*y,i.w=h*r+u*f,i}integrate(t,e,i,s){void 0===s&&(s=new m);const n=t.x*i.x,o=t.y*i.y,r=t.z*i.z,a=this.x,l=this.y,c=this.z,h=this.w,u=.5*e;return s.x+=u*(n*h+o*c-r*l),s.y+=u*(o*h+r*a-n*c),s.z+=u*(r*h+n*l-o*a),s.w+=u*(-n*a-o*l-r*c),s}}const y=new o,f=new o;class v{constructor(t){void 0===t&&(t={}),this.id=v.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=!t.collisionResponse||t.collisionResponse,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,i,s){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}v.idCounter=0,v.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class w{constructor(t){void 0===t&&(t={}),this.position=new o,this.quaternion=new m,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return w.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return w.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return void 0===e&&(e=new o),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,i,s){return void 0===s&&(s=new o),i.vsub(t,s),e.conjugate(g),g.vmult(s,s),s}static pointToWorldFrame(t,e,i,s){return void 0===s&&(s=new o),e.vmult(i,s),s.vadd(t,s),s}static vectorToWorldFrame(t,e,i){return void 0===i&&(i=new o),t.vmult(e,i),i}static vectorToLocalFrame(t,e,i,s){return void 0===s&&(s=new o),e.w*=-1,e.vmult(i,s),e.w*=-1,s}}const g=new m;class b extends v{constructor(t){void 0===t&&(t={});const{vertices:e=[],faces:i=[],normals:s=[],axes:n,boundingSphereRadius:o}=t;super({type:v.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=i,this.faceNormals=s,0===this.faceNormals.length&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=n?n.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,i=this.uniqueEdges;i.length=0;const s=new o;for(let n=0;n!==t.length;n++){const o=t[n],r=o.length;for(let t=0;t!==r;t++){const n=(t+1)%r;e[o[t]].vsub(e[o[n]],s),s.normalize();let a=!1;for(let t=0;t!==i.length;t++)if(i[t].almostEquals(s)||i[t].almostEquals(s)){a=!0;break}a||i.push(s.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error(`Vertex ${this.faces[t][e]} not found!`);const e=this.faceNormals[t]||new o;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const i=this.vertices[this.faces[t][0]];if(e.dot(i)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let e=0;e<this.faces[t].length;e++)console.warn(`.vertices[${this.faces[t][e]}] = Vec3(${this.vertices[this.faces[t][e]].toString()})`)}}}getFaceNormal(t,e){const i=this.faces[t],s=this.vertices[i[0]],n=this.vertices[i[1]],o=this.vertices[i[2]];b.computeNormal(s,n,o,e)}static computeNormal(t,e,i,s){const n=new o,r=new o;e.vsub(t,r),i.vsub(e,n),n.cross(r,s),s.isZero()||s.normalize()}clipAgainstHull(t,e,i,s,n,r,a,l,c){const h=new o;let u=-1,d=-Number.MAX_VALUE;for(let t=0;t<i.faces.length;t++){h.copy(i.faceNormals[t]),n.vmult(h,h);const e=h.dot(r);e>d&&(d=e,u=t)}const p=[];for(let t=0;t<i.faces[u].length;t++){const e=i.vertices[i.faces[u][t]],r=new o;r.copy(e),n.vmult(r,r),s.vadd(r,r),p.push(r)}u>=0&&this.clipFaceAgainstHull(r,t,e,p,a,l,c)}findSeparatingAxis(t,e,i,s,n,r,a,l){const c=new o,h=new o,u=new o,d=new o,p=new o,m=new o;let y=Number.MAX_VALUE;const f=this;if(f.uniqueAxes)for(let o=0;o!==f.uniqueAxes.length;o++){i.vmult(f.uniqueAxes[o],c);const a=f.testSepAxis(c,t,e,i,s,n);if(!1===a)return!1;a<y&&(y=a,r.copy(c))}else{const o=a?a.length:f.faces.length;for(let l=0;l<o;l++){const o=a?a[l]:l;c.copy(f.faceNormals[o]),i.vmult(c,c);const h=f.testSepAxis(c,t,e,i,s,n);if(!1===h)return!1;h<y&&(y=h,r.copy(c))}}if(t.uniqueAxes)for(let o=0;o!==t.uniqueAxes.length;o++){n.vmult(t.uniqueAxes[o],h);const a=f.testSepAxis(h,t,e,i,s,n);if(!1===a)return!1;a<y&&(y=a,r.copy(h))}else{const o=l?l.length:t.faces.length;for(let a=0;a<o;a++){const o=l?l[a]:a;h.copy(t.faceNormals[o]),n.vmult(h,h);const c=f.testSepAxis(h,t,e,i,s,n);if(!1===c)return!1;c<y&&(y=c,r.copy(h))}}for(let o=0;o!==f.uniqueEdges.length;o++){i.vmult(f.uniqueEdges[o],d);for(let o=0;o!==t.uniqueEdges.length;o++)if(n.vmult(t.uniqueEdges[o],p),d.cross(p,m),!m.almostZero()){m.normalize();const o=f.testSepAxis(m,t,e,i,s,n);if(!1===o)return!1;o<y&&(y=o,r.copy(m))}}return s.vsub(e,u),u.dot(r)>0&&r.negate(r),!0}testSepAxis(t,e,i,s,n,o){b.project(this,t,i,s,x),b.project(e,t,n,o,E);const r=x[0],a=x[1],l=E[0],c=E[1];if(r<c||l<a)return!1;const h=r-c,u=l-a;return h<u?h:u}calculateLocalInertia(t,e){const i=new o,s=new o;this.computeLocalAABB(s,i);const n=i.x-s.x,r=i.y-s.y,a=i.z-s.z;e.x=1/12*t*(2*r*2*r+2*a*2*a),e.y=1/12*t*(2*n*2*n+2*a*2*a),e.z=1/12*t*(2*r*2*r+2*n*2*n)}getPlaneConstantOfFace(t){const e=this.faces[t],i=this.faceNormals[t],s=this.vertices[e[0]];return-i.dot(s)}clipFaceAgainstHull(t,e,i,s,n,r,a){const l=new o,c=new o,h=new o,u=new o,d=new o,p=new o,m=new o,y=new o,f=this,v=s,w=[];let g=-1,b=Number.MAX_VALUE;for(let e=0;e<f.faces.length;e++){l.copy(f.faceNormals[e]),i.vmult(l,l);const s=l.dot(t);s<b&&(b=s,g=e)}if(g<0)return;const x=f.faces[g];x.connectedFaces=[];for(let t=0;t<f.faces.length;t++)for(let e=0;e<f.faces[t].length;e++)-1!==x.indexOf(f.faces[t][e])&&t!==g&&-1===x.connectedFaces.indexOf(t)&&x.connectedFaces.push(t);const E=x.length;for(let t=0;t<E;t++){const s=f.vertices[x[t]],n=f.vertices[x[(t+1)%E]];s.vsub(n,c),h.copy(c),i.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[g]),i.vmult(u,u),e.vadd(u,u),h.cross(u,d),d.negate(d),p.copy(s),i.vmult(p,p),e.vadd(p,p);const o=x.connectedFaces[t];m.copy(this.faceNormals[o]);const r=this.getPlaneConstantOfFace(o);y.copy(m),i.vmult(y,y);const a=r-y.dot(e);for(this.clipFaceAgainstPlane(v,w,y,a);v.length;)v.shift();for(;w.length;)v.push(w.shift())}m.copy(this.faceNormals[g]);const S=this.getPlaneConstantOfFace(g);y.copy(m),i.vmult(y,y);const A=S-y.dot(e);for(let t=0;t<v.length;t++){let e=y.dot(v[t])+A;if(e<=n&&(console.log(`clamped: depth=${e} to minDist=${n}`),e=n),e<=r){const i=v[t];if(e<=1e-6){const t={point:i,normal:y,depth:e};a.push(t)}}}}clipFaceAgainstPlane(t,e,i,s){let n,r;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];n=i.dot(l)+s;for(let h=0;h<a;h++){if(c=t[h],r=i.dot(c)+s,n<0)if(r<0){const t=new o;t.copy(c),e.push(t)}else{const t=new o;l.lerp(c,n/(n-r),t),e.push(t)}else if(r<0){const t=new o;l.lerp(c,n/(n-r),t),e.push(t),e.push(c)}l=c,n=r}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new o);const i=this.vertices,s=this.worldVertices;for(let n=0;n!==this.vertices.length;n++)e.vmult(i[n],s[n]),t.vadd(s[n],s[n]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const i=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let s=0;s<this.vertices.length;s++){const n=i[s];n.x<t.x?t.x=n.x:n.x>e.x&&(e.x=n.x),n.y<t.y?t.y=n.y:n.y>e.y&&(e.y=n.y),n.z<t.z?t.z=n.z:n.z>e.z&&(e.z=n.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new o);const i=this.faceNormals,s=this.worldFaceNormals;for(let n=0;n!==e;n++)t.vmult(i[n],s[n]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let i=0;i!==e.length;i++){const s=e[i].lengthSquared();s>t&&(t=s)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,s){const n=this.vertices;let r,a,l,c,h,u,d=new o;for(let i=0;i<n.length;i++){d.copy(n[i]),e.vmult(d,d),t.vadd(d,d);const s=d;(void 0===r||s.x<r)&&(r=s.x),(void 0===c||s.x>c)&&(c=s.x),(void 0===a||s.y<a)&&(a=s.y),(void 0===h||s.y>h)&&(h=s.y),(void 0===l||s.z<l)&&(l=s.z),(void 0===u||s.z>u)&&(u=s.z)}i.set(r,a,l),s.set(c,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){void 0===t&&(t=new o);const e=this.vertices;for(let i=0;i<e.length;i++)t.vadd(e[i],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const i=this.vertices.length,s=this.vertices;if(e){for(let t=0;t<i;t++){const i=s[t];e.vmult(i,i)}for(let t=0;t<this.faceNormals.length;t++){const i=this.faceNormals[t];e.vmult(i,i)}}if(t)for(let e=0;e<i;e++){const i=s[e];i.vadd(t,i)}}pointIsInside(t){const e=this.vertices,i=this.faces,s=this.faceNormals,n=new o;this.getAveragePointLocal(n);for(let r=0;r<this.faces.length;r++){let a=s[r];const l=e[i[r][0]],c=new o;t.vsub(l,c);const h=a.dot(c),u=new o;n.vsub(l,u);const d=a.dot(u);if(h<0&&d>0||h>0&&d<0)return!1}return-1}static project(t,e,i,s,n){const o=t.vertices.length,r=S;let a=0,l=0;const c=A,h=t.vertices;c.setZero(),w.vectorToLocalFrame(i,s,e,r),w.pointToLocalFrame(i,s,c,c);const u=c.dot(r);l=a=h[0].dot(r);for(let t=1;t<o;t++){const e=h[t].dot(r);e>a&&(a=e),e<l&&(l=e)}if(l-=u,a-=u,l>a){const t=l;l=a,a=t}n[0]=a,n[1]=l}}const x=[],E=[],S=(new o,new o),A=new o;class R extends v{constructor(t){super({type:v.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,s=o,n=[new s(-t,-e,-i),new s(t,-e,-i),new s(t,e,-i),new s(-t,e,-i),new s(-t,-e,i),new s(t,-e,i),new s(t,e,i),new s(-t,e,i)],r=[new s(0,0,1),new s(0,1,0),new s(1,0,0)],a=new b({vertices:n,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return void 0===e&&(e=new o),R.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,i){const s=t;i.x=1/12*e*(2*s.y*2*s.y+2*s.z*2*s.z),i.y=1/12*e*(2*s.x*2*s.x+2*s.z*2*s.z),i.z=1/12*e*(2*s.y*2*s.y+2*s.x*2*s.x)}getSideNormals(t,e){const i=t,s=this.halfExtents;if(i[0].set(s.x,0,0),i[1].set(0,s.y,0),i[2].set(0,0,s.z),i[3].set(-s.x,0,0),i[4].set(0,-s.y,0),i[5].set(0,0,-s.z),void 0!==e)for(let t=0;t!==i.length;t++)e.vmult(i[t],i[t]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,i){const s=this.halfExtents,n=[[s.x,s.y,s.z],[-s.x,s.y,s.z],[-s.x,-s.y,s.z],[-s.x,-s.y,-s.z],[s.x,-s.y,-s.z],[s.x,s.y,-s.z],[-s.x,s.y,-s.z],[s.x,-s.y,s.z]];for(let s=0;s<n.length;s++)z.set(n[s][0],n[s][1],n[s][2]),e.vmult(z,z),t.vadd(z,z),i(z.x,z.y,z.z)}calculateWorldAABB(t,e,i,s){const n=this.halfExtents;M[0].set(n.x,n.y,n.z),M[1].set(-n.x,n.y,n.z),M[2].set(-n.x,-n.y,n.z),M[3].set(-n.x,-n.y,-n.z),M[4].set(n.x,-n.y,-n.z),M[5].set(n.x,n.y,-n.z),M[6].set(-n.x,n.y,-n.z),M[7].set(n.x,-n.y,n.z);const o=M[0];e.vmult(o,o),t.vadd(o,o),s.copy(o),i.copy(o);for(let n=1;n<8;n++){const o=M[n];e.vmult(o,o),t.vadd(o,o);const r=o.x,a=o.y,l=o.z;r>s.x&&(s.x=r),a>s.y&&(s.y=a),l>s.z&&(s.z=l),r<i.x&&(i.x=r),a<i.y&&(i.y=a),l<i.z&&(i.z=l)}}}const z=new o,M=[new o,new o,new o,new o,new o,new o,new o,new o],C=1,P=2,T=4,F=0,I=1,B=2;class L extends p{constructor(t){void 0===t&&(t={}),super(),this.id=L.idCounter++,this.index=-1,this.world=null,this.vlambda=new o,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof t.collisionResponse||t.collisionResponse,this.position=new o,this.previousPosition=new o,this.interpolatedPosition=new o,this.initPosition=new o,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new o,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new o,this.force=new o;const e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?L.STATIC:L.DYNAMIC,typeof t.type==typeof L.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=L.AWAKE,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new o,this.quaternion=new m,this.initQuaternion=new m,this.previousQuaternion=new m,this.interpolatedQuaternion=new m,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new o,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new o,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new o,this.invInertia=new o,this.invInertiaWorld=new s,this.invMassSolve=0,this.invInertiaSolve=new o,this.invInertiaWorldSolve=new s,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.linearFactor=new o(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new o(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new c,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new o,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=L.AWAKE,this.wakeUpAfterNarrowphase=!1,t===L.SLEEPING&&this.dispatchEvent(L.wakeupEvent)}sleep(){this.sleepState=L.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),s=this.sleepSpeedLimit**2;e===L.AWAKE&&i<s?(this.sleepState=L.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(L.sleepyEvent)):e===L.SLEEPY&&i>s?this.wakeUp():e===L.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(L.sleepEvent))}}updateSolveMassProperties(){this.sleepState===L.SLEEPING||this.type===L.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return void 0===e&&(e=new o),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return void 0===e&&(e=new o),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return void 0===e&&(e=new o),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return void 0===e&&(e=new o),this.quaternion.vmult(t,e),e}addShape(t,e,i){const s=new o,n=new m;return e&&s.copy(e),i&&n.copy(i),this.shapes.push(t),this.shapeOffsets.push(s),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return-1===e?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,i=t.length;let s=0;for(let n=0;n!==i;n++){const i=t[n];i.updateBoundingSphereRadius();const o=e[n].length(),r=i.boundingSphereRadius;o+r>s&&(s=o+r)}this.boundingRadius=s}updateAABB(){const t=this.shapes,e=this.shapeOffsets,i=this.shapeOrientations,s=t.length,n=N,o=q,r=this.quaternion,a=this.aabb,l=j;for(let c=0;c!==s;c++){const s=t[c];r.vmult(e[c],n),n.vadd(this.position,n),r.mult(i[c],o),s.calculateWorldAABB(n,o,l.lowerBound,l.upperBound),0===c?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){const t=k,i=O;t.setRotationFromQuaternion(this.quaternion),t.transpose(i),t.scale(e,t),t.mmult(i,this.invInertiaWorld)}else;}applyForce(t,e){if(void 0===e&&(e=new o),this.type!==L.DYNAMIC)return;this.sleepState===L.SLEEPING&&this.wakeUp();const i=W;e.cross(t,i),this.force.vadd(t,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(t,e){if(void 0===e&&(e=new o),this.type!==L.DYNAMIC)return;const i=V,s=D;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,s),this.applyForce(i,s)}applyTorque(t){this.type===L.DYNAMIC&&(this.sleepState===L.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(void 0===e&&(e=new o),this.type!==L.DYNAMIC)return;this.sleepState===L.SLEEPING&&this.wakeUp();const i=e,s=H;s.copy(t),s.scale(this.invMass,s),this.velocity.vadd(s,this.velocity);const n=Y;i.cross(t,n),this.invInertiaWorld.vmult(n,n),this.angularVelocity.vadd(n,this.angularVelocity)}applyLocalImpulse(t,e){if(void 0===e&&(e=new o),this.type!==L.DYNAMIC)return;const i=_,s=U;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,s),this.applyImpulse(i,s)}updateMassProperties(){const t=G;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,i=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),R.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!i?1/e.x:0,e.y>0&&!i?1/e.y:0,e.z>0&&!i?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const i=new o;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}integrate(t,e,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==L.DYNAMIC&&this.type!==L.KINEMATIC||this.sleepState===L.SLEEPING)return;const s=this.velocity,n=this.angularVelocity,o=this.position,r=this.force,a=this.torque,l=this.quaternion,c=this.invMass,h=this.invInertiaWorld,u=this.linearFactor,d=c*t;s.x+=r.x*d*u.x,s.y+=r.y*d*u.y,s.z+=r.z*d*u.z;const p=h.elements,m=this.angularFactor,y=a.x*m.x,f=a.y*m.y,v=a.z*m.z;n.x+=t*(p[0]*y+p[1]*f+p[2]*v),n.y+=t*(p[3]*y+p[4]*f+p[5]*v),n.z+=t*(p[6]*y+p[7]*f+p[8]*v),o.x+=s.x*t,o.y+=s.y*t,o.z+=s.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(i?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}L.idCounter=0,L.COLLIDE_EVENT_NAME="collide",L.DYNAMIC=C,L.STATIC=P,L.KINEMATIC=T,L.AWAKE=F,L.SLEEPY=I,L.SLEEPING=B,L.wakeupEvent={type:"wakeup"},L.sleepyEvent={type:"sleepy"},L.sleepEvent={type:"sleep"};const N=new o,q=new m,j=new c,k=new s,O=new s,W=(new s,new o),V=new o,D=new o,H=new o,Y=new o,_=new o,U=new o,G=new o;class X{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&L.STATIC)&&t.sleepState!==L.SLEEPING||0==(e.type&L.STATIC)&&e.sleepState!==L.SLEEPING)}intersectionTest(t,e,i,s){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,i,s):this.doBoundingSphereBroadphase(t,e,i,s)}doBoundingSphereBroadphase(t,e,i,s){const n=K;e.position.vsub(t.position,n);const o=(t.boundingRadius+e.boundingRadius)**2;n.lengthSquared()<o&&(i.push(t),s.push(e))}doBoundingBoxBroadphase(t,e,i,s){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(i.push(t),s.push(e))}makePairsUnique(t,e){const i=Z,s=$,n=Q,o=t.length;for(let i=0;i!==o;i++)s[i]=t[i],n[i]=e[i];t.length=0,e.length=0;for(let t=0;t!==o;t++){const e=s[t].id,o=n[t].id,r=e<o?`${e},${o}`:`${o},${e}`;i[r]=t,i.keys.push(r)}for(let o=0;o!==i.keys.length;o++){const o=i.keys.pop(),r=i[o];t.push(s[r]),e.push(n[r]),delete i[o]}}setWorld(t){}static boundingSphereCheck(t,e){const i=new o;t.position.vsub(e.position,i);const s=t.shapes[0],n=e.shapes[0];return Math.pow(s.boundingSphereRadius+n.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(t,e,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const K=new o;new o,new m,new o;const Z={keys:[]},$=[],Q=[];new o;new o;new o;class J extends X{constructor(){super()}collisionPairs(t,e,i){const s=t.bodies,n=s.length;let o,r;for(let t=0;t!==n;t++)for(let n=0;n!==t;n++)o=s[t],r=s[n],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,i)}aabbQuery(t,e,i){void 0===i&&(i=[]);for(let s=0;s<t.bodies.length;s++){const n=t.bodies[s];n.aabbNeedsUpdate&&n.updateAABB(),n.aabb.overlaps(e)&&i.push(n)}return i}}class tt{constructor(){this.rayFromWorld=new o,this.rayToWorld=new o,this.hitNormalWorld=new o,this.hitPointWorld=new o,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,i,s,n,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(s),this.shape=n,this.body=o,this.distance=r}}let et,it,st,nt,ot,rt,at;const lt=1,ct=2,ht=4;et=v.types.SPHERE,it=v.types.PLANE,st=v.types.BOX,nt=v.types.CYLINDER,ot=v.types.CONVEXPOLYHEDRON,rt=v.types.HEIGHTFIELD,at=v.types.TRIMESH;class ut{get[et](){return this._intersectSphere}get[it](){return this._intersectPlane}get[st](){return this._intersectBox}get[nt](){return this._intersectConvex}get[ot](){return this._intersectConvex}get[rt](){return this._intersectHeightfield}get[at](){return this._intersectTrimesh}constructor(t,e){void 0===t&&(t=new o),void 0===e&&(e=new o),this.from=t.clone(),this.to=e.clone(),this.direction=new o,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=ut.ANY,this.result=new tt,this.hasHit=!1,this.callback=t=>{}}intersectWorld(t,e){return this.mode=e.mode||ut.ANY,this.result=e.result||new tt,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===e.checkCollisionResponse||e.checkCollisionResponse,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(dt),pt.length=0,t.broadphase.aabbQuery(t,dt,pt),this.intersectBodies(pt),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const i=this.checkCollisionResponse;if(i&&!t.collisionResponse)return;if(0==(this.collisionFilterGroup&t.collisionFilterMask)||0==(t.collisionFilterGroup&this.collisionFilterMask))return;const s=ft,n=vt;for(let e=0,o=t.shapes.length;e<o;e++){const o=t.shapes[e];if((!i||o.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[e],n),t.quaternion.vmult(t.shapeOffsets[e],s),s.vadd(t.position,s),this.intersectShape(o,n,s,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let e=0,i=t.length;!this.result.shouldStop&&e<i;e++)this.intersectBody(t[e])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,i,s){const n=function(t,e,i){i.vsub(t,kt);const s=kt.dot(e);e.scale(s,Ot),Ot.vadd(t,Ot);const n=i.distanceTo(Ot);return n}(this.from,this.direction,i);if(n>t.boundingSphereRadius)return;const o=this[t.type];o&&o.call(this,t,e,i,s,t)}_intersectBox(t,e,i,s,n){return this._intersectConvex(t.convexPolyhedronRepresentation,e,i,s,n)}_intersectPlane(t,e,i,s,n){const r=this.from,a=this.to,l=this.direction,c=new o(0,0,1);e.vmult(c,c);const h=new o;r.vsub(i,h);const u=h.dot(c);a.vsub(i,h);if(u*h.dot(c)>0)return;if(r.distanceTo(a)<u)return;const d=c.dot(l);if(Math.abs(d)<this.precision)return;const p=new o,m=new o,y=new o;r.vsub(i,p);const f=-c.dot(p)/d;l.scale(f,m),r.vadd(m,y),this.reportIntersection(c,y,n,s,-1)}getAABB(t){const{lowerBound:e,upperBound:i}=t,s=this.to,n=this.from;e.x=Math.min(s.x,n.x),e.y=Math.min(s.y,n.y),e.z=Math.min(s.z,n.z),i.x=Math.max(s.x,n.x),i.y=Math.max(s.y,n.y),i.z=Math.max(s.z,n.z)}_intersectHeightfield(t,e,i,s,n){t.data,t.elementSize;const o=At;o.from.copy(this.from),o.to.copy(this.to),w.pointToLocalFrame(i,e,o.from,o.from),w.pointToLocalFrame(i,e,o.to,o.to),o.updateDirection();const r=Rt;let a,l,h,u;a=l=0,h=u=t.data.length-1;const d=new c;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,r,!0),a=Math.max(a,r[0]),l=Math.max(l,r[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,r,!0),h=Math.min(h,r[0]+1),u=Math.min(u,r[1]+1);for(let r=a;r<h;r++)for(let a=l;a<u;a++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(r,a,d),d.overlapsRay(o)){if(t.getConvexTrianglePillar(r,a,!1),w.pointToWorldFrame(i,e,t.pillarOffset,St),this._intersectConvex(t.pillarConvex,e,St,s,n,Et),this.result.shouldStop)return;t.getConvexTrianglePillar(r,a,!0),w.pointToWorldFrame(i,e,t.pillarOffset,St),this._intersectConvex(t.pillarConvex,e,St,s,n,Et)}}}_intersectSphere(t,e,i,s,n){const o=this.from,r=this.to,a=t.radius,l=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,c=2*((r.x-o.x)*(o.x-i.x)+(r.y-o.y)*(o.y-i.y)+(r.z-o.z)*(o.z-i.z)),h=c**2-4*l*((o.x-i.x)**2+(o.y-i.y)**2+(o.z-i.z)**2-a**2),u=zt,d=Mt;if(!(h<0))if(0===h)o.lerp(r,h,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,n,s,-1);else{const t=(-c-Math.sqrt(h))/(2*l),e=(-c+Math.sqrt(h))/(2*l);if(t>=0&&t<=1&&(o.lerp(r,t,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,n,s,-1)),this.result.shouldStop)return;e>=0&&e<=1&&(o.lerp(r,e,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,n,s,-1))}}_intersectConvex(t,e,i,s,n,o){const r=Ct,a=Pt,l=o&&o.faceList||null,c=t.faces,h=t.vertices,u=t.faceNormals,d=this.direction,p=this.from,m=this.to,y=p.distanceTo(m),f=l?l.length:c.length,v=this.result;for(let t=0;!v.shouldStop&&t<f;t++){const o=l?l[t]:t,m=c[o],f=u[o],w=e,g=i;a.copy(h[m[0]]),w.vmult(a,a),a.vadd(g,a),a.vsub(p,a),w.vmult(f,r);const b=d.dot(r);if(Math.abs(b)<this.precision)continue;const x=r.dot(a)/b;if(!(x<0)){d.scale(x,wt),wt.vadd(p,wt),gt.copy(h[m[0]]),w.vmult(gt,gt),g.vadd(gt,gt);for(let t=1;!v.shouldStop&&t<m.length-1;t++){bt.copy(h[m[t]]),xt.copy(h[m[t+1]]),w.vmult(bt,bt),w.vmult(xt,xt),g.vadd(bt,bt),g.vadd(xt,xt);const e=wt.distanceTo(p);!ut.pointInTriangle(wt,gt,bt,xt)&&!ut.pointInTriangle(wt,bt,gt,xt)||e>y||this.reportIntersection(r,wt,n,s,o)}}}}_intersectTrimesh(t,e,i,s,n,o){const r=Tt,a=qt,l=jt,c=Pt,h=Ft,u=It,d=Bt,p=Nt,m=Lt,y=t.indices;t.vertices;const f=this.from,v=this.to,g=this.direction;l.position.copy(i),l.quaternion.copy(e),w.vectorToLocalFrame(i,e,g,h),w.pointToLocalFrame(i,e,f,u),w.pointToLocalFrame(i,e,v,d),d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,u.x*=t.scale.x,u.y*=t.scale.y,u.z*=t.scale.z,d.vsub(u,h),h.normalize();const b=u.distanceSquared(d);t.tree.rayQuery(this,l,a);for(let o=0,l=a.length;!this.result.shouldStop&&o!==l;o++){const l=a[o];t.getNormal(l,r),t.getVertex(y[3*l],gt),gt.vsub(u,c);const d=h.dot(r),f=r.dot(c)/d;if(f<0)continue;h.scale(f,wt),wt.vadd(u,wt),t.getVertex(y[3*l+1],bt),t.getVertex(y[3*l+2],xt);const v=wt.distanceSquared(u);!ut.pointInTriangle(wt,bt,gt,xt)&&!ut.pointInTriangle(wt,gt,bt,xt)||v>b||(w.vectorToWorldFrame(e,r,m),w.pointToWorldFrame(i,e,wt,p),this.reportIntersection(m,p,n,s,l))}a.length=0}reportIntersection(t,e,i,s,n){const o=this.from,r=this.to,a=o.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==n?n:-1,this.mode){case ut.ALL:this.hasHit=!0,l.set(o,r,t,e,i,s,a),l.hasHit=!0,this.callback(l);break;case ut.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,i,s,a));break;case ut.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,i,s,a),l.shouldStop=!0}}static pointInTriangle(t,e,i,s){s.vsub(e,kt),i.vsub(e,mt),t.vsub(e,yt);const n=kt.dot(kt),o=kt.dot(mt),r=kt.dot(yt),a=mt.dot(mt),l=mt.dot(yt);let c,h;return(c=a*r-o*l)>=0&&(h=n*l-o*r)>=0&&c+h<n*a-o*o}}ut.CLOSEST=lt,ut.ANY=ct,ut.ALL=ht;const dt=new c,pt=[],mt=new o,yt=new o,ft=new o,vt=new m,wt=new o,gt=new o,bt=new o,xt=new o;new o,new tt;const Et={faceList:[0]},St=new o,At=new ut,Rt=[],zt=new o,Mt=new o,Ct=new o,Pt=(new o,new o,new o),Tt=new o,Ft=new o,It=new o,Bt=new o,Lt=new o,Nt=new o;new c;const qt=[],jt=new w,kt=new o,Ot=new o;class Wt{static defaults(t,e){void 0===t&&(t={});for(let i in e)i in t||(t[i]=e[i]);return t}}class Vt{constructor(t,e,i){void 0===i&&(i={}),i=Wt.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Vt.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Vt.idCounter=0;class Dt{constructor(){this.spatial=new o,this.rotational=new o}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Ht{constructor(t,e,i,s){void 0===i&&(i=-1e6),void 0===s&&(s=1e6),this.id=Ht.idCounter++,this.minForce=i,this.maxForce=s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Dt,this.jacobianElementB=new Dt,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,i){const s=e,n=t,o=i;this.a=4/(o*(1+4*s)),this.b=4*s/(1+4*s),this.eps=4/(o*o*n*(1+4*s))}computeB(t,e,i){const s=this.computeGW();return-this.computeGq()*t-s*e-this.computeGiMf()*i}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.position,o=s.position;return t.spatial.dot(n)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.velocity,o=s.velocity,r=i.angularVelocity,a=s.angularVelocity;return t.multiplyVectors(n,r)+e.multiplyVectors(o,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.vlambda,o=s.vlambda,r=i.wlambda,a=s.wlambda;return t.multiplyVectors(n,r)+e.multiplyVectors(o,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.force,o=i.torque,r=s.force,a=s.torque,l=i.invMassSolve,c=s.invMassSolve;return n.scale(l,Yt),r.scale(c,_t),i.invInertiaWorldSolve.vmult(o,Ut),s.invInertiaWorldSolve.vmult(a,Gt),t.multiplyVectors(Yt,Ut)+e.multiplyVectors(_t,Gt)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.invMassSolve,o=s.invMassSolve,r=i.invInertiaWorldSolve,a=s.invInertiaWorldSolve;let l=n+o;return r.vmult(t.rotational,Xt),l+=Xt.dot(t.rotational),a.vmult(e.rotational,Xt),l+=Xt.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,i=this.jacobianElementB,s=this.bi,n=this.bj,o=Kt;s.vlambda.addScaledVector(s.invMassSolve*t,e.spatial,s.vlambda),n.vlambda.addScaledVector(n.invMassSolve*t,i.spatial,n.vlambda),s.invInertiaWorldSolve.vmult(e.rotational,o),s.wlambda.addScaledVector(t,o,s.wlambda),n.invInertiaWorldSolve.vmult(i.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Ht.idCounter=0;const Yt=new o,_t=new o,Ut=new o,Gt=new o,Xt=new o,Kt=new o;class Zt extends Ht{constructor(t,e,i){void 0===i&&(i=1e6),super(t,e,0,i),this.restitution=0,this.ri=new o,this.rj=new o,this.ni=new o}computeB(t){const e=this.a,i=this.b,s=this.bi,n=this.bj,o=this.ri,r=this.rj,a=$t,l=Qt,c=s.velocity,h=s.angularVelocity;s.force,s.torque;const u=n.velocity,d=n.angularVelocity;n.force,n.torque;const p=Jt,m=this.jacobianElementA,y=this.jacobianElementB,f=this.ni;o.cross(f,a),r.cross(f,l),f.negate(m.spatial),a.negate(m.rotational),y.spatial.copy(f),y.rotational.copy(l),p.copy(n.position),p.vadd(r,p),p.vsub(s.position,p),p.vsub(o,p);const v=f.dot(p),w=this.restitution+1;return-v*e-(w*u.dot(f)-w*c.dot(f)+d.dot(l)-h.dot(a))*i-t*this.computeGiMf()}getImpactVelocityAlongNormal(){const t=te,e=ee,i=ie,s=se,n=ne;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,s),this.bi.getVelocityAtWorldPoint(i,t),this.bj.getVelocityAtWorldPoint(s,e),t.vsub(e,n),this.ni.dot(n)}}const $t=new o,Qt=new o,Jt=new o,te=new o,ee=new o,ie=new o,se=new o,ne=new o;class oe extends Vt{constructor(t,e,i,s,n){void 0===e&&(e=new o),void 0===s&&(s=new o),void 0===n&&(n=1e6),super(t,i),this.pivotA=e.clone(),this.pivotB=s.clone();const r=this.equationX=new Zt(t,i),a=this.equationY=new Zt(t,i),l=this.equationZ=new Zt(t,i);this.equations.push(r,a,l),r.minForce=a.minForce=l.minForce=-n,r.maxForce=a.maxForce=l.maxForce=n,r.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,i=this.equationX,s=this.equationY,n=this.equationZ;t.quaternion.vmult(this.pivotA,i.ri),e.quaternion.vmult(this.pivotB,i.rj),s.ri.copy(i.ri),s.rj.copy(i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj)}}new o,new o;new o,new o;new o,new o;new o,new o;new o,new o;class re extends Ht{constructor(t,e,i){super(t,e,-i,i),this.ri=new o,this.rj=new o,this.t=new o}computeB(t){this.a;const e=this.b;this.bi,this.bj;const i=this.ri,s=this.rj,n=ae,o=le,r=this.t;i.cross(r,n),s.cross(r,o);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),n.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(o);return-this.computeGW()*e-t*this.computeGiMf()}}const ae=new o,le=new o;class ce{constructor(t,e,i){i=Wt.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=ce.idCounter++,this.materials=[t,e],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}ce.idCounter=0;class he{constructor(t){void 0===t&&(t={});let e="";"string"==typeof t&&(e=t,t={}),this.name=e,this.id=he.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}}he.idCounter=0;new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o;class ue{constructor(t){void 0===t&&(t={}),t=Wt.defaults(t,{chassisConnectionPointLocal:new o,chassisConnectionPointWorld:new o,directionLocal:new o,directionWorld:new o,axleLocal:new o,axleWorld:new o,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:10.5,forwardAcceleration:1,sideAcceleration:1,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,slipInfo:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.forwardAcceleration=t.forwardAcceleration,this.sideAcceleration=t.sideAcceleration,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.slipInfo=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new tt,this.worldTransform=new w,this.isInContact=!1}updateWheel(t){const e=this.raycastResult;if(this.isInContact){const i=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,pe),t.getVelocityAtWorldPoint(pe,de);const s=e.hitNormalWorld.dot(de);if(i>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{const t=-1/i;this.suspensionRelativeVelocity=s*t,this.clippedInvContactDotSuspension=t}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}}const de=new o,pe=new o;class me{constructor(t){this.chassisBody=t.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=void 0!==t.indexRightAxis?t.indexRightAxis:2,this.indexForwardAxis=void 0!==t.indexForwardAxis?t.indexForwardAxis:0,this.indexUpAxis=void 0!==t.indexUpAxis?t.indexUpAxis:1,this.constraints=[],this.preStepCallback=()=>{},this.currentVehicleSpeedKmHour=0,this.numWheelsOnGround=0}addWheel(t){void 0===t&&(t={});const e=new ue(t),i=this.wheelInfos.length;return this.wheelInfos.push(e),i}setSteeringValue(t,e){this.wheelInfos[e].steering=t}applyEngineForce(t,e){this.wheelInfos[e].engineForce=t}setBrake(t,e){this.wheelInfos[e].brake=t}addToWorld(t){t.addBody(this.chassisBody);const e=this;this.preStepCallback=()=>{e.updateVehicle(t.dt)},t.addEventListener("preStep",this.preStepCallback),this.world=t}getVehicleAxisWorld(t,e){e.set(0===t?1:0,1===t?1:0,2===t?1:0),this.chassisBody.vectorToWorldFrame(e,e)}updateVehicle(t){const e=this.wheelInfos,i=e.length,s=this.chassisBody;for(let t=0;t<i;t++)this.updateWheelTransform(t);this.currentVehicleSpeedKmHour=3.6*s.velocity.length();const n=new o;this.getVehicleAxisWorld(this.indexForwardAxis,n),n.dot(s.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(let t=0;t<i;t++)this.castRay(e[t]);this.updateSuspension(t);const r=new o,a=new o;for(let n=0;n<i;n++){const i=e[n];let o=i.suspensionForce;o>i.maxSuspensionForce&&(o=i.maxSuspensionForce),i.raycastResult.hitNormalWorld.scale(o*t,r),i.raycastResult.hitPointWorld.vsub(s.position,a),s.applyImpulse(r,a)}this.updateFriction(t);const l=new o,c=new o,h=new o;for(let n=0;n<i;n++){const i=e[n];s.getVelocityAtWorldPoint(i.chassisConnectionPointWorld,h);let o=1;if(1===this.indexUpAxis)o=-1;if(i.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,c);const e=c.dot(i.raycastResult.hitNormalWorld);i.raycastResult.hitNormalWorld.scale(e,l),c.vsub(l,c);const s=c.dot(h);i.deltaRotation=o*s*t/i.radius}!i.sliding&&i.isInContact||0===i.engineForce||!i.useCustomSlidingRotationalSpeed||(i.deltaRotation=(i.engineForce>0?1:-1)*i.customSlidingRotationalSpeed*t),Math.abs(i.brake)>Math.abs(i.engineForce)&&(i.deltaRotation=0),i.rotation+=i.deltaRotation,i.deltaRotation*=.99}}updateSuspension(t){const e=this.chassisBody.mass,i=this.wheelInfos,s=i.length;for(let t=0;t<s;t++){const s=i[t];if(s.isInContact){let t;const i=s.suspensionRestLength-s.suspensionLength;t=s.suspensionStiffness*i*s.clippedInvContactDotSuspension;const n=s.suspensionRelativeVelocity;let o;o=n<0?s.dampingCompression:s.dampingRelaxation,t-=o*n,s.suspensionForce=t*e,s.suspensionForce<0&&(s.suspensionForce=0)}else s.suspensionForce=0}}removeFromWorld(t){this.constraints,t.removeBody(this.chassisBody),t.removeEventListener("preStep",this.preStepCallback),this.world=null}castRay(t){const e=we,i=ge;this.updateWheelTransformWorld(t);const s=this.chassisBody;let n=-1;const r=t.suspensionRestLength+t.radius;t.directionWorld.scale(r,e);const a=t.chassisConnectionPointWorld;a.vadd(e,i);const l=t.raycastResult;l.reset();const c=s.collisionResponse;s.collisionResponse=!1,this.world.rayTest(a,i,l),s.collisionResponse=c;const h=l.body;if(t.raycastResult.groundObject=0,h){n=l.distance,t.raycastResult.hitNormalWorld=l.hitNormalWorld,t.isInContact=!0;const e=l.distance;t.suspensionLength=e-t.radius;const i=t.suspensionRestLength-t.maxSuspensionTravel,r=t.suspensionRestLength+t.maxSuspensionTravel;t.suspensionLength<i&&(t.suspensionLength=i),t.suspensionLength>r&&(t.suspensionLength=r,t.raycastResult.reset());const a=t.raycastResult.hitNormalWorld.dot(t.directionWorld),c=new o;s.getVelocityAtWorldPoint(t.raycastResult.hitPointWorld,c);const h=t.raycastResult.hitNormalWorld.dot(c);if(a>=-.1)t.suspensionRelativeVelocity=0,t.clippedInvContactDotSuspension=10;else{const e=-1/a;t.suspensionRelativeVelocity=h*e,t.clippedInvContactDotSuspension=e}}else t.suspensionLength=t.suspensionRestLength+0*t.maxSuspensionTravel,t.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.raycastResult.hitNormalWorld),t.clippedInvContactDotSuspension=1;return n}updateWheelTransformWorld(t){t.isInContact=!1;const e=this.chassisBody;e.pointToWorldFrame(t.chassisConnectionPointLocal,t.chassisConnectionPointWorld),e.vectorToWorldFrame(t.directionLocal,t.directionWorld),e.vectorToWorldFrame(t.axleLocal,t.axleWorld)}updateWheelTransform(t){const e=ye,i=fe,s=ve,n=this.wheelInfos[t];this.updateWheelTransformWorld(n),n.directionLocal.scale(-1,e),i.copy(n.axleLocal),e.cross(i,s),s.normalize(),i.normalize();const o=n.steering,r=new m;r.setFromAxisAngle(e,o);const a=new m;a.setFromAxisAngle(i,n.rotation);const l=n.worldTransform.quaternion;this.chassisBody.quaternion.mult(r,l),l.mult(a,l),l.normalize();const c=n.worldTransform.position;c.copy(n.directionWorld),c.scale(n.suspensionLength,c),c.vadd(n.chassisConnectionPointWorld,c)}getWheelTransformWorld(t){return this.wheelInfos[t].worldTransform}updateFriction(t){const e=xe,i=this.wheelInfos,s=i.length,n=this.chassisBody,r=Se,a=Ee;this.numWheelsOnGround=0;for(let t=0;t<s;t++){const e=i[t];e.raycastResult.body&&this.numWheelsOnGround++,e.sideImpulse=0,e.forwardImpulse=0,r[t]||(r[t]=new o),a[t]||(a[t]=new o)}for(let t=0;t<s;t++){const s=i[t],o=s.raycastResult.body;if(o){const i=a[t];this.getWheelTransformWorld(t).vectorToWorldFrame(be[this.indexRightAxis],i);const l=s.raycastResult.hitNormalWorld,c=i.dot(l);l.scale(c,e),i.vsub(e,i),i.normalize(),l.cross(i,r[t]),r[t].normalize(),s.sideImpulse=je(n,s.raycastResult.hitPointWorld,o,s.raycastResult.hitPointWorld,i),s.sideImpulse*=Ae}}this.sliding=!1;for(let e=0;e<s;e++){const s=i[e],o=s.raycastResult.body;let a=0;if(s.slipInfo=1,o){const i=0,l=s.brake?s.brake:i;a=Ce(n,o,s.raycastResult.hitPointWorld,r[e],l),a+=s.engineForce*t;const c=l/a;s.slipInfo*=c}if(s.forwardImpulse=0,s.skidInfo=1,o){s.skidInfo=1;const e=s.suspensionForce*t*s.frictionSlip,i=e*e;s.forwardImpulse=a;const n=.5*s.forwardImpulse/s.forwardAcceleration,o=1*s.sideImpulse/s.sideAcceleration,r=n*n+o*o;if(s.sliding=!1,r>i){this.sliding=!0,s.sliding=!0;const t=e/Math.sqrt(r);s.skidInfo*=t}}}if(this.sliding)for(let t=0;t<s;t++){const e=i[t];0!==e.sideImpulse&&e.skidInfo<1&&(e.forwardImpulse*=e.skidInfo,e.sideImpulse*=e.skidInfo)}for(let t=0;t<s;t++){const e=i[t],s=new o;if(e.raycastResult.hitPointWorld.vsub(n.position,s),0!==e.forwardImpulse){const i=new o;r[t].scale(e.forwardImpulse,i),n.applyImpulse(i,s)}if(0!==e.sideImpulse){const i=e.raycastResult.body,r=new o;e.raycastResult.hitPointWorld.vsub(i.position,r);const l=new o;a[t].scale(e.sideImpulse,l),n.vectorToLocalFrame(s,s),s["xyz"[this.indexUpAxis]]*=e.rollInfluence,n.vectorToWorldFrame(s,s),n.applyImpulse(l,s),l.scale(-1,l),i.applyImpulse(l,r)}}}}new o,new o,new o;const ye=new o,fe=new o,ve=new o;new ut,new o;const we=new o,ge=new o,be=[new o(1,0,0),new o(0,1,0),new o(0,0,1)],xe=new o,Ee=[],Se=[],Ae=1,Re=new o,ze=new o,Me=new o;function Ce(t,e,i,s,n){let o=0;const r=i,a=Re,l=ze,c=Me;t.getVelocityAtWorldPoint(r,a),e.getVelocityAtWorldPoint(r,l),a.vsub(l,c);return o=-s.dot(c)*(1/(Be(t,i,s)+Be(e,i,s))),n<o&&(o=n),o<-n&&(o=-n),o}const Pe=new o,Te=new o,Fe=new o,Ie=new o;function Be(t,e,i){const s=Pe,n=Te,o=Fe,r=Ie;return e.vsub(t.position,s),s.cross(i,n),t.invInertiaWorld.vmult(n,r),r.cross(s,o),t.invMass+i.dot(o)}const Le=new o,Ne=new o,qe=new o;function je(t,e,i,s,n){if(n.lengthSquared()>1.1)return 0;const o=Le,r=Ne,a=qe;t.getVelocityAtWorldPoint(e,o),i.getVelocityAtWorldPoint(s,r),o.vsub(r,a);return-.2*n.dot(a)*(1/(t.invMass+i.invMass))}class ke extends v{constructor(t){if(super({type:v.types.SPHERE}),this.radius=void 0!==t?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){void 0===e&&(e=new o);const i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,i,s){const n=this.radius,o=["x","y","z"];for(let e=0;e<o.length;e++){const r=o[e];i[r]=t[r]-n,s[r]=t[r]+n}}}new o,new o;new o,new o,new o,new o,new o,new o,new o;class Oe extends b{constructor(t,e,i,s){if(void 0===t&&(t=1),void 0===e&&(e=1),void 0===i&&(i=1),void 0===s&&(s=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const n=s,r=[],a=[],l=[],c=[],h=[],u=Math.cos,d=Math.sin;r.push(new o(-e*d(0),.5*-i,e*u(0))),c.push(0),r.push(new o(-t*d(0),.5*i,t*u(0))),h.push(1);for(let s=0;s<n;s++){const p=2*Math.PI/n*(s+1),m=2*Math.PI/n*(s+.5);s<n-1?(r.push(new o(-e*d(p),.5*-i,e*u(p))),c.push(2*s+2),r.push(new o(-t*d(p),.5*i,t*u(p))),h.push(2*s+3),l.push([2*s,2*s+1,2*s+3,2*s+2])):l.push([2*s,2*s+1,1,0]),(n%2==1||s<n/2)&&a.push(new o(-d(m),0,u(m)))}l.push(c),a.push(new o(0,1,0));const p=[];for(let t=0;t<h.length;t++)p.push(h[h.length-t-1]);l.push(p),super({vertices:r,faces:l,axes:a}),this.type=v.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=i,this.numSegments=s}}new o;new o,new o,new o,new o,new o,new o,new o,new o,new o;new o,new c;new o,new c,new o,new o,new o,new o,new o,new o,new o,new c,new o,new w,new c;class We{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){!t.enabled||t.bi.isTrigger||t.bj.isTrigger||this.equations.push(t)}removeEquation(t){const e=this.equations,i=e.indexOf(t);-1!==i&&e.splice(i,1)}removeAllEquations(){this.equations.length=0}}class Ve extends We{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let i=0;const s=this.iterations,n=this.tolerance*this.tolerance,o=this.equations,r=o.length,a=e.bodies,l=a.length,c=t;let h,u,d,p,m,y;if(0!==r)for(let t=0;t!==l;t++)a[t].updateSolveMassProperties();const f=He,v=Ye,w=De;f.length=r,v.length=r,w.length=r;for(let t=0;t!==r;t++){const e=o[t];w[t]=0,v[t]=e.computeB(c),f[t]=1/e.computeC()}if(0!==r){for(let t=0;t!==l;t++){const e=a[t],i=e.vlambda,s=e.wlambda;i.set(0,0,0),s.set(0,0,0)}for(i=0;i!==s;i++){p=0;for(let t=0;t!==r;t++){const e=o[t];h=v[t],u=f[t],y=w[t],m=e.computeGWlambda(),d=u*(h-m-e.eps*y),y+d<e.minForce?d=e.minForce-y:y+d>e.maxForce&&(d=e.maxForce-y),w[t]+=d,p+=d>0?d:-d,e.addToWlambda(d)}if(p*p<n)break}for(let t=0;t!==l;t++){const e=a[t],i=e.velocity,s=e.angularVelocity;e.vlambda.vmul(e.linearFactor,e.vlambda),i.vadd(e.vlambda,i),e.wlambda.vmul(e.angularFactor,e.wlambda),s.vadd(e.wlambda,s)}let t=o.length;const e=1/c;for(;t--;)o[t].multiplier=w[t]*e}return i}}const De=[],He=[],Ye=[];L.STATIC;class _e{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class Ue extends _e{constructor(){super(...arguments),this.type=o}constructObject(){return new o}}const Ge=v.types.SPHERE,Xe=v.types.SPHERE|v.types.PLANE,Ke=v.types.BOX|v.types.BOX,Ze=v.types.SPHERE|v.types.BOX,$e=v.types.PLANE|v.types.BOX,Qe=v.types.CONVEXPOLYHEDRON,Je=v.types.SPHERE|v.types.CONVEXPOLYHEDRON,ti=v.types.PLANE|v.types.CONVEXPOLYHEDRON,ei=v.types.BOX|v.types.CONVEXPOLYHEDRON,ii=v.types.SPHERE|v.types.HEIGHTFIELD,si=v.types.BOX|v.types.HEIGHTFIELD,ni=v.types.CONVEXPOLYHEDRON|v.types.HEIGHTFIELD,oi=v.types.PARTICLE|v.types.SPHERE,ri=v.types.PLANE|v.types.PARTICLE,ai=v.types.BOX|v.types.PARTICLE,li=v.types.PARTICLE|v.types.CONVEXPOLYHEDRON,ci=v.types.CYLINDER,hi=v.types.SPHERE|v.types.CYLINDER,ui=v.types.PLANE|v.types.CYLINDER,di=v.types.BOX|v.types.CYLINDER,pi=v.types.CONVEXPOLYHEDRON|v.types.CYLINDER,mi=v.types.HEIGHTFIELD|v.types.CYLINDER,yi=v.types.PARTICLE|v.types.CYLINDER,fi=v.types.SPHERE|v.types.TRIMESH,vi=v.types.PLANE|v.types.TRIMESH;class wi{get[Ge](){return this.sphereSphere}get[Xe](){return this.spherePlane}get[Ke](){return this.boxBox}get[Ze](){return this.sphereBox}get[$e](){return this.planeBox}get[Qe](){return this.convexConvex}get[Je](){return this.sphereConvex}get[ti](){return this.planeConvex}get[ei](){return this.boxConvex}get[ii](){return this.sphereHeightfield}get[si](){return this.boxHeightfield}get[ni](){return this.convexHeightfield}get[oi](){return this.sphereParticle}get[ri](){return this.planeParticle}get[ai](){return this.boxParticle}get[li](){return this.convexParticle}get[ci](){return this.convexConvex}get[hi](){return this.sphereConvex}get[ui](){return this.planeConvex}get[di](){return this.boxConvex}get[pi](){return this.convexConvex}get[mi](){return this.heightfieldCylinder}get[yi](){return this.particleCylinder}get[fi](){return this.sphereTrimesh}get[vi](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new Ue,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,i,s,n,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new Zt(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&i.collisionResponse&&s.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=i.material||t.material,c=s.material||e.material;return l&&c&&l.restitution>=0&&c.restitution>=0&&(r.restitution=l.restitution*c.restitution),r.si=n||i,r.sj=o||s,r}createFrictionEquationsFromContact(t,e){const i=t.bi,s=t.bj,n=t.si,o=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const c=n.material||i.material,h=o.material||s.material;if(c&&h&&c.friction>=0&&h.friction>=0&&(l=c.friction*h.friction),l>0){const n=l*(r.frictionGravity||r.gravity).length();let o=i.invMass+s.invMass;o>0&&(o=1/o);const c=this.frictionEquationPool,h=c.length?c.pop():new re(i,s,n*o),u=c.length?c.pop():new re(i,s,n*o);return h.bi=u.bi=i,h.bj=u.bj=s,h.minForce=u.minForce=-n*o,h.maxForce=u.maxForce=n*o,h.ri.copy(t.ri),h.rj.copy(t.rj),u.ri.copy(t.ri),u.rj.copy(t.rj),t.ni.tangents(h.t,u.t),h.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),u.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),h.enabled=u.enabled=t.enabled,e.push(h,u),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||1===t)return;const i=this.frictionResult[this.frictionResult.length-2],s=this.frictionResult[this.frictionResult.length-1];gi.setZero(),bi.setZero(),xi.setZero();const n=e.bi;e.bj;for(let i=0;i!==t;i++)e=this.result[this.result.length-1-i],e.bi!==n?(gi.vadd(e.ni,gi),bi.vadd(e.ri,bi),xi.vadd(e.rj,xi)):(gi.vsub(e.ni,gi),bi.vadd(e.rj,bi),xi.vadd(e.ri,xi));const o=1/t;bi.scale(o,i.ri),xi.scale(o,i.rj),s.ri.copy(i.ri),s.rj.copy(i.rj),gi.normalize(),gi.tangents(i.t,s.t)}getContacts(t,e,i,s,n,o,r){this.contactPointPool=n,this.frictionEquationPool=r,this.result=s,this.frictionResult=o;const a=Ai,l=Ri,c=Ei,h=Si;for(let s=0,n=t.length;s!==n;s++){const n=t[s],o=e[s];let r=null;n.material&&o.material&&(r=i.getContactMaterial(n.material,o.material)||null);const u=n.type&L.KINEMATIC&&o.type&L.STATIC||n.type&L.STATIC&&o.type&L.KINEMATIC||n.type&L.KINEMATIC&&o.type&L.KINEMATIC;for(let t=0;t<n.shapes.length;t++){n.quaternion.mult(n.shapeOrientations[t],a),n.quaternion.vmult(n.shapeOffsets[t],c),c.vadd(n.position,c);const e=n.shapes[t];for(let t=0;t<o.shapes.length;t++){o.quaternion.mult(o.shapeOrientations[t],l),o.quaternion.vmult(o.shapeOffsets[t],h),h.vadd(o.position,h);const s=o.shapes[t];if(!(e.collisionFilterMask&s.collisionFilterGroup&&s.collisionFilterMask&e.collisionFilterGroup))continue;if(c.distanceTo(h)>e.boundingSphereRadius+s.boundingSphereRadius)continue;let d=null;e.material&&s.material&&(d=i.getContactMaterial(e.material,s.material)||null),this.currentContactMaterial=d||r||i.defaultContactMaterial;const p=this[e.type|s.type];if(p){let t=!1;t=e.type<s.type?p.call(this,e,s,c,h,a,l,n,o,e,s,u):p.call(this,s,e,h,c,l,a,o,n,e,s,u),t&&u&&(i.shapeOverlapKeeper.set(e.id,s.id),i.bodyOverlapKeeper.set(n.id,o.id))}}}}}sphereSphere(t,e,i,s,n,o,r,a,l,c,h){if(h)return i.distanceSquared(s)<(t.radius+e.radius)**2;const u=this.createContactEquation(r,a,t,e,l,c);s.vsub(i,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(t.radius,u.ri),u.rj.scale(-e.radius,u.rj),u.ri.vadd(i,u.ri),u.ri.vsub(r.position,u.ri),u.rj.vadd(s,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(t,e,i,s,n,o,r,a,l,c,h){const u=this.createContactEquation(r,a,t,e,l,c);if(u.ni.set(0,0,1),o.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(t.radius,u.ri),i.vsub(s,Yi),u.ni.scale(u.ni.dot(Yi),_i),Yi.vsub(_i,u.rj),-Yi.dot(u.ni)<=t.radius){if(h)return!0;const t=u.ri,e=u.rj;t.vadd(i,t),t.vsub(r.position,t),e.vadd(s,e),e.vsub(a.position,e),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(t,e,i,s,n,o,r,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,i,s,n,o,r,a,t,e,h)}sphereBox(t,e,i,s,n,o,r,a,l,c,h){const u=this.v3pool,d=ts;i.vsub(s,Zi),e.getSideNormals(d,o);const p=t.radius;let m=!1;const y=is,f=ss,v=ns;let w=null,g=0,b=0,x=0,E=null;for(let t=0,e=d.length;t!==e&&!1===m;t++){const e=$i;e.copy(d[t]);const i=e.length();e.normalize();const s=Zi.dot(e);if(s<i+p&&s>0){const n=Qi,o=Ji;n.copy(d[(t+1)%3]),o.copy(d[(t+2)%3]);const r=n.length(),a=o.length();n.normalize(),o.normalize();const l=Zi.dot(n),c=Zi.dot(o);if(l<r&&l>-r&&c<a&&c>-a){const t=Math.abs(s-i-p);if((null===E||t<E)&&(E=t,b=l,x=c,w=i,y.copy(e),f.copy(n),v.copy(o),g++,h))return!0}}}if(g){m=!0;const n=this.createContactEquation(r,a,t,e,l,c);y.scale(-p,n.ri),n.ni.copy(y),n.ni.negate(n.ni),y.scale(w,y),f.scale(b,f),y.vadd(f,y),v.scale(x,v),y.vadd(v,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}let S=u.get();const A=es;for(let n=0;2!==n&&!m;n++)for(let o=0;2!==o&&!m;o++)for(let u=0;2!==u&&!m;u++)if(S.set(0,0,0),n?S.vadd(d[0],S):S.vsub(d[0],S),o?S.vadd(d[1],S):S.vsub(d[1],S),u?S.vadd(d[2],S):S.vsub(d[2],S),s.vadd(S,A),A.vsub(i,A),A.lengthSquared()<p*p){if(h)return!0;m=!0;const n=this.createContactEquation(r,a,t,e,l,c);n.ri.copy(A),n.ri.normalize(),n.ni.copy(n.ri),n.ri.scale(p,n.ri),n.rj.copy(S),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}u.release(S),S=null;const R=u.get(),z=u.get(),M=u.get(),C=u.get(),P=u.get(),T=d.length;for(let n=0;n!==T&&!m;n++)for(let o=0;o!==T&&!m;o++)if(n%3!=o%3){d[o].cross(d[n],R),R.normalize(),d[n].vadd(d[o],z),M.copy(i),M.vsub(z,M),M.vsub(s,M);const u=M.dot(R);R.scale(u,C);let y=0;for(;y===n%3||y===o%3;)y++;P.copy(i),P.vsub(C,P),P.vsub(z,P),P.vsub(s,P);const f=Math.abs(u),v=P.length();if(f<d[y].length()&&v<p){if(h)return!0;m=!0;const n=this.createContactEquation(r,a,t,e,l,c);z.vadd(C,n.rj),n.rj.copy(n.rj),P.negate(n.ni),n.ni.normalize(),n.ri.copy(n.rj),n.ri.vadd(s,n.ri),n.ri.vsub(i,n.ri),n.ri.normalize(),n.ri.scale(p,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}u.release(R,z,M,C,P)}planeBox(t,e,i,s,n,o,r,a,l,c,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,i,s,n,o,r,a,t,e,h)}convexConvex(t,e,i,s,n,o,r,a,l,c,h,u,d){const p=gs;if(!(i.distanceTo(s)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,i,n,s,o,p,u,d)){const u=[],d=bs;t.clipAgainstHull(i,n,e,s,o,p,-100,100,u);let m=0;for(let n=0;n!==u.length;n++){if(h)return!0;const o=this.createContactEquation(r,a,t,e,l,c),y=o.ri,f=o.rj;p.negate(o.ni),u[n].normal.negate(d),d.scale(u[n].depth,d),u[n].point.vadd(d,y),f.copy(u[n].point),y.vsub(i,y),f.vsub(s,f),y.vadd(i,y),y.vsub(r.position,y),f.vadd(s,f),f.vsub(a.position,f),this.result.push(o),m++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(o,this.frictionResult)}this.enableFrictionReduction&&m&&this.createFrictionFromAverage(m)}}sphereConvex(t,e,i,s,n,o,r,a,l,c,h){const u=this.v3pool;i.vsub(s,os);const d=e.faceNormals,p=e.faces,m=e.vertices,y=t.radius;let f=!1;for(let n=0;n!==m.length;n++){const u=m[n],d=cs;o.vmult(u,d),s.vadd(d,d);const p=ls;if(d.vsub(i,p),p.lengthSquared()<y*y){if(h)return!0;f=!0;const n=this.createContactEquation(r,a,t,e,l,c);return n.ri.copy(p),n.ri.normalize(),n.ni.copy(n.ri),n.ri.scale(y,n.ri),d.vsub(s,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),void this.createFrictionEquationsFromContact(n,this.frictionResult)}}for(let n=0,v=p.length;n!==v&&!1===f;n++){const v=d[n],w=p[n],g=hs;o.vmult(v,g);const b=us;o.vmult(m[w[0]],b),b.vadd(s,b);const x=ds;g.scale(-y,x),i.vadd(x,x);const E=ps;x.vsub(b,E);const S=E.dot(g),A=ms;if(i.vsub(b,A),S<0&&A.dot(g)>0){const n=[];for(let t=0,e=w.length;t!==e;t++){const e=u.get();o.vmult(m[w[t]],e),s.vadd(e,e),n.push(e)}if(Ki(n,g,i)){if(h)return!0;f=!0;const o=this.createContactEquation(r,a,t,e,l,c);g.scale(-y,o.ri),g.negate(o.ni);const d=u.get();g.scale(-S,d);const p=u.get();g.scale(-y,p),i.vsub(s,o.rj),o.rj.vadd(p,o.rj),o.rj.vadd(d,o.rj),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),u.release(d),u.release(p),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult);for(let t=0,e=n.length;t!==e;t++)u.release(n[t]);return}for(let d=0;d!==w.length;d++){const p=u.get(),f=u.get();o.vmult(m[w[(d+1)%w.length]],p),o.vmult(m[w[(d+2)%w.length]],f),s.vadd(p,p),s.vadd(f,f);const v=rs;f.vsub(p,v);const g=as;v.unit(g);const b=u.get(),x=u.get();i.vsub(p,x);const E=x.dot(g);g.scale(E,b),b.vadd(p,b);const S=u.get();if(b.vsub(i,S),E>0&&E*E<v.lengthSquared()&&S.lengthSquared()<y*y){if(h)return!0;const o=this.createContactEquation(r,a,t,e,l,c);b.vsub(s,o.rj),b.vsub(i,o.ni),o.ni.normalize(),o.ni.scale(y,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult);for(let t=0,e=n.length;t!==e;t++)u.release(n[t]);return u.release(p),u.release(f),u.release(b),u.release(S),void u.release(x)}u.release(p),u.release(f),u.release(b),u.release(S),u.release(x)}for(let t=0,e=n.length;t!==e;t++)u.release(n[t])}}}planeConvex(t,e,i,s,n,o,r,a,l,c,h){const u=ys,d=fs;d.set(0,0,1),n.vmult(d,d);let p=0;const m=vs;for(let n=0;n!==e.vertices.length;n++){u.copy(e.vertices[n]),o.vmult(u,u),s.vadd(u,u),u.vsub(i,m);if(d.dot(m)<=0){if(h)return!0;const n=this.createContactEquation(r,a,t,e,l,c),o=ws;d.scale(d.dot(m),o),u.vsub(o,o),o.vsub(i,n.ri),n.ni.copy(d),u.vsub(s,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(n,this.frictionResult)}}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,i,s,n,o,r,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,i,s,n,o,r,a,t,e,h)}sphereHeightfield(t,e,i,s,n,o,r,a,l,c,h){const u=e.data,d=t.radius,p=e.elementSize,m=Ls,y=Bs;w.pointToLocalFrame(s,o,i,y);let f=Math.floor((y.x-d)/p)-1,v=Math.ceil((y.x+d)/p)+1,g=Math.floor((y.y-d)/p)-1,b=Math.ceil((y.y+d)/p)+1;if(v<0||b<0||f>u.length||g>u[0].length)return;f<0&&(f=0),v<0&&(v=0),g<0&&(g=0),b<0&&(b=0),f>=u.length&&(f=u.length-1),v>=u.length&&(v=u.length-1),b>=u[0].length&&(b=u[0].length-1),g>=u[0].length&&(g=u[0].length-1);const x=[];e.getRectMinMax(f,g,v,b,x);const E=x[0],S=x[1];if(y.z-d>S||y.z+d<E)return;const A=this.result;for(let l=f;l<v;l++)for(let c=g;c<b;c++){const u=A.length;let d=!1;if(e.getConvexTrianglePillar(l,c,!1),w.pointToWorldFrame(s,o,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,m,n,o,r,a,t,e,h)),h&&d)return!0;if(e.getConvexTrianglePillar(l,c,!0),w.pointToWorldFrame(s,o,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,m,n,o,r,a,t,e,h)),h&&d)return!0;if(A.length-u>2)return}}boxHeightfield(t,e,i,s,n,o,r,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,i,s,n,o,r,a,t,e,h)}convexHeightfield(t,e,i,s,n,o,r,a,l,c,h){const u=e.data,d=e.elementSize,p=t.boundingSphereRadius,m=Fs,y=Is,f=Ts;w.pointToLocalFrame(s,o,i,f);let v=Math.floor((f.x-p)/d)-1,g=Math.ceil((f.x+p)/d)+1,b=Math.floor((f.y-p)/d)-1,x=Math.ceil((f.y+p)/d)+1;if(g<0||x<0||v>u.length||b>u[0].length)return;v<0&&(v=0),g<0&&(g=0),b<0&&(b=0),x<0&&(x=0),v>=u.length&&(v=u.length-1),g>=u.length&&(g=u.length-1),x>=u[0].length&&(x=u[0].length-1),b>=u[0].length&&(b=u[0].length-1);const E=[];e.getRectMinMax(v,b,g,x,E);const S=E[0],A=E[1];if(!(f.z-p>A||f.z+p<S))for(let l=v;l<g;l++)for(let c=b;c<x;c++){let u=!1;if(e.getConvexTrianglePillar(l,c,!1),w.pointToWorldFrame(s,o,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,m,n,o,r,a,null,null,h,y,null)),h&&u)return!0;if(e.getConvexTrianglePillar(l,c,!0),w.pointToWorldFrame(s,o,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,m,n,o,r,a,null,null,h,y,null)),h&&u)return!0}}sphereParticle(t,e,i,s,n,o,r,a,l,c,h){const u=As;u.set(0,0,1),s.vsub(i,u);if(u.lengthSquared()<=t.radius*t.radius){if(h)return!0;const i=this.createContactEquation(a,r,e,t,l,c);u.normalize(),i.rj.copy(u),i.rj.scale(t.radius,i.rj),i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}planeParticle(t,e,i,s,n,o,r,a,l,c,h){const u=xs;u.set(0,0,1),r.quaternion.vmult(u,u);const d=Es;s.vsub(r.position,d);if(u.dot(d)<=0){if(h)return!0;const i=this.createContactEquation(a,r,e,t,l,c);i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0);const n=Ss;u.scale(u.dot(s),n),s.vsub(n,n),i.rj.copy(n),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}boxParticle(t,e,i,s,n,o,r,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,i,s,n,o,r,a,t,e,h)}convexParticle(t,e,i,s,n,o,r,a,l,c,h){let u=-1;const d=Ms,p=Ps;let m=null;const y=zs;if(y.copy(s),y.vsub(i,y),n.conjugate(Rs),Rs.vmult(y,y),t.pointIsInside(y)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(i,n),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(n);for(let e=0,i=t.faces.length;e!==i;e++){const i=[t.worldVertices[t.faces[e][0]]],n=t.worldFaceNormals[e];s.vsub(i[0],Cs);const o=-n.dot(Cs);if(null===m||Math.abs(o)<Math.abs(m)){if(h)return!0;m=o,u=e,d.copy(n)}}if(-1!==u){const n=this.createContactEquation(a,r,e,t,l,c);d.scale(m,p),p.vadd(s,p),p.vsub(i,p),n.rj.copy(p),d.negate(n.ni),n.ri.set(0,0,0);const o=n.ri,h=n.rj;o.vadd(s,o),o.vsub(a.position,o),h.vadd(i,h),h.vsub(r.position,h),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,i,s,n,o,r,a,l,c,h){return this.convexHeightfield(e,t,s,i,o,n,a,r,l,c,h)}particleCylinder(t,e,i,s,n,o,r,a,l,c,h){return this.convexParticle(e,t,s,i,o,n,a,r,l,c,h)}sphereTrimesh(t,e,i,s,n,o,r,a,l,c,h){const u=Bi,d=Li,p=Ni,m=qi,y=ji,f=ki,v=Di,g=Ii,b=Ti,x=Hi;w.pointToLocalFrame(s,o,i,y);const E=t.radius;v.lowerBound.set(y.x-E,y.y-E,y.z-E),v.upperBound.set(y.x+E,y.y+E,y.z+E),e.getTrianglesInAABB(v,x);const S=Fi,A=t.radius*t.radius;for(let n=0;n<x.length;n++)for(let u=0;u<3;u++)if(e.getVertex(e.indices[3*x[n]+u],S),S.vsub(y,b),b.lengthSquared()<=A){if(g.copy(S),w.pointToWorldFrame(s,o,g,S),S.vsub(i,b),h)return!0;let n=this.createContactEquation(r,a,t,e,l,c);n.ni.copy(b),n.ni.normalize(),n.ri.copy(n.ni),n.ri.scale(t.radius,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.copy(S),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}for(let n=0;n<x.length;n++)for(let v=0;v<3;v++){e.getVertex(e.indices[3*x[n]+v],u),e.getVertex(e.indices[3*x[n]+(v+1)%3],d),d.vsub(u,p),y.vsub(d,f);const g=f.dot(p);y.vsub(u,f);let b=f.dot(p);if(b>0&&g<0){y.vsub(u,f),m.copy(p),m.normalize(),b=f.dot(m),m.scale(b,f),f.vadd(u,f);if(f.distanceTo(y)<t.radius){if(h)return!0;const n=this.createContactEquation(r,a,t,e,l,c);f.vsub(y,n.ni),n.ni.normalize(),n.ni.scale(t.radius,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),w.pointToWorldFrame(s,o,f,f),f.vsub(a.position,n.rj),w.vectorToWorldFrame(o,n.ni,n.ni),w.vectorToWorldFrame(o,n.ri,n.ri),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}}const R=Oi,z=Wi,M=Vi,C=Pi;for(let n=0,u=x.length;n!==u;n++){e.getTriangleVertices(x[n],R,z,M),e.getNormal(x[n],C),y.vsub(R,f);let u=f.dot(C);if(C.scale(u,f),y.vsub(f,f),u=f.distanceTo(y),ut.pointInTriangle(f,R,z,M)&&u<t.radius){if(h)return!0;let n=this.createContactEquation(r,a,t,e,l,c);f.vsub(y,n.ni),n.ni.normalize(),n.ni.scale(t.radius,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),w.pointToWorldFrame(s,o,f,f),f.vsub(a.position,n.rj),w.vectorToWorldFrame(o,n.ni,n.ni),w.vectorToWorldFrame(o,n.ri,n.ri),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}x.length=0}planeTrimesh(t,e,i,s,n,r,a,l,c,h,u){const d=new o,p=zi;p.set(0,0,1),n.vmult(p,p);for(let n=0;n<e.vertices.length/3;n++){e.getVertex(n,d);const m=new o;m.copy(d),w.pointToWorldFrame(s,r,m,d);const y=Mi;d.vsub(i,y);if(p.dot(y)<=0){if(u)return!0;const i=this.createContactEquation(a,l,t,e,c,h);i.ni.copy(p);const s=Ci;p.scale(y.dot(p),s),d.vsub(s,s),i.ri.copy(s),i.ri.vsub(a.position,i.ri),i.rj.copy(d),i.rj.vsub(l.position,i.rj),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}}}const gi=new o,bi=new o,xi=new o,Ei=new o,Si=new o,Ai=new m,Ri=new m,zi=new o,Mi=new o,Ci=new o,Pi=new o,Ti=new o;new o;const Fi=new o,Ii=new o,Bi=new o,Li=new o,Ni=new o,qi=new o,ji=new o,ki=new o,Oi=new o,Wi=new o,Vi=new o,Di=new c,Hi=[],Yi=new o,_i=new o,Ui=new o,Gi=new o,Xi=new o;function Ki(t,e,i){let s=null;const n=t.length;for(let o=0;o!==n;o++){const r=t[o],a=Ui;t[(o+1)%n].vsub(r,a);const l=Gi;a.cross(e,l);const c=Xi;i.vsub(r,c);const h=l.dot(c);if(!(null===s||h>0&&!0===s||h<=0&&!1===s))return!1;null===s&&(s=h>0)}return!0}const Zi=new o,$i=new o,Qi=new o,Ji=new o,ts=[new o,new o,new o,new o,new o,new o],es=new o,is=new o,ss=new o,ns=new o,os=new o,rs=new o,as=new o,ls=new o,cs=new o,hs=new o,us=new o,ds=new o,ps=new o,ms=new o;new o,new o;const ys=new o,fs=new o,vs=new o,ws=new o,gs=new o,bs=new o,xs=new o,Es=new o,Ss=new o,As=new o,Rs=new m,zs=new o;new o;const Ms=new o,Cs=new o,Ps=new o,Ts=new o,Fs=new o,Is=[0],Bs=new o,Ls=new o;class Ns{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const i=e;e=t,t=i}return t<<16|e}set(t,e){const i=this.getKey(t,e),s=this.current;let n=0;for(;i>s[n];)n++;if(i!==s[n]){for(let t=s.length-1;t>=n;t--)s[t+1]=s[t];s[n]=i}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const i=this.current,s=this.previous,n=i.length,o=s.length;let r=0;for(let e=0;e<n;e++){let n=!1;const o=i[e];for(;o>s[r];)r++;n=o===s[r],n||qs(t,o)}r=0;for(let t=0;t<o;t++){let n=!1;const o=s[t];for(;o>i[r];)r++;n=i[r]===o,n||qs(e,o)}}}function qs(t,e){t.push((4294901760&e)>>16,65535&e)}const js=(t,e)=>t<e?`${t}-${e}`:`${e}-${t}`;class ks{constructor(){this.data={keys:[]}}get(t,e){const i=js(t,e);return this.data[i]}set(t,e,i){const s=js(t,e);this.get(t,e)||this.data.keys.push(s),this.data[s]=i}delete(t,e){const i=js(t,e),s=this.data.keys.indexOf(i);-1!==s&&this.data.keys.splice(s,1),delete this.data[i]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){delete t[e.pop()]}}}class Os extends p{constructor(t){void 0===t&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==t.quatNormalizeSkip?t.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==t.quatNormalizeFast&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new o,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new o,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=void 0!==t.broadphase?t.broadphase:new J,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==t.solver?t.solver:new Ve,this.constraints=[],this.narrowphase=new wi(this),this.collisionMatrix=new d,this.collisionMatrixPrevious=new d,this.bodyOverlapKeeper=new Ns,this.shapeOverlapKeeper=new Ns,this.contactmaterials=[],this.contactMaterialTable=new ks,this.defaultMaterial=new he("default"),this.defaultContactMaterial=new ce(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)}rayTest(t,e,i){i instanceof tt?this.raycastClosest(t,e,{skipBackfaces:!0},i):this.raycastAll(t,e,{skipBackfaces:!0},i)}raycastAll(t,e,i,s){return void 0===i&&(i={}),i.mode=ut.ALL,i.from=t,i.to=e,i.callback=s,Ws.intersectWorld(this,i)}raycastAny(t,e,i,s){return void 0===i&&(i={}),i.mode=ut.ANY,i.from=t,i.to=e,i.result=s,Ws.intersectWorld(this,i)}raycastClosest(t,e,i,s){return void 0===i&&(i={}),i.mode=ut.CLOSEST,i.from=t,i.to=e,i.result=s,Ws.intersectWorld(this,i)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof L&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,i=this.bodies,s=i.indexOf(t);if(-1!==s){i.splice(s,1);for(let t=0;t!==i.length;t++)i[t].index=t;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let i=0;i<e.length;i++){const s=e[i].shapes;for(let e=0;e<s.length;e++){const i=s[e];if(i.id===t)return i}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);-1!==e&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){void 0===t&&(t=1/60),void 0===e&&(e=10);const i=Vs.now()/1e3;if(this.lastCallTime){const s=i-this.lastCallTime;this.step(t,s,e)}else this.step(t,void 0,e);this.lastCallTime=i}step(t,e,i){if(void 0===i&&(i=10),void 0===e)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const s=Vs.now();let n=0;for(;this.accumulator>=t&&n<i&&(this.internalStep(t),this.accumulator-=t,n++,!(Vs.now()-s>1e3*t)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let t=0;t!==this.bodies.length;t++){const e=this.bodies[t];e.previousPosition.lerp(e.position,o,e.interpolatedPosition),e.previousQuaternion.slerp(e.quaternion,o,e.interpolatedQuaternion),e.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,i=Gs,s=Xs,n=this.bodies.length,o=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,c=this.profile,h=L.DYNAMIC;let u=-1/0;const d=this.constraints,p=Us;a.length();const m=a.x,y=a.y,f=a.z;let v=0;for(l&&(u=Vs.now()),v=0;v!==n;v++){const t=o[v];if(t.type===h){const e=t.force,i=t.mass;e.x+=i*m,e.y+=i*y,e.z+=i*f}}for(let t=0,e=this.subsystems.length;t!==e;t++)this.subsystems[t].update();l&&(u=Vs.now()),i.length=0,s.length=0,this.broadphase.collisionPairs(this,i,s),l&&(c.broadphase=Vs.now()-u);let w=d.length;for(v=0;v!==w;v++){const t=d[v];if(!t.collideConnected)for(let e=i.length-1;e>=0;e-=1)(t.bodyA===i[e]&&t.bodyB===s[e]||t.bodyB===i[e]&&t.bodyA===s[e])&&(i.splice(e,1),s.splice(e,1))}this.collisionMatrixTick(),l&&(u=Vs.now());const g=_s,b=e.length;for(v=0;v!==b;v++)g.push(e[v]);e.length=0;const x=this.frictionEquations.length;for(v=0;v!==x;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,s,this,e,g,this.frictionEquations,p),l&&(c.narrowphase=Vs.now()-u),l&&(u=Vs.now()),v=0;v<this.frictionEquations.length;v++)r.addEquation(this.frictionEquations[v]);const E=e.length;for(let t=0;t!==E;t++){const i=e[t],s=i.bi,n=i.bj,o=i.si,a=i.sj;let l;if(l=s.material&&n.material&&this.getContactMaterial(s.material,n.material)||this.defaultContactMaterial,l.friction,s.material&&n.material&&(s.material.friction>=0&&n.material.friction>=0&&(s.material.friction,n.material.friction),s.material.restitution>=0&&n.material.restitution>=0&&(i.restitution=s.material.restitution*n.material.restitution)),r.addEquation(i),s.allowSleep&&s.type===L.DYNAMIC&&s.sleepState===L.SLEEPING&&n.sleepState===L.AWAKE&&n.type!==L.STATIC){n.velocity.lengthSquared()+n.angularVelocity.lengthSquared()>=2*n.sleepSpeedLimit**2&&(s.wakeUpAfterNarrowphase=!0)}if(n.allowSleep&&n.type===L.DYNAMIC&&n.sleepState===L.SLEEPING&&s.sleepState===L.AWAKE&&s.type!==L.STATIC){s.velocity.lengthSquared()+s.angularVelocity.lengthSquared()>=2*s.sleepSpeedLimit**2&&(n.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(s,n,!0),this.collisionMatrixPrevious.get(s,n)||(Ys.body=n,Ys.contact=i,s.dispatchEvent(Ys),Ys.body=s,n.dispatchEvent(Ys)),this.bodyOverlapKeeper.set(s.id,n.id),this.shapeOverlapKeeper.set(o.id,a.id)}for(this.emitContactEvents(),l&&(c.makeContactConstraints=Vs.now()-u,u=Vs.now()),v=0;v!==n;v++){const t=o[v];t.wakeUpAfterNarrowphase&&(t.wakeUp(),t.wakeUpAfterNarrowphase=!1)}for(w=d.length,v=0;v!==w;v++){const t=d[v];t.update();for(let e=0,i=t.equations.length;e!==i;e++){const i=t.equations[e];r.addEquation(i)}}r.solve(t,this),l&&(c.solve=Vs.now()-u),r.removeAllEquations();const S=Math.pow;for(v=0;v!==n;v++){const e=o[v];if(e.type&h){const i=S(1-e.linearDamping,t),s=e.velocity;s.scale(i,s);const n=e.angularVelocity;if(n){const i=S(1-e.angularDamping,t);n.scale(i,n)}}}this.dispatchEvent(Hs),l&&(u=Vs.now());const A=this.stepnumber%(this.quatNormalizeSkip+1)==0,R=this.quatNormalizeFast;for(v=0;v!==n;v++)o[v].integrate(t,A,R);this.clearForces(),this.broadphase.dirty=!0,l&&(c.integrate=Vs.now()-u),this.stepnumber+=1,this.dispatchEvent(Ds);let z=!0;if(this.allowSleep)for(z=!1,v=0;v!==n;v++){const t=o[v];t.sleepTick(this.time),t.sleepState!==L.SLEEPING&&(z=!0)}this.hasActiveBodies=z}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Ks,Zs),t){for(let t=0,e=Ks.length;t<e;t+=2)$s.bodyA=this.getBodyById(Ks[t]),$s.bodyB=this.getBodyById(Ks[t+1]),this.dispatchEvent($s);$s.bodyA=$s.bodyB=null}if(e){for(let t=0,e=Zs.length;t<e;t+=2)Qs.bodyA=this.getBodyById(Zs[t]),Qs.bodyB=this.getBodyById(Zs[t+1]),this.dispatchEvent(Qs);Qs.bodyA=Qs.bodyB=null}Ks.length=Zs.length=0;const i=this.hasAnyEventListener("beginShapeContact"),s=this.hasAnyEventListener("endShapeContact");if((i||s)&&this.shapeOverlapKeeper.getDiff(Ks,Zs),i){for(let t=0,e=Ks.length;t<e;t+=2){const e=this.getShapeById(Ks[t]),i=this.getShapeById(Ks[t+1]);Js.shapeA=e,Js.shapeB=i,e&&(Js.bodyA=e.body),i&&(Js.bodyB=i.body),this.dispatchEvent(Js)}Js.bodyA=Js.bodyB=Js.shapeA=Js.shapeB=null}if(s){for(let t=0,e=Zs.length;t<e;t+=2){const e=this.getShapeById(Zs[t]),i=this.getShapeById(Zs[t+1]);tn.shapeA=e,tn.shapeB=i,e&&(tn.bodyA=e.body),i&&(tn.bodyB=i.body),this.dispatchEvent(tn)}tn.bodyA=tn.bodyB=tn.shapeA=tn.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let i=0;i!==e;i++){const e=t[i];e.force,e.torque,e.force.set(0,0,0),e.torque.set(0,0,0)}}}new c;const Ws=new ut,Vs=globalThis.performance||{};if(!Vs.now){let t=Date.now();Vs.timing&&Vs.timing.navigationStart&&(t=Vs.timing.navigationStart),Vs.now=()=>Date.now()-t}new o;const Ds={type:"postStep"},Hs={type:"preStep"},Ys={type:L.COLLIDE_EVENT_NAME,body:null,contact:null},_s=[],Us=[],Gs=[],Xs=[],Ks=[],Zs=[],$s={type:"beginContact",bodyA:null,bodyB:null},Qs={type:"endContact",bodyA:null,bodyB:null},Js={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},tn={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};i(359),document.addEventListener("DOMContentLoaded",(function(){document.querySelector("a-scene").setAttribute("load-complete","")}));const en=new(e());document.getElementById("stats-container").appendChild(en.dom),AFRAME.registerComponent("load-complete",{init:function(){let t="QMIMI";document.querySelector("#scene");let e=performance.now()/1e3;const i=new Os({gravity:new o(0,-17.658,0)});i.gravity.set(0,-19.6,0);const s=new he("qmimi"),n=new he("ground"),r=new ce(s,n,{friction:.6,restitution:0,contactEquationStiffness:1e3});i.addContactMaterial(r);const a=new L({material:n,mass:0,friction:.6,position:new o(0,-1,0),quaternion:new m(0,0,0),type:P});a.addShape(new R(new o(1e3,1,1e3))),i.addBody(a);const l=document.querySelector("#basic_light"),c=document.querySelector("#qmimi"),h=new L({material:s,mass:1,friction:1,angleDamping:1,linearDamping:.8,position:new o(0,5,0),type:C});h.addShape(new ke(.8)),i.addBody(h);const u=.8,d=1e3;const p=document.querySelector("#car"),y=new L({mass:150,position:new o(10,5,10)});y.addShape(new R(new o(1.75,.8,1)));let f=new me({chassisBody:y}),v={radius:.4,directionLocal:new o(0,-1,0),suspensionStiffness:30,suspensionRestLength:.3,frictionSlip:1.4,dampingRelaxation:2.3,dampingCompression:4.4,maxSuspensionForce:1e5,rollInfluence:.01,axleLocal:new o(0,0,1),chassisConnectionPointLocal:new o(-1,0,1),maxSuspensionTravel:.3,customSlidingRotationalSpeed:-30,useCustomSlidingRotationalSpeed:!0},w=[],g=[document.querySelector("#car_wheel_fr").object3D,document.querySelector("#car_wheel_fl").object3D,document.querySelector("#car_wheel_br").object3D,document.querySelector("#car_wheel_bl").object3D],b=1.3,x=-.6,E=.9;v.chassisConnectionPointLocal.set(-b,x,E),f.addWheel(v),v.chassisConnectionPointLocal.set(-b,x,-E),f.addWheel(v),v.chassisConnectionPointLocal.set(b,x,E),f.addWheel(v),v.chassisConnectionPointLocal.set(b,x,-E),f.addWheel(v),f.addToWorld(i),f.wheelInfos.forEach((t=>{let e=new Oe(t.radius,t.radius,t.radius,18),n=new L({mass:0,material:s});n.type=L.KINEMATIC,n.collisionFilterGroup=0;let r=(new m).setFromEuler(-Math.PI/2,0,0);n.addShape(e,new o,r),w.push(n),i.addBody(n)}));const S=new oe(h,new o(0,0,0),y,new o(0,0,0)),A=document.querySelector("#basic_camera");let z=new THREE.Clock,M=0,T=0,F=0,I=0;let B,N,q,j,k,O,W,V,D,H="Stand",Y=1,_=0,U=0,G=0,X=0,K=1,Z=0,$=0,Q=0,J=0,tt=0;function et(){let s=new THREE.Vector3(h.position.x,h.position.y-.8,h.position.z);c.object3D.position.copy(s);let n,r,a,u=new THREE.Vector3(y.position.x,y.position.y,y.position.z);if(p.object3D.position.copy(y.position),p.object3D.quaternion.copy(y.quaternion),"QMIMI"==t?(n=s.x,r=s.y+5,a=s.z):(n=u.x,r=u.y+5,a=u.z),A.setAttribute("orbit-controls","target",n+" "+r+" "+a),l.object3D.position.set(n-30,r+30,a-30),"QMIMI"==t){let t=Math.atan2(h.position.x-document.querySelector("#basic_camera").getObject3D("camera").position.x,h.position.z-document.querySelector("#basic_camera").getObject3D("camera").position.z),e=new THREE.Euler(0,t,0,"XYZ"),i=new THREE.Vector3(F+I,0,M+T);if(i.applyEuler(e),tt=Math.sqrt(Math.pow(h.velocity.x,2)+Math.pow(h.velocity.z,2)),h){let t=new o(i.x,i.y,i.z);if(h.applyForce(t,new o),tt>.03){const t=new THREE.Quaternion;c.object3D.quaternion.set(t.x,t.y,t.z,t.w);let e=Math.atan2(h.velocity.x,h.velocity.z);c.object3D.rotation.y=e}}}else c.object3D.quaternion.copy(p.object3D.quaternion);it(),en.update();for(let t=0;t<f.wheelInfos.length;t++){f.updateWheelTransform(t);let e=f.wheelInfos[t].worldTransform,i=w[t];i.position.copy(e.position),i.quaternion.copy(e.quaternion),g[t].position.copy(e.position),g[t].quaternion.copy(e.quaternion)}let d=performance.now()/1e3,m=d-e;e=d,i.step(.016666666666666666,m),requestAnimationFrame(et)}function it(){"CAR"==t?H="Drive":"Jump"!==H&&(tt<1?"Stand"!==H&&(H="Stand"):tt>3?"Run"!==H&&(H="Run"):"Walk"!==H&&(H="Walk")),"Stand"==H?(K=1,Z=0,$=0,Q=0,J=0):"Walk"==H?(K=0,Z=1,$=0,Q=0,J=0):"Run"==H?(K=0,Z=0,$=1,Q=0,J=0):"Jump"==H?(K=0,Z=0,$=0,Q=1,J=0):"Drive"==H&&(K=0,Z=0,$=0,Q=0,J=1),D=z.getDelta(),B.update(D),Math.abs($-U)<.02?U=$:U+=($-U)/10,Math.abs(Z-_)<.02?_=Z:_+=(Z-_)/10,Math.abs(K-Y)<.02?Y=K:Y+=(K-Y)/10,Math.abs(Q-G)<.02?G=Q:G+=(Q-G)/5,Math.abs(J-X)<.02?X=J:X+=(J-X)/5,O.setEffectiveWeight(U),k.setEffectiveWeight(_),j.setEffectiveWeight(Y),W.setEffectiveWeight(G),V.setEffectiveWeight(X)}c.addEventListener("model-loaded",(t=>{N=c.components["gltf-model"].model.children[0],q=c.components["gltf-model"].model.animations,B=new THREE.AnimationMixer(N);for(let t=0;t<q.length;t++)"Run"==q[t].name?O=B.clipAction(q[t]):"Walk"==q[t].name?k=B.clipAction(q[t]):"Stand"==q[t].name?j=B.clipAction(q[t]):"Jump"==q[t].name?W=B.clipAction(q[t]):"Drive"==q[t].name&&(V=B.clipAction(q[t]));j.play(),k.play(),O.play(),V.play(),et()})),document.addEventListener("keydown",(function(e){if("QMIMI"==t)switch(e.key){case"w":M=24;break;case"s":T=-24;break;case"a":F=24;break;case"d":I=-24;break;case" ":"Jump"!==H&&"Jump"!==H&&(H="Jump",it(),setTimeout((function(){W.stop(),W.play();let t=h;t.type=L.DYNAMIC;let e=new o(0,800,0),i=new o(0,0,0);t.applyForce(e,i)}),60),setTimeout((function(){H="Run",it()}),1e3));break;case"q":!function(){t="CAR";let e=new o(y.position.x,y.position.y+.1,y.position.z);h.position.copy(e),i.addConstraint(S)}()}else if("CAR"==t)switch(e.key){case"w":f.applyEngineForce(-1e3,2),f.applyEngineForce(-1e3,3);break;case"s":f.applyEngineForce(d,2),f.applyEngineForce(d,3);break;case"a":f.setSteeringValue(u,0),f.setSteeringValue(u,1);break;case"d":f.setSteeringValue(-.8,0),f.setSteeringValue(-.8,1);break;case"b":f.setBrake(1e3,0),f.setBrake(1e3,1),f.setBrake(1e3,2),f.setBrake(1e3,3);break;case"q":!function(){t="QMIMI",i.removeConstraint(S);let e=new o(y.position.x,y.position.y+1,y.position.z);h.position.copy(e)}()}})),document.addEventListener("keyup",(function(e){if("QMIMI"==t)switch(e.key){case"w":M=0;break;case"s":T=0;break;case"a":F=0;break;case"d":I=0}else if("CAR"==t)switch(e.key){case"w":case"s":f.applyEngineForce(0,2),f.applyEngineForce(0,3);break;case"a":case"d":f.setSteeringValue(0,0),f.setSteeringValue(0,1);break;case"b":f.setBrake(0,0),f.setBrake(0,1),f.setBrake(0,2),f.setBrake(0,3)}}))}})}()}();
//# sourceMappingURL=index.js.map