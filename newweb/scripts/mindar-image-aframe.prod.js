/*! For license information please see mindar-image-aframe.prod.js.LICENSE.txt */
!function(){"use strict";class e{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class t{refCount(e){return n("refCount")}incRef(e){return n("incRef")}timerAvailable(){return!0}time(e){return n("time")}read(e){return n("read")}readSync(e){return n("readSync")}readToGPU(e,t){return n("readToGPU")}numDataIds(){return n("numDataIds")}disposeData(e,t){return n("disposeData")}write(e,t,s){return n("write")}move(e,t,s,r,a){return n("move")}memory(){return n("memory")}floatPrecision(){return n("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return n("dispose")}}function n(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function s(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t,n){return Math.max(e,Math.min(t,n))}function a(e){return e%2==0?e:e+1}function i(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function o(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function l(e,t,n=""){o(d(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function u(e){o(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function c(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||I(e)&&!n)for(let s=0;s<e.length;++s)c(e[s],t,n);else t.push(e);return t}function h(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function d(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function p(e){return e%1==0}function f(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function m(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function g(e,t=(e=>0),n,s=setTimeout){return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const l=t(i);null!=n&&i>=n?a():s(o,l)};o()}))}function b(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function y(e,t){const n=t.length;return o((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),o(e.every((e=>p(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function x(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:y(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function v(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function w(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function k(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function I(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function S(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function C(e){return"string"==typeof e||e instanceof String}function T(e){return"number"==typeof e}function N(e){return Array.isArray(e)?N(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":T(e)?"float32":C(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function R(e){return!!(e&&e.constructor&&e.call&&e.apply)}function G(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function L(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function W(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=W(e+t*o,i,n,s)}return r}function E(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function M(e,t){const n=$(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function $(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function z(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return E(e,new Float32Array(n));if("int32"===t)return E(e,new Int32Array(n));if("bool"===t)return E(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function F(e){e.forEach((t=>{o(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function V(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Z(e){return e&&e.then&&"function"==typeof e.then}const K="tfjsflags";class D{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=O,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(A().getBool("IS_TEST")||A().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];A().getBool("IS_TEST")||A().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Z(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);K in e&&e[K].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function O(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function A(){return B}let P,B=null;function H(){if(null==P){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");e=self}P=e}return P}function U(e,t){const n=function(){const e=H();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const _="Abs",Y="Acos",J="Acosh",Q="Add",j="AddN",q="All",ee="Any",te="ArgMax",ne="ArgMin",se="Asin",re="Asinh",ae="Atan",ie="Atanh",oe="Atan2",le="AvgPool",ue="AvgPoolGrad",ce="AvgPool3D",he="AvgPool3DGrad",de="BatchMatMul",pe="BatchToSpaceND",fe="Bincount",me="BroadcastArgs",ge="Cast",be="Ceil",ye="ClipByValue",xe="Complex",ve="ComplexAbs",we="Concat",ke="Conv2D",Ie="Conv2DBackpropFilter",Se="Conv2DBackpropInput",Ce="Conv3D",Te="Conv3DBackpropFilterV2",Ne="Conv3DBackpropInputV2",Re="Cos",Ge="Cosh",Le="Cumprod",We="Cumsum",Ee="CropAndResize",Me="DenseBincount",$e="DepthToSpace",ze="DepthwiseConv2dNative",Fe="DepthwiseConv2dNativeBackpropFilter",Xe="DepthwiseConv2dNativeBackpropInput",Ve="Diag",Ze="Dilation2D",Ke="Dilation2DBackpropInput",De="Dilation2DBackpropFilter",Oe="RealDiv",Ae="Einsum",Pe="Elu",Be="EluGrad",He="Erf",Ue="Equal",_e="Exp",Ye="ExpandDims",Je="Expm1",Qe="FFT",je="Fill",qe="FlipLeftRight",et="Floor",tt="FloorDiv",nt="FusedBatchNorm",st="GatherV2",rt="GatherNd",at="Greater",it="GreaterEqual",ot="Identity",lt="IFFT",ut="Imag",ct="IsFinite",ht="IsInf",dt="IsNan",pt="LeakyRelu",ft="Less",mt="LessEqual",gt="LinSpace",bt="Log",yt="Log1p",xt="LogicalAnd",vt="LogicalNot",wt="LogicalOr",kt="LRN",It="LRNGrad",St="Max",Ct="Maximum",Tt="MaxPool",Nt="MaxPoolGrad",Rt="MaxPool3D",Gt="MaxPool3DGrad",Lt="MaxPoolWithArgmax",Wt="Mean",Et="Min",Mt="Minimum",$t="MirrorPad",zt="Mod",Ft="Multinomial",Xt="Multiply",Vt="Neg",Zt="NotEqual",Kt="NonMaxSuppressionV3",Dt="NonMaxSuppressionV4",Ot="NonMaxSuppressionV5",At="OnesLike",Pt="OneHot",Bt="Pack",Ht="PadV2",Ut="Pow",_t="Prelu",Yt="Prod",Jt="RaggedGather",Qt="RaggedTensorToTensor",jt="Range",qt="Real",en="Reciprocal",tn="Relu",nn="Reshape",sn="ResizeNearestNeighbor",rn="ResizeNearestNeighborGrad",an="ResizeBilinear",on="ResizeBilinearGrad",ln="Relu6",un="Reverse",cn="Round",hn="Rsqrt",dn="ScatterNd",pn="SearchSorted",fn="Select",mn="Selu",gn="Slice",bn="Sin",yn="Sinh",xn="Sign",vn="Sigmoid",wn="Softplus",kn="Sqrt",In="Sum",Sn="SpaceToBatchND",Cn="SplitV",Tn="Softmax",Nn="SparseFillEmptyRows",Rn="SparseReshape",Gn="SparseSegmentMean",Ln="SparseSegmentSum",Wn="SparseToDense",En="SquaredDifference",Mn="Square",$n="StridedSlice",zn="StringNGrams",Fn="StringSplit",Xn="StringToHashBucketFast",Vn="Sub",Zn="Tan",Kn="Tanh",Dn="Tile",On="TopK",An="Transform",Pn="Transpose",Bn="Unique",Hn="Unpack",Un="UnsortedSegmentSum",_n="ZerosLike",Yn="Step",Jn="FromPixels",Qn="RotateWithOffset",jn="_FusedMatMul",qn="FusedConv2D",es="FusedDepthwiseConv2D";function ts(...e){A().getBool("IS_TEST")||A().getBool("PROD")||console.warn(...e)}const ns=U("kernelRegistry",(()=>new Map)),ss=U("gradRegistry",(()=>new Map));function rs(e,t){const n=us(e,t);return ns.get(n)}function as(e){return ss.get(e)}function is(e){const t=ns.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function os(e){const{kernelName:t,backendName:n}=e,s=us(t,n);ns.has(s)&&ts(`The kernel '${t}' for backend '${n}' is already registered`),ns.set(s,e)}function ls(e){const{kernelName:t}=e;ss.has(t)&&A().getBool("DEBUG")&&ts(`Overriding the gradient for '${t}'`),ss.set(t,e)}function us(e,t){return`${t}_${e}`}var cs=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};var hs=ps,ds=null;try{ds=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ps(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function fs(e){return!0===(e&&e.__isLong__)}ps.prototype.__isLong__,Object.defineProperty(ps.prototype,"__isLong__",{value:!0}),ps.isLong=fs;var ms={},gs={};function bs(e,t){var n,s,r;return t?(r=0<=(e>>>=0)&&e<256)&&(s=gs[e])?s:(n=xs(e,(0|e)<0?-1:0,!0),r&&(gs[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(s=ms[e])?s:(n=xs(e,e<0?-1:0,!1),r&&(ms[e]=n),n)}function ys(e,t){if(isNaN(e))return t?Rs:Ns;if(t){if(e<0)return Rs;if(e>=Ss)return Ms}else{if(e<=-Cs)return $s;if(e+1>=Cs)return Es}return e<0?ys(-e,t).neg():xs(e%Is|0,e/Is|0,t)}function xs(e,t,n){return new ps(e,t,n)}ps.fromInt=bs,ps.fromNumber=ys,ps.fromBits=xs;var vs=Math.pow;function ws(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return Ns;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return ws(e.substring(1),t,n).neg();for(var r=ys(vs(n,8)),a=Ns,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var u=ys(vs(n,o));a=a.mul(u).add(ys(l))}else a=(a=a.mul(r)).add(ys(l))}return a.unsigned=t,a}function ks(e,t){return"number"==typeof e?ys(e,t):"string"==typeof e?ws(e,t):xs(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}ps.fromString=ws,ps.fromValue=ks;var Is=4294967296,Ss=Is*Is,Cs=Ss/2,Ts=bs(1<<24),Ns=bs(0);ps.ZERO=Ns;var Rs=bs(0,!0);ps.UZERO=Rs;var Gs=bs(1);ps.ONE=Gs;var Ls=bs(1,!0);ps.UONE=Ls;var Ws=bs(-1);ps.NEG_ONE=Ws;var Es=xs(-1,2147483647,!1);ps.MAX_VALUE=Es;var Ms=xs(-1,-1,!0);ps.MAX_UNSIGNED_VALUE=Ms;var $s=xs(0,-2147483648,!1);ps.MIN_VALUE=$s;var zs=ps.prototype;zs.toInt=function(){return this.unsigned?this.low>>>0:this.low},zs.toNumber=function(){return this.unsigned?(this.high>>>0)*Is+(this.low>>>0):this.high*Is+(this.low>>>0)},zs.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq($s)){var t=ys(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=ys(vs(e,6),this.unsigned),a=this,i="";;){var o=a.div(r),l=(a.sub(o.mul(r)).toInt()>>>0).toString(e);if((a=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},zs.getHighBits=function(){return this.high},zs.getHighBitsUnsigned=function(){return this.high>>>0},zs.getLowBits=function(){return this.low},zs.getLowBitsUnsigned=function(){return this.low>>>0},zs.getNumBitsAbs=function(){if(this.isNegative())return this.eq($s)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},zs.isZero=function(){return 0===this.high&&0===this.low},zs.eqz=zs.isZero,zs.isNegative=function(){return!this.unsigned&&this.high<0},zs.isPositive=function(){return this.unsigned||this.high>=0},zs.isOdd=function(){return 1==(1&this.low)},zs.isEven=function(){return 0==(1&this.low)},zs.equals=function(e){return fs(e)||(e=ks(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},zs.eq=zs.equals,zs.notEquals=function(e){return!this.eq(e)},zs.neq=zs.notEquals,zs.ne=zs.notEquals,zs.lessThan=function(e){return this.comp(e)<0},zs.lt=zs.lessThan,zs.lessThanOrEqual=function(e){return this.comp(e)<=0},zs.lte=zs.lessThanOrEqual,zs.le=zs.lessThanOrEqual,zs.greaterThan=function(e){return this.comp(e)>0},zs.gt=zs.greaterThan,zs.greaterThanOrEqual=function(e){return this.comp(e)>=0},zs.gte=zs.greaterThanOrEqual,zs.ge=zs.greaterThanOrEqual,zs.compare=function(e){if(fs(e)||(e=ks(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},zs.comp=zs.compare,zs.negate=function(){return!this.unsigned&&this.eq($s)?$s:this.not().add(Gs)},zs.neg=zs.negate,zs.add=function(e){fs(e)||(e=ks(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=r+(65535&e.low))>>>16,u+=(c+=s+o)>>>16,l+=(u+=n+i)>>>16,l+=t+a,xs((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},zs.subtract=function(e){return fs(e)||(e=ks(e)),this.add(e.neg())},zs.sub=zs.subtract,zs.multiply=function(e){if(this.isZero())return Ns;if(fs(e)||(e=ks(e)),ds)return xs(ds.mul(this.low,this.high,e.low,e.high),ds.get_high(),this.unsigned);if(e.isZero())return Ns;if(this.eq($s))return e.isOdd()?$s:Ns;if(e.eq($s))return this.isOdd()?$s:Ns;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Ts)&&e.lt(Ts))return ys(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,d=0;return h+=(d+=r*l)>>>16,c+=(h+=s*l)>>>16,h&=65535,c+=(h+=r*o)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=s*o)>>>16,c&=65535,u+=(c+=r*i)>>>16,u+=t*l+n*o+s*i+r*a,xs((h&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},zs.mul=zs.multiply,zs.divide=function(e){if(fs(e)||(e=ks(e)),e.isZero())throw Error("division by zero");var t,n,s;if(ds)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?xs((this.unsigned?ds.div_u:ds.div_s)(this.low,this.high,e.low,e.high),ds.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?Rs:Ns;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Rs;if(e.gt(this.shru(1)))return Ls;s=Rs}else{if(this.eq($s))return e.eq(Gs)||e.eq(Ws)?$s:e.eq($s)?Gs:(t=this.shr(1).div(e).shl(1)).eq(Ns)?e.isNegative()?Gs:Ws:(n=this.sub(e.mul(t)),s=t.add(n.div(e)));if(e.eq($s))return this.unsigned?Rs:Ns;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Ns}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var r=Math.ceil(Math.log(t)/Math.LN2),a=r<=48?1:vs(2,r-48),i=ys(t),o=i.mul(e);o.isNegative()||o.gt(n);)o=(i=ys(t-=a,this.unsigned)).mul(e);i.isZero()&&(i=Gs),s=s.add(i),n=n.sub(o)}return s},zs.div=zs.divide,zs.modulo=function(e){return fs(e)||(e=ks(e)),ds?xs((this.unsigned?ds.rem_u:ds.rem_s)(this.low,this.high,e.low,e.high),ds.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},zs.mod=zs.modulo,zs.rem=zs.modulo,zs.not=function(){return xs(~this.low,~this.high,this.unsigned)},zs.and=function(e){return fs(e)||(e=ks(e)),xs(this.low&e.low,this.high&e.high,this.unsigned)},zs.or=function(e){return fs(e)||(e=ks(e)),xs(this.low|e.low,this.high|e.high,this.unsigned)},zs.xor=function(e){return fs(e)||(e=ks(e)),xs(this.low^e.low,this.high^e.high,this.unsigned)},zs.shiftLeft=function(e){return fs(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?xs(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):xs(0,this.low<<e-32,this.unsigned)},zs.shl=zs.shiftLeft,zs.shiftRight=function(e){return fs(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?xs(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):xs(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},zs.shr=zs.shiftRight,zs.shiftRightUnsigned=function(e){if(fs(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?xs(this.low>>>e|t<<32-e,t>>>e,this.unsigned):xs(32===e?t:t>>>e-32,0,this.unsigned)},zs.shru=zs.shiftRightUnsigned,zs.shr_u=zs.shiftRightUnsigned,zs.toSigned=function(){return this.unsigned?xs(this.low,this.high,!1):this},zs.toUnsigned=function(){return this.unsigned?this:xs(this.low,this.high,!0)},zs.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},zs.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},zs.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},ps.fromBytes=function(e,t,n){return n?ps.fromBytesLE(e,t):ps.fromBytesBE(e,t)},ps.fromBytesLE=function(e,t){return new ps(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},ps.fromBytesBE=function(e,t){return new ps(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Fs=function(e,t){for(var n=0;n<t.length;n++){const s=t[n];if("string"!=typeof s&&!Array.isArray(s))for(const t in s)if("default"!==t&&!(t in e)){const n=Object.getOwnPropertyDescriptor(s,t);n&&Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:()=>s[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}({__proto__:null,default:hs},[hs]),Xs=hs||Fs;function Vs(e){return Xs.fromString(e,!0,16)}const Zs=Vs("c3a5c85c97cb3127"),Ks=Vs("b492b66fbe98f273"),Ds=Vs("9ae16a3b2f90404f");function Os(e){return e.xor(e.shru(47))}function As(e,t,n){const s=e.slice(t,t+n);return Xs.fromBytes(Array.from(s),!0,!0)}function Ps(e,t){return As(e,t,8)}function Bs(e,t){return As(e,t,4)}function Hs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Us(e,t,n=Vs("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function _s(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Hs(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Hs(r,44)),[r.add(s),a.add(i)]}(Ps(e,t),Ps(e,t+8),Ps(e,t+16),Ps(e,t+24),n,s)}function Ys(e,t=e.length){const n=Xs.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Ds.add(2*t),s=Ps(e,0).add(Ds),r=Ps(e,t-8);return Us(Hs(r,37).mul(n).add(s),Hs(s,25).add(r).mul(n),n)}if(t>=4){const n=Ds.add(2*t);return Us(Bs(e,0).shl(3).add(t),Bs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return Os(Ds.mul(n).xor(Zs.mul(s))).mul(Ds)}return Ds}(e,t):function(e,t=e.length){const n=Ds.add(2*t),s=Ps(e,0).mul(Ks),r=Ps(e,8),a=Ps(e,t-8).mul(n),i=Ps(e,t-16).mul(Ds);return Us(Hs(s.add(r),43).add(Hs(a,30)).add(i),s.add(Hs(r.add(Ds),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Ds.add(2*t),s=Ps(e,0).mul(Ds),r=Ps(e,8),a=Ps(e,t-8).mul(n),i=Ps(e,t-16).mul(Ds),o=Hs(s.add(r),43).add(Hs(a,30)).add(i),l=Us(o,s.add(Hs(r.add(Ds),18)).add(a),n),u=Ps(e,16).mul(n),c=Ps(e,24),h=o.add(Ps(e,t-32)).mul(n),d=l.add(Ps(e,t-24)).mul(n);return Us(Hs(u.add(c),43).add(Hs(h,30)).add(d),u.add(Hs(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(Ks).add(113),a=Os(r.mul(Ds).add(113)).mul(Ds),i=[Xs.UZERO,Xs.UZERO],o=[Xs.UZERO,Xs.UZERO];s=s.mul(Ds).add(Ps(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Hs(s.add(r).add(i[0]).add(Ps(e,l+8)),37).mul(Ks),r=Hs(r.add(i[1]).add(Ps(e,l+48)),42).mul(Ks),s=s.xor(o[1]),r=r.add(i[0]).add(Ps(e,l+40)),a=Hs(a.add(o[0]),33).mul(Ks),i=_s(e,l,i[1].mul(Ks),s.add(o[0])),o=_s(e,l+32,a.add(o[1]),r.add(Ps(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=Ks.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Hs(s.add(r).add(i[0]).add(Ps(e,l+8)),37).mul(h),r=Hs(r.add(i[1]).add(Ps(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Ps(e,l+40))),a=Hs(a.add(o[0]),33).mul(h),i=_s(e,l,i[1].mul(h),s.add(o[0])),o=_s(e,l+32,a.add(o[1]),r.add(Ps(e,l+16))),[a,s]=[s,a],Us(Us(i[0],o[0],h).add(Os(r).mul(Zs)).add(a),Us(i[1],o[1],h).add(s),h)}function Js(e,t){return"string"===t?qs(e):Qs([e],t)}function Qs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=c(e)),A().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function js(){return A().platform.now()}function qs(e,t="utf-8"){return t=t||"utf-8",A().platform.encode(e,t)}function er(e,t="utf-8"){return t=t||"utf-8",A().platform.decode(e,t)}class tr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new sr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=js();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:js()-i})}if(A().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{nr(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function nr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class sr{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?m(`${s}ms`,9):s.error,o=m(e,25),l=t.rank,u=t.size,c=m(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const rr=20,ar=3,ir=7;function or(e,t,n,s){const r=L(t),a=function(e,t,n,s){const r=h(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?hr(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],lr(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=cr(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function lr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(ir))} + ${parseFloat(e[1].toFixed(ir))}j`:C(e)?`'${e}'`:"bool"===n?ur(e):parseFloat(e.toFixed(ir)).toString(),m(s,t)}function ur(e){return 0===e?"false":"true"}function cr(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[lr(hr(e)[0],0,n)]}return"bool"===n?[ur(e[0])]:[e[0].toString()]}if(1===l){if(o>rr){const t=ar*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-ar)*i,o*i));return"complex64"===n&&(s=hr(s),a=hr(a)),["["+s.map(((e,t)=>lr(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>lr(e,r[o-ar+t],n))).join(", ")+"]"]}return["["+("complex64"===n?hr(e):Array.from(e)).map(((e,t)=>lr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>rr){for(let t=0;t<ar;t++){const s=t*h,a=s+h;d.push(...cr(e.slice(s,a),u,n,c,r,!1))}d.push("...");for(let t=o-ar;t<o;t++){const s=t*h,a=s+h;d.push(...cr(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;d.push(...cr(e.slice(s,a),u,n,c,r,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function hr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class dr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=h(e),null!=n){const e=n.length;o(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||w(t,this.size),this.strides=L(e)}set(e,...t){0===t.length&&(t=[0]),o(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return pr().makeTensor(this.values,this.shape,this.dtype)}}let pr=null,fr=null;class mr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=h(e),this.strides=L(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fr.buffer(this.shape,this.dtype,e)}bufferSync(){return fr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return E(this.shape,e,"complex64"===this.dtype)}arraySync(){return E(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=pr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>er(e)))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),pr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=pr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>er(e)))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await pr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(pr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fr.print(this,e)}clone(){return this.throwIfDisposed(),fr.clone(this)}toString(e=!1){return or(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),pr().makeVariable(this,e,t,n)}}function gr(){return U("Tensor",(()=>mr))}Object.defineProperty(mr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),gr();class br extends mr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!d(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);pr().disposeTensor(this),this.dataId=e.dataId,pr().incRef(this,null)}dispose(){pr().disposeVariable(this),this.isDisposedInternal=!0}}var yr,xr,vr,wr,kr,Ir;Object.defineProperty(br,Symbol.hasInstance,{value:e=>e instanceof mr&&null!=e.assign&&e.assign instanceof Function}),(xr=yr||(yr={})).R0="R0",xr.R1="R1",xr.R2="R2",xr.R3="R3",xr.R4="R4",xr.R5="R5",xr.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(vr||(vr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(wr||(wr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(kr||(kr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ir||(Ir={}));const Sr={float32:kr,int32:vr,bool:wr,complex64:Ir};function Cr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Sr[e][t]}function Tr(e){return Cr(e,"int32")}function Nr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Cr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Rr(e){const t=[];return Gr(e,t,new Set),t}function Gr(e,t,n){if(null==e)return;if(e instanceof mr)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Gr(r,t,n))}}function Lr(e){return null!=e.kernelName}class Wr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Er{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Wr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ts(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new tr(this.backendInstance),!0}setupRegisteredKernels(){is(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){is(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(!s||s instanceof t||"function"!=typeof s.then)return this.registry[e]=s,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=s.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ts(`Initialization of backend ${e} failed`),ts(n.stack||n.message)),!1)));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return ts(`Initialization of backend ${e} failed`),ts(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Er.nextTensorId++}nextVariableId(){return Er.nextVariableId++}clone(e){const t=$r.runKernel(ot,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return $r.runKernel(ge,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==rs(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Lr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Lr(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const u=rs(t,this.backendName);o(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,r=e=>{!s||(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:h}=e,d=Lr(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,c,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),s&&this.addTapeNode(u,c,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=as(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(o(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&C(e[0])&&(r=e.map((e=>qs(e))));const a=s.write(r,t,n),i=new mr(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new mr(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new br(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*S(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof br||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*S(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=as(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=$(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Rr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===s.id&&this.track(e)}))}gradients(e,t,n,s=!1){if(o(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));o(r instanceof mr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=M(h(e),"float32");return $r.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!d(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),zr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return o(R(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;o(t.every((e=>e instanceof mr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};t.forEach(((e,t)=>{s[t]=e}));return this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),o(n.value instanceof mr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),o(R(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];o(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),o(a.every((e=>e instanceof mr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=js(),n=await this.backend.time(e);return n.wallMs=js()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Wr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Mr(){const e=H();if(null==e._tfengine){const t=new D(e);e._tfengine=new Er(t)}return function(e){B=e}(e._tfengine.ENV),function(e){pr=e}((()=>e._tfengine)),e._tfengine}Er.nextTensorId=0,Er.nextVariableId=0;const $r=Mr();function zr(e,t){const n={a:e,b:t};return $r.runKernel(Q,n)}function Fr(e){if(e||typeof navigator<"u"&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Xr(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}const Vr=A();function Zr(e,t){let n=e;if(I(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||I(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&A().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Kr(e,s,[]),s}function Kr(e,t,n){if(n=n||[],!Array.isArray(e)&&!I(e))return void o(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));o(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),o(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)Kr(e[t],s,n.concat(t))}function Dr(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Or(e,t,n,s="numeric"){if(e instanceof mr)return Dr(s,e.dtype,t,n),e;let r=N(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Dr(s,r,t,n),null==e||!I(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Zr(e,r);!I(e)&&!Array.isArray(e)&&(e=[e]);const i="string"!==r?Qs(e,r):c(e,[],!0);return $r.makeTensor(i,a,r)}function Ar(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Or(e,`${t}[${r}]`,n,s)))}Vr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Vr.registerFlag("IS_BROWSER",(()=>Xr())),Vr.registerFlag("IS_NODE",(()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u")),Vr.registerFlag("IS_CHROME",(()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Vr.registerFlag("PROD",(()=>!1)),Vr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Vr.getBool("DEBUG"))),Vr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Vr.registerFlag("IS_TEST",(()=>!1)),Vr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Vr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Vr.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),Vr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Vr.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function Pr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{$r.startScope(n);try{const t=s(...e);return Z(t)&&console.error("Cannot return a Promise inside of tidy."),$r.endScope(t),t}catch(e){throw $r.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Br=Pr({complex_:function(e,t){const n=Or(e,"real","complex"),s=Or(t,"imag","complex");l(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return $r.runKernel(xe,r)}});function Hr(e,t,n,s){if(null==s&&(s=N(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!I(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){F(t);const e=h(t),s=h(n);o(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==h(t.slice(e));o(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!I(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==s?Qs(e,s):c(e,[],!0),$r.makeTensor(e,t,s)}function Ur(e,t,n){return Hr(e,t,Zr(e,n),n)}async function _r(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Yr(await Promise.all(s)),specs:n}}function Yr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const Jr=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Qr(e){return Jr?Buffer.byteLength(e):new Blob([e]).size}function jr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function qr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function ea(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),function(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),s}(e,n,s)}function ta(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Qr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Qr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class na{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==na.instance&&(na.instance=new na),na.instance}static registerSaveRouter(e){na.getInstance().saveRouters.push(e)}static registerLoadRouter(e){na.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return na.getHandlers(e,"save")}static getLoadHandlers(e,t){return na.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?na.getInstance().loadRouters:na.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const sa="tensorflowjs",ra="models_store",aa="model_info_store";function ia(){if(!A().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function oa(e){const t=e.result;t.createObjectStore(ra,{keyPath:"modelPath"}),t.createObjectStore(aa,{keyPath:"modelPath"})}class la{constructor(e){if(this.indexedDB=ia(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(sa,1);s.onupgradeneeded=()=>oa(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(ra,"readonly"),s=t.objectStore(ra).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=ta(t),a=r.transaction(aa,"readwrite");let i=a.objectStore(aa);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(ra,"readwrite");const o=l.objectStore(ra).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(aa);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}la.URL_SCHEME="indexeddb://";const ua=e=>A().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(la.URL_SCHEME)?function(e){return new la(e)}(e.slice(la.URL_SCHEME.length)):null;na.registerSaveRouter(ua),na.registerLoadRouter(ua);class ca{constructor(){this.indexedDB=ia()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(sa,1);n.onupgradeneeded=()=>oa(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(aa,"readonly"),a=r.objectStore(aa).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(la.URL_SCHEME)?e.slice(la.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{const s=this.indexedDB.open(sa,1);s.onupgradeneeded=()=>oa(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(aa,"readwrite"),i=a.objectStore(aa),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(ra,"readwrite");const s=l.objectStore(ra).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const ha="/",da="tensorflowjs_models",pa="info",fa="model_topology",ma="weight_specs",ga="weight_data",ba="model_metadata";function ya(e){return{info:[da,e,pa].join(ha),topology:[da,e,fa].join(ha),weightSpecs:[da,e,ma].join(ha),weightData:[da,e,ga].join(ha),modelMetadata:[da,e,ba].join(ha)}}function xa(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function va(e){const t=e.split(ha);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ha)}class wa{constructor(e){if(!A().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ya(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=ta(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Jr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch{throw xa(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Jr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}wa.URL_SCHEME="localstorage://";const ka=e=>A().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wa.URL_SCHEME)?function(e){return new wa(e)}(e.slice(wa.URL_SCHEME.length)):null;na.registerSaveRouter(ka),na.registerLoadRouter(ka);class Ia{constructor(){o(A().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),o(typeof window>"u"||typeof window.localStorage<"u",(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=da+ha,n=ha+pa;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){e[va(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=function(e){return e.startsWith(wa.URL_SCHEME)?e.slice(wa.URL_SCHEME.length):e}(e);const t=ya(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return xa(t),n}}class Sa{constructor(){this.managers={}}static getInstance(){return null==Sa.instance&&(Sa.instance=new Sa),Sa.instance}static registerManager(e,t){o(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),o(e.length>0,(()=>"scheme must not be an empty string."));const n=Sa.getInstance();o(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Sa.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Sa.getInstance().managers)}}class Ca{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){window&&A().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}}if(A().get("IS_BROWSER")){A().setPlatform("browser",new Ca);try{Sa.registerManager(wa.URL_SCHEME,new Ia)}catch{}try{Sa.registerManager(la.URL_SCHEME,new ca)}catch{}}const Ta=()=>require("node-fetch");let Na;function Ra(e,t="float32",n){return t=t||"float32",F(e),new dr(e,t,n)}A().get("IS_NODE")&&!A().get("IS_BROWSER")&&A().setPlatform("node",new class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=A().global.fetch?A().global.fetch(e,t):(null==Na&&(Na=Ta()),Na(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ga=Pr({cast_:function(e,t){const n=Or(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return $r.runKernel(ge,s,r)}});const La=Pr({clone_:function(e){const t={x:Or(e,"x","clone","string_or_numeric")};return $r.runKernel(ot,t)}});Mr(),function(e){fr=e}({buffer:Ra,cast:Ga,clone:La,print:function(e,t=!1){console.log(e.toString(t))}});function Wa(e){return new Promise((e=>setTimeout(e))).then(e)}class Ea{constructor(e){if(!A().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ea.URL_SCHEME)&&(e=e.slice(Ea.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=qr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Wa((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Wa((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ta(e)}}}}Ea.URL_SCHEME="downloads://";function Ma(e,t,n,s){var r;o(null!=(r=e)&&Array.isArray(r)&&r.length>0,(()=>"promises must be a none empty array")),function(e,t){o(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),o(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),o(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let a=0;return Promise.all(e.map((r=>(r.then((r=>{const i=n+ ++a/e.length*(s-n);return t(i),r})),r))))}na.registerSaveRouter((e=>A().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ea.URL_SCHEME)?function(e="model"){return new Ea(e)}(e.slice(Ea.URL_SCHEME.length)):null));class $a{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(o("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=A().platform.fetch,o(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&o(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=qr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ta(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return ea(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}(t),r=this.weightPathPrefix||n,a=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);this.weightUrlConverter&&i.push(...await Promise.all(o));const l=await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?A().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Ma(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Ma(r,t.onProgress,.5,1)}(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,jr(l)]}}function za(e){return null!=e.match($a.URL_SCHEME_REGEX)}$a.URL_SCHEME_REGEX=/^https?:\/\//;const Fa=(e,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>za(e))):za(e),n)return function(e,t){return new $a(e,t)}(e,t)}return null};na.registerSaveRouter(Fa),na.registerLoadRouter(Fa);const Xa=Pr({matMul_:function(e,t,n=!1,s=!1){let r=Or(e,"a","matMul"),a=Or(t,"b","matMul");[r,a]=Nr(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return $r.runKernel(de,i,o)}});const Va=Pr({oneHot_:function(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Or(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:s};return $r.runKernel(Pt,a,i)}});function Za(){return $r}function Ka(){return $r.memory()}function Da(e,t){return $r.tidy(e,t)}function Oa(e){Rr(e).forEach((e=>e.dispose()))}function Aa(e){return $r.keep(e)}function Pa(e,t,n=1){return $r.registerBackend(e,t,n)}function Ba(){return $r.backend}const Ha=Pr({imag_:function(e){const t={input:Or(e,"input","imag")};return $r.runKernel(ut,t)}});const Ua=Pr({neg_:function(e){const t={x:Or(e,"x","neg")};return $r.runKernel(Vt,t)}});const _a=Pr({real_:function(e){const t={input:Or(e,"input","real")};return $r.runKernel(qt,t)}});const Ya=Pr({transpose_:function(e,t,n){const s=Or(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),o(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{o(e>=0&&e<s.rank,(()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},a={perm:t};return"complex64"===s.dtype?Da((()=>{let e=_a(s),t=Ha(s);return e=$r.runKernel(Pn,{x:e},a),t=$r.runKernel(Pn,{x:t},a),n&&(t=Ua(t)),Br(e,t)})):$r.runKernel(Pn,r,a)}});function Ja(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function Qa(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function ja(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(s)}}return n}let qa;const ei=Pr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=rs(Jn,$r.backendName)){const n={pixels:e},s={numChannels:t};return $r.runKernel(Jn,n,s)}const[l,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,d;if(i)h=e.getContext("2d").getImageData(0,0,l,c).data;else if(s||n)h=e.data;else if(a||r||o){if(null==qa)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");qa=new OffscreenCanvas(1,1).getContext("2d")}else qa=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});qa.canvas.width=l,qa.canvas.height=c,qa.drawImage(e,0,0,l,c),h=qa.getImageData(0,0,l,c).data}if(4===t)d=new Int32Array(h);else{const e=l*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=h[4*n+e]}return function(e,t,n){if(u(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Zr(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Hr(e,t,s,n)}(d,[c,l,t],"int32")}});function ti(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===h(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...L(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function ni(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function si(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:h(t.shape)/o,sliceSize:i,strides:[...L(n.slice(0,r)),1],outputSize:h(n)}}const ri=-2,ai=-1;function ii(e,t,n){const s=e.shape.length;o(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),o(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)o(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function oi(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function li(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ui(e,t,n){return n<=e?n:n-(t-1)}function ci(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function hi(e,t,n,s,r){const a=[...r],i=ci(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=ui(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function di(e,t,n,s,a){const i=[...a],o=ci(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=ui(t,n,r);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=r(0,i[e],a[e])}return i}function pi(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function fi(e,t,n,s,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=s[a];return o<0&&(o+=u),o=r(0,o,u-1),o}function mi(e,t,n,s,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=s[a];return o<0&&(o+=u),o=l>0?r(0,o,u):r(-1,o,u-1),o}function gi(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function bi(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function yi(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{o(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(o(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function xi(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(ri),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(ai),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),s=e[t];if(-1===s){g.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?s:s-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?s+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=s)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=vi(d.begin[t],0,d.strides[t],s,r,a),d.end[t]=vi(d.end[t],1,d.strides[t],s,r,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===s;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=d.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):t===ri&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==ri)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function vi(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const wi=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:ii,maskToAxes:function(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t},computeOutShape:oi,stridesWithElidedDims:li,getNormalizedAxes:function(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=hi(i,l,u,s,e),h=di(o,l,u,r,e),d=li(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=fi(i,s,a,e,t,l),h[t]=mi(o,r,a,e,t,l),d[t]=pi(a,t,l);return{begin:c,end:h,strides:d}},startIndicesWithElidedDims:hi,stopIndicesWithElidedDims:di,stridesForAxis:pi,startForAxis:fi,stopForAxis:mi,isSliceContinous:gi,computeFlatOffset:bi,parseSliceParams:yi,sliceInfo:xi},Symbol.toStringTag,{value:"Module"}));class ki{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ii{constructor(){this.classNameMap={}}static getMap(){return null==Ii.instance&&(Ii.instance=new Ii),Ii.instance}static register(e){Ii.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Si(e){o(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),o("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),o(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ii.register(e)}const Ci=Pr({add_:function(e,t){let n=Or(e,"a","add"),s=Or(t,"b","add");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(Q,r)}});const Ti=Pr({floorDiv_:function(e,t){let n=Or(e,"a","floorDiv"),s=Or(t,"b","floorDiv");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(tt,r)}});const Ni=Pr({div_:function(e,t){let n=Or(e,"a","div"),s=Or(t,"b","div");if([n,s]=Nr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Ti(n,s);const r={a:n,b:s};return $r.runKernel(Oe,r,{})}});const Ri=Pr({mul_:function(e,t){let n=Or(e,"a","mul"),s=Or(t,"b","mul");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(Xt,r)}});const Gi=Pr({abs_:function(e){const t=Or(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return $r.runKernel(ve,e)}{const e={x:t};return $r.runKernel(_,e)}}});const Li=Pr({acos_:function(e){const t={x:Or(e,"x","acos")};return $r.runKernel(Y,t)}});const Wi=Pr({acosh_:function(e){const t={x:Or(e,"x","acosh")};return $r.runKernel(J,t)}});const Ei=Pr({all_:function(e,t=null,n=!1){const s={x:Or(e,"x","all","bool")},r={axis:t,keepDims:n};return $r.runKernel(q,s,r)}});const Mi=Pr({any_:function(e,t=null,n=!1){const s={x:Or(e,"x","any","bool")},r={axis:t,keepDims:n};return $r.runKernel(ee,s,r)}});const $i=Pr({argMax_:function(e,t=0){const n={x:Or(e,"x","argMax")},s={axis:t};return $r.runKernel(te,n,s)}});const zi=Pr({argMin_:function(e,t=0){const n={x:Or(e,"x","argMin")},s={axis:t};return $r.runKernel(ne,n,s)}});const Fi=Pr({asin_:function(e){const t={x:Or(e,"x","asin")};return $r.runKernel(se,t)}});const Xi=Pr({asinh_:function(e){const t={x:Or(e,"x","asinh")};return $r.runKernel(re,t)}});const Vi=Pr({atan_:function(e){const t={x:Or(e,"x","atan")};return $r.runKernel(ae,t)}});const Zi=Pr({atan2_:function(e,t){let n=Or(e,"a","atan2"),s=Or(t,"b","atan2");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(oe,r)}});const Ki=Pr({atanh_:function(e){const t={x:Or(e,"x","atanh")};return $r.runKernel(ie,t)}});function Di(e,t,n,s,r="NHWC",a){return Pi(e,[...t,e[3]],n,a,s,null,null,qi(r))}function Oi(e,t,n,s,r,a,i="channelsLast"){const[o,l]=Ui(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Pi(e,u,n,s,r,a,!1,i)}function Ai(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=_i(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Bi(e,c,n,s,r,!1,h,a)}function Pi(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Ui(n),[b,y]=Ui(s),x=Yi(d,b),v=Yi(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=Hi(e,t,n));const a=e[0],i=e[1],o=Ji((a-t+2*s)/n+1,r),l=Ji((i-t+2*s)/n+1,r);return[o,l]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Ji((t-a+d+p)/s+1,o),h=Ji((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,v,a,o),S=i?f*h:f;let C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:C,filterShape:t}}function Bi(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[b,y,x]=_i(n),[v,w,k]=_i(s),I=Yi(p,v),S=Yi(f,w),C=Yi(m,k),{padInfo:T,outDepth:N,outHeight:R,outWidth:G}=function(e,t,n,s,r,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=Hi(e,t,s));const i=e[0],o=e[1],l=e[2],u=Ji((i-t+2*r)/s+1,a),c=Ji((o-t+2*r)/s+1,a),h=Ji((l-t+2*r)/s+1,a);return[u,c,h,n]}([t,n,s,1],o,1,r,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,v=Math.floor(m/2);h={top:y,bottom:x,left:v,right:m-v,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,y,x,I,S,C,o),L=a?g*d:g;let W;return"channelsFirst"===i?W=[l,L,N,R,G]:"channelsLast"===i&&(W=[l,N,R,G,L]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:R,outWidth:G,outChannels:L,padInfo:T,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:W,filterShape:t}}function Hi(e,t,n,s=1){const r=Yi(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Ui(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function _i(e){return"number"==typeof e?[e,e,e]:e}function Yi(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ji(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Qi(e){const[t,n,s]=Ui(e);return 1===t&&1===n&&1===s}function ji(e,t){return Qi(e)||Qi(t)}function qi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function eo(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)o(p(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{o(p(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const to=Pr({reshape_:function(e,t){const n={x:Or(e,"x","reshape","string_or_numeric")},s={shape:t};return $r.runKernel(nn,n,s)}});const no=Pr({avgPool_:function(e,t,n,s,r){const a=Or(e,"x","avgPool","float32");o(ji(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,l=!1;3===a.rank&&(l=!0,i=to(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),eo("avgPool",s,r);const u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let h=$r.runKernel(le,u,c);return h=Ga(h,a.dtype),l?to(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const so=Pr({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=Or(e,"x","avgPool3d","float32");let l=i,u=!1;4===i.rank&&(u=!0,l=to(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),o(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),o("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),eo("avgPool3d",s,r);const c={x:l},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let d=$r.runKernel(ce,c,h);return d=Ga(d,l.dtype),u?to(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ro=Pr({concat_:function(e,t=0){o(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ar(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return La(n[0]);const s=n,r={axis:t};return $r.runKernel(we,s,r)}});const ao=Pr({sigmoid_:function(e){const t={x:Or(e,"x","sigmoid","float32")};return $r.runKernel(vn,t)}});const io=Pr({slice_:function(e,t,n){const s=Or(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return $r.runKernel(gn,r,a)}});const oo=Pr({tanh_:function(e){const t={x:Or(e,"x","tanh","float32")};return $r.runKernel(Kn,t)}});const lo=Pr({batchToSpaceND_:function(e,t,n){const s=Or(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));o(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),o(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),o(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return $r.runKernel(pe,a,i)}});function uo(e){let t;return t=0===e.rank||1===e.rank?to(e,[1,1,1,e.size]):2===e.rank?to(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?to(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}const co=Pr({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Or(e,"x","batchNorm"),l=Or(t,"mean","batchNorm"),u=Or(n,"variance","batchNorm");let c,h;null!=r&&(c=Or(r,"scale","batchNorm")),null!=s&&(h=Or(s,"offset","batchNorm")),o(l.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o(null==h||l.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o(null==c||l.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:uo(i),scale:c,offset:h,mean:l,variance:u},p={varianceEpsilon:a},f=$r.runKernel(nt,d,p);return to(f,i.shape)}});const ho=Pr({batchNorm2d_:function(e,t,n,s,r,a){const i=Or(e,"x","batchNorm"),l=Or(t,"mean","batchNorm"),u=Or(n,"variance","batchNorm");let c,h;return null!=r&&(c=Or(r,"scale","batchNorm")),null!=s&&(h=Or(s,"offset","batchNorm")),o(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),o(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`)),o(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&o(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=h&&o(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),co(i,l,u,h,c,a)}});const po=Pr({batchNorm3d_:function(e,t,n,s,r,a){const i=Or(e,"x","batchNorm"),l=Or(t,"mean","batchNorm"),u=Or(n,"variance","batchNorm");let c,h;return null!=r&&(c=Or(r,"scale","batchNorm")),null!=s&&(h=Or(s,"offset","batchNorm")),o(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),o(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`)),o(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&o(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=h&&o(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),co(i,l,u,h,c,a)}});const fo=Pr({batchNorm4d_:function(e,t,n,s,r,a){const i=Or(e,"x","batchNorm"),l=Or(t,"mean","batchNorm"),u=Or(n,"variance","batchNorm");let c,h;return null!=r&&(c=Or(r,"scale","batchNorm")),null!=s&&(h=Or(s,"offset","batchNorm")),o(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),o(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`)),o(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&o(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=h&&o(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),co(i,l,u,h,c,a)}});const mo=Pr({bincount_:function(e,t,n){const s=Or(e,"x","bincount"),r=Or(t,"weights","bincount");o("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),o(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return $r.runKernel(fe,a,i)}});const go=Pr({broadcastTo_:function(e,t){let n=Or(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=to(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return La(n);const i={x:n},o={reps:a};return $r.runKernel(Dn,i,o)}});const bo=Pr({ceil_:function(e){const t={x:Or(e,"x","ceil","float32")};return $r.runKernel(be,t)}});function yo(e,t,n){const s={shape:e,value:t,dtype:n};return $r.runKernel(je,{},s)}const xo=Pr({clipByValue_:function(e,t,n){const s=Or(e,"x","clipByValue");if(o(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return yo(s.shape,t,s.dtype);const r={x:s},a={clipValueMin:t,clipValueMax:n};return $r.runKernel(ye,r,a)}});const vo=Pr({concat1d_:function(e){return ro(e,0)}});const wo=Pr({concat2d_:function(e,t){return ro(e,t)}});const ko=Pr({concat3d_:function(e,t){return ro(e,t)}});const Io=Pr({concat4d_:function(e,t){return ro(e,t)}});const So=Pr({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const l=Or(e,"x","conv2d","float32"),u=Or(t,"filter","conv2d","float32");let c=l,h=!1;3===l.rank&&(h=!0,c=to(l,[1,l.shape[0],l.shape[1],l.shape[2]])),o(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),o(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),eo("conv2d",s,i);const d="NHWC"===r?c.shape[3]:c.shape[1];o(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),o(ji(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:c,filter:u},f={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},m=$r.runKernel(ke,p,f);return h?to(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Co=Pr({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const l=Or(e,"x","conv1d"),u=Or(t,"filter","conv1d");let c=l,h=!1;2===l.rank&&(h=!0,c=to(l,[1,l.shape[0],l.shape[1]])),o(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),o(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),eo("conv1d",s,i),o(c.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),o(ji(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),o("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const d=to(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=to(c,[c.shape[0],1,c.shape[1],c.shape[2]]),f=So(p,d,[1,n],s,"NHWC",[1,a],i);return to(f,h?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}});const To=Pr({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){o(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,u=t,c=!1;3===t.rank&&(c=!0,u=to(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),o(4===l.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`)),o(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),o(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===a?l[3]:l[1],d="NHWC"===a?u.shape[3]:u.shape[1];o(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),o(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),eo("conv2dDerInput",r,i);const p={dy:u,filter:n},f={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:l},m=$r.runKernel(Se,p,f);return c?to(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const No=Pr({conv2dTranspose_:function(e,t,n,s,r,a){const i=Or(e,"x","conv2dTranspose"),o=Or(t,"filter","conv2dTranspose");return To(n,i,o,s,r,"NHWC",a)}});const Ro=Pr({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Or(e,"x","conv3d"),l=Or(t,"filter","conv3d");let u=i,c=!1;4===i.rank&&(c=!0,u=to(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),o(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),o(5===l.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`)),o(u.shape[4]===l.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`)),o(ji(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),o("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const h={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a},p=$r.runKernel(Ce,h,d);return c?to(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Go=Pr({conv3DBackpropInput_:function(e,t,n,s,r){o(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,l=!1;4===t.rank&&(l=!0,i=to(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],c=i.shape[4];o(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),o(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),o(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),o(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),o(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const h={dy:i,filter:n},d={pad:r,strides:s,inputShape:a},p=$r.runKernel(Ne,h,d);return l?to(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Lo=Pr({conv3dTranspose_:function(e,t,n,s,r){const a=Or(e,"x","conv3dTranspose"),i=Or(t,"filter","conv3dTranspose");return Go(n,a,i,s,r)}});const Wo=Pr({cos_:function(e){const t={x:Or(e,"x","cos","float32")};return $r.runKernel(Re,t)}});const Eo=Pr({cosh_:function(e){const t={x:Or(e,"x","cosh","float32")};return $r.runKernel(Ge,t)}});const Mo=Pr({cumprod_:function(e,t=0,n=!1,s=!1){const r={x:Or(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:s};return $r.runKernel(Le,r,a)}});const $o=Pr({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Or(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return $r.runKernel(We,r,a)}});const zo=Pr({depthToSpace_:function(e,t,n="NHWC"){const s=Or(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];o(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),o(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),o(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),o(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const l={x:s},u={blockSize:t,dataFormat:n};return $r.runKernel($e,l,u)}});const Fo=Pr({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const l=Or(e,"x","depthwiseConv2d","float32"),u=Or(t,"filter","depthwiseConv2d","float32");let c=l,h=!1;3===l.rank&&(h=!0,c=to(l,[1,l.shape[0],l.shape[1],l.shape[2]])),o(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),o(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const d="NHWC"===r?c.shape[3]:c.shape[1];o(d===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`)),eo("depthwiseConv2d",s,i);const p={x:c,filter:u},f={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},m=$r.runKernel(ze,p,f);return h?to(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Xo=Pr({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Or(e,"x","dilation2d"),l=Or(t,"filter","dilation2d");o(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),o(3===l.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`)),o("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=i,c=!1;3===i.rank&&(u=to(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:u,filter:l},d={strides:n,pad:s,dilations:r},p=$r.runKernel(Ze,h,d);return c?to(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Vo=Pr({equal_:function(e,t){let n=Or(e,"a","equal","string_or_numeric"),s=Or(t,"b","equal","string_or_numeric");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Ue,r)}});const Zo=Pr({where_:function(e,t,n){const s=Or(t,"a","where"),r=Or(n,"b","where"),a=Or(e,"condition","where","bool"),i=ja(ja(a.shape,s.shape),r.shape),o={condition:go(a,i),t:go(s,i),e:go(r,i)};return $r.runKernel(fn,o)}});const Ko=Pr({zerosLike_:function(e){const t={x:Or(e,"x","zerosLike")};return $r.runKernel(_n,t)}});const Do=Pr({divNoNan_:function(e,t){let n=Or(e,"a","div"),s=Or(t,"b","div");[n,s]=Nr(n,s);const r=Ni(n,s),a=Ko(r),i=Vo(s,a);return Zo(i,a,r)}});const Oo=Pr({dot_:function(e,t){const n=Or(e,"t1","dot"),s=Or(t,"t2","dot");o(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(o(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=to(n,[1,-1]),t=to(s,[-1,1]),r=Xa(e,t);return to(r,[])}if(1===n.rank&&2===s.rank){const e=to(n,[1,-1]),t=to(s,[s.shape[0],s.shape[1]]),r=Xa(e,t);return to(r,[r.size])}if(2===n.rank&&1===s.rank){const e=to(s,[-1,1]),t=Xa(n,e);return to(t,[t.size])}{const e=to(s,[s.shape[0],s.shape[1]]);return Xa(n,e)}}});const Ao=Pr({elu_:function(e){const t={x:Or(e,"x","elu","float32")};return $r.runKernel(Pe,t)}});const Po=Pr({erf_:function(e){let t=Or(e,"x","erf");o("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ga(t,"float32"));const n={x:t};return $r.runKernel(He,n)}});function Bo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ho(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function Uo(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function _o(e,t){return Ho(e,t.map((e=>1)),t)}function Yo(e,t,n){o(Bo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Jo(e,t){if(Bo(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Qo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function jo(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const qo=Pr({max_:function(e,t=null,n=!1){const s={x:Or(e,"x","max")},r={reductionIndices:t,keepDims:n};return $r.runKernel(St,s,r)}});const el=Pr({min_:function(e,t=null,n=!1){const s={x:Or(e,"x","min")},r={axis:t,keepDims:n};return $r.runKernel(Et,s,r)}});const tl=Pr({pow_:function(e,t){let n=Or(e,"base","pow"),s=Or(t,"exp","pow");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(Ut,r)}});function nl(e,t){if((I(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&I(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Hr(e,[],[],t)}const sl=Pr({sqrt_:function(e){const t={x:Or(e,"x","sqrt","float32")};return $r.runKernel(kn,t)}});const rl=Pr({square_:function(e){const t=Or(e,"x","square");return $r.runKernel("Square",{x:t},{})}});const al=Pr({sum_:function(e,t=null,n=!1){let s=Or(e,"x","sum");"bool"===s.dtype&&(s=Ga(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return $r.runKernel(In,r,a)}});function il(e,t,n=null){if(0===e.rank)return Gi(e);if(1!==e.rank&&null===n)return il(to(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return al(Gi(e),n);if(t===1/0)return qo(Gi(e),n);if(t===-1/0)return el(Gi(e),n);if("euclidean"===t||2===t)return sl(al(tl(Gi(e),nl(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return qo(al(Gi(e),n[0]),n[1]-1);if(t===1/0)return qo(al(Gi(e),n[1]),n[0]);if(t===-1/0)return el(al(Gi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return sl(al(rl(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ol=Pr({norm_:function(e,t="euclidean",n=null,s=!1){const r=il(e=Or(e,"x","norm"),t,n);let a=r.shape;if(s){const t=y(n,e.shape);a=_o(r.shape,t)}return to(r,a)}});const ll=Pr({euclideanNorm_:function(e,t=null,n=!1){return ol(e,"euclidean",t,n)}});const ul=Pr({exp_:function(e){const t={x:Or(e,"x","exp")};return $r.runKernel(_e,t)}});const cl=Pr({expandDims_:function(e,t=0){const n=Or(e,"x","expandDims","string_or_numeric");o(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return $r.runKernel(Ye,s,r)}});const hl=Pr({expm1_:function(e){const t={x:Or(e,"x","expm1")};return $r.runKernel(Je,t)}});const dl=Pr({tile_:function(e,t){const n=Or(e,"x","tile","string_or_numeric");o(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return $r.runKernel(Dn,s,r)}});const pl=Pr({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Ra([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=to(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return dl(cl(i,0),[n[0],1,1]);if(2===n.length)return dl(cl(cl(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return dl(cl(cl(cl(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const fl=Pr({floor_:function(e){const t={x:Or(e,"x","floor","float32")};return $r.runKernel(et,t)}});const ml=Pr({gather_:function(e,t,n=0,s=0){const r={x:Or(e,"x","gather"),indices:Or(t,"indices","gather","int32")},a={axis:n,batchDims:s};return $r.runKernel(st,r,a)}});const gl=Pr({greater_:function(e,t){let n=Or(e,"a","greater","string_or_numeric"),s=Or(t,"b","greater","string_or_numeric");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(at,r)}});const bl=Pr({greaterEqual_:function(e,t){let n=Or(e,"a","greaterEqual","string_or_numeric"),s=Or(t,"b","greaterEqual","string_or_numeric");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(it,r)}});const yl=Pr({isFinite_:function(e){const t={x:Or(e,"x","isFinite")};return $r.runKernel(ct,t)}});const xl=Pr({isInf_:function(e){const t={x:Or(e,"x","isInf")};return $r.runKernel(ht,t)}});const vl=Pr({isNaN_:function(e){const t={x:Or(e,"x","isNaN")};return $r.runKernel(dt,t)}});const wl=Pr({leakyRelu_:function(e,t=.2){const n={x:Or(e,"x","leakyRelu")},s={alpha:t};return $r.runKernel(pt,n,s)}});const kl=Pr({less_:function(e,t){let n=Or(e,"a","less","string_or_numeric"),s=Or(t,"b","less","string_or_numeric");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(ft,r)}});const Il=Pr({lessEqual_:function(e,t){let n=Or(e,"a","lessEqual","string_or_numeric"),s=Or(t,"b","lessEqual","string_or_numeric");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(mt,r)}});const Sl=Pr({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Or(e,"x","localResponseNormalization");o(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),o(p(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,l=!1;3===a.rank&&(l=!0,i=to(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},c={depthRadius:t,bias:n,alpha:s,beta:r},h=$r.runKernel(kt,u,c);return l?to(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Cl=Pr({log_:function(e){const t={x:Or(e,"x","log","float32")};return $r.runKernel(bt,t)}});const Tl=Pr({log1p_:function(e){const t={x:Or(e,"x","log1p")};return $r.runKernel(yt,t)}});function Nl(e){return $r.customGrad(e)}const Rl=Pr({softplus_:function(e){const t={x:Or(e,"x","softplus")};return $r.runKernel(wn,t)}});const Gl=Pr({logSigmoid_:function(e){const t=Or(e,"x","logSigmoid");return Nl((e=>({value:Ua(Rl(Ua(e))),gradFunc:t=>Ri(t,ao(Ua(e)))})))(t)}});const Ll=Pr({sub_:function(e,t){let n=Or(e,"a","sub"),s=Or(t,"b","sub");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(Vn,r)}});const Wl=Pr({logSoftmax_:function(e,t=-1){const n=Or(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Nl(((e,n)=>{const s=qo(e,t,!0),r=Ll(e,s),a=Ll(Ga(r,"float32"),Cl(al(ul(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=ul(s);return Ll(e,Ri(al(e,t,!0),r))}}}))(n)}});const El=Pr({logSumExp_:function(e,t=null,n=!1){const s=Or(e,"x","logSumExp"),r=y(t,s.shape),a=qo(s,r,!0),i=Ll(s,a),o=ul(i),l=al(o,r),u=Cl(l),c=Ci(to(a,u.shape),u);if(n){const e=_o(c.shape,r);return to(c,e)}return c}});const Ml=Pr({logicalAnd_:function(e,t){const n=Or(e,"a","logicalAnd","bool"),s=Or(t,"b","logicalAnd","bool");ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(xt,r)}});const $l=Pr({logicalNot_:function(e){const t={x:Or(e,"x","logicalNot","bool")};return $r.runKernel(vt,t)}});const zl=Pr({logicalOr_:function(e,t){const n=Or(e,"a","logicalOr","bool"),s=Or(t,"b","logicalOr","bool");ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(wt,r)}});const Fl=Pr({logicalXor_:function(e,t){const n=Or(e,"a","logicalXor","bool"),s=Or(t,"b","logicalXor","bool");return ja(n.shape,s.shape),Ml(zl(e,t),$l(Ml(e,t)))}});const Xl=Pr({maxPool_:function(e,t,n,s,r){const a=Or(e,"x","maxPool");let i=a,l=!1;3===a.rank&&(l=!0,i=to(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),o(ji(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),eo("maxPool",s,r);const u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=$r.runKernel(Tt,u,c);return l?to(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Vl=Pr({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=Or(e,"x","maxPool3d");let l=i,u=!1;4===i.rank&&(u=!0,l=to(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),o(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),o("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),eo("maxPool3d",s,r);const c={x:l},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=$r.runKernel(Rt,c,h);return u?to(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Zl=Pr({maximum_:function(e,t){let n=Or(e,"a","maximum"),s=Or(t,"b","maximum");[n,s]=Nr(n,s),"bool"===n.dtype&&(n=Ga(n,"int32"),s=Ga(s,"int32")),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Ct,r)}});const Kl=Pr({mean_:function(e,t=null,n=!1){const s={x:Or(e,"x","mean")},r={axis:t,keepDims:n};return $r.runKernel(Wt,s,r)}});function Dl(e,t="float32"){if("complex64"===t){const t=Dl(e,"float32"),n=Dl(e,"float32");return Br(t,n)}const n=$(h(e),t);return $r.makeTensor(n,e,t)}function Ol(e,t="float32"){if("complex64"===t){const t=Ol(e,"float32"),n=Dl(e,"float32");return Br(t,n)}const n=M(h(e),t);return $r.makeTensor(n,e,t)}const Al=Pr({minimum_:function(e,t){let n=Or(e,"a","minimum"),s=Or(t,"b","minimum");[n,s]=Nr(n,s),"bool"===n.dtype&&(n=Ga(n,"int32"),s=Ga(s,"int32")),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Mt,r)}});const Pl=Pr({mirrorPad_:function(e,t,n){o("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Or(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)o(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return $r.runKernel($t,i,a)}});const Bl=Pr({mod_:function(e,t){let n=Or(e,"a","mod"),s=Or(t,"b","mod");[n,s]=Nr(n,s);const r={a:n,b:s};return $r.runKernel(zt,r)}});const Hl=Pr({moments_:function(e,t=null,n=!1){const s=y(t,(e=Or(e,"x","moments")).shape),r=Kl(e,s,n);let a=r.shape;n||(a=_o(r.shape,s));const i=rl(Ll(Ga(e,"float32"),to(r,a)));return{mean:r,variance:Kl(i,s,n)}}});const Ul=Pr({notEqual_:function(e,t){let n=Or(e,"a","notEqual","string_or_numeric"),s=Or(t,"b","notEqual","string_or_numeric");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(Zt,r)}});const _l=Pr({onesLike_:function(e){const t={x:Or(e,"x","onesLike")};return $r.runKernel(At,t)}});const Yl=Pr({pad_:function(e,t,n=0){const s=Or(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return $r.runKernel(Ht,a,r)}});const Jl=Pr({spaceToBatchND_:function(e,t,n){const s=Or(e,"x","spaceToBatchND");o(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),o(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),o(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return $r.runKernel(Sn,r,a)}});const Ql=Pr({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const l=Or(e,"x","maxPool");let u=l,c=!1;3===l.rank&&(c=!0,u=to(l,[1,l.shape[0],l.shape[1],l.shape[2]])),o(ji(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const h=Oi(u.shape,t,a,r,s),d=[h.dilationHeight,h.dilationWidth];let p;p="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([h.filterHeight,h.filterWidth],d):[[0,0],[0,0]];const f=1===d[0]&&1===d[1],[m,g]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[s[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],d,p),b=f?s:"valid",y=f?u:Jl(u,d,m),x=("avg"===n?()=>no(y,t,a,b,i):()=>Xl(y,t,a,b,i))(),v=f?x:lo(x,d,g);return c?to(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});const jl=Pr({prelu_:function(e,t){const n={x:Or(e,"x","prelu"),alpha:Or(t,"alpha","prelu")};return $r.runKernel(_t,n)}});const ql=Pr({prod_:function(e,t=null,n=!1){let s=Or(e,"x","prod");"bool"===s.dtype&&(s=Ga(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return $r.runKernel(Yt,r,a)}});var eu={exports:{}};!function(e){!function(e,t,n){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function a(e,t){var n=new s(e),a=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&r(a,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=a:this.alea=a}(0,e)}(eu);var tu={exports:{}};!function(e){!function(e,t,n){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function a(e,t){var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&r(a,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=a:this.xor128=a}(0,e)}(tu);var nu={exports:{}};!function(e){!function(e,t,n){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function a(e,t){var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&r(a,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=a:this.xorwow=a}(0,e)}(nu);var su={exports:{}};!function(e){!function(e,t,n){function s(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function a(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.x&&r(a,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=a:this.xorshift7=a}(0,e)}(su);var ru={exports:{}};!function(e){!function(e,t,n){function s(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function a(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.X&&r(a,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=a:this.xor4096=a}(0,e)}(ru);var au={exports:{}};!function(e){!function(e,t,n){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function a(e,t){var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&r(a,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=a:this.tychei=a}(0,e)}(au);var iu={exports:{}};const ou=function(e){var t=e.default;if("function"==typeof t){var n=function(){return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var s=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,s.get?s:{enumerable:!0,get:function(){return e[t]}})})),n}(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));!function(e){!function(t,n,s){var r,a=256,i="random",o=s.pow(a,6),l=s.pow(2,52),u=2*l,c=a-1;function h(e,c,h){var b=[],y=m(f((c=1==c?{entropy:!0}:c||{}).entropy?[e,g(n)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(a):(e=new Uint8Array(a),(t.crypto||t.msCrypto).getRandomValues(e)),g(e)}catch{var s=t.navigator,i=s&&s.plugins;return[+new Date,t,i,t.screen,g(n)]}}():e,3),b),x=new d(b),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*a,t*=a,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),n),(c.pass||h||function(e,t,n,r){return r&&(r.S&&p(r,x),e.state=function(){return p(x,{})}),n?(s[i]=e,t):e})(v,y,"global"in c?c.global:this==s,c.state)}function d(e){var t,n=e.length,s=this,r=0,i=s.i=s.j=0,o=s.S=[];for(n||(e=[n++]);r<a;)o[r]=r++;for(r=0;r<a;r++)o[r]=o[i=c&i+e[r%n]+(t=o[r])],o[i]=t;(s.g=function(e){for(var t,n=0,r=s.i,i=s.j,o=s.S;e--;)t=o[r=c&r+1],n=n*a+o[c&(o[r]=o[i=c&i+t])+(o[i]=t)];return s.i=r,s.j=i,n})(a)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(f(e[n],t-1))}catch{}return s.length?s:"string"==r?e:e+"\0"}function m(e,t){for(var n,s=e+"",r=0;r<s.length;)t[c&r]=c&(n^=19*t[c&r])+s.charCodeAt(r++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(s.random(),n),e.exports){e.exports=h;try{r=ou}catch{}}else s["seed"+i]=h}(typeof self<"u"?self:cs,[],Math)}(iu);var lu=eu.exports,uu=tu.exports,cu=nu.exports,hu=su.exports,du=ru.exports,pu=au.exports,fu=iu.exports;fu.alea=lu,fu.xor128=uu,fu.xorwow=cu,fu.xorshift7=hu,fu.xor4096=du,fu.tychei=pu;var mu=fu;class gu{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=mu.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class bu{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=mu.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const yu=Pr({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new gu(t,n,s,!1,r),i=Ra(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const xu=Pr({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=Ra(e,s),i=new bu(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function vu(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return $r.runKernel(jt,{},r)}const wu=Pr({reciprocal_:function(e){const t={x:Or(e,"x","reciprocal")};return $r.runKernel(en,t)}});const ku=Pr({relu_:function(e){const t={x:Or(e,"x","relu")};return $r.runKernel(tn,t)}});const Iu=Pr({relu6_:function(e){const t={x:Or(e,"x","relu6")};return $r.runKernel(ln,t)}});const Su=Pr({reverse_:function(e,t){const n={x:Or(e,"x","reverse")},s={dims:t};return $r.runKernel(un,n,s)}});const Cu=Pr({round_:function(e){const t={x:Or(e,"x","round")};return $r.runKernel(cn,t)}});const Tu=Pr({rsqrt_:function(e){const t={x:Or(e,"x","rsqrt","float32")};return $r.runKernel(hn,t)}});const Nu=Pr({selu_:function(e){const t={x:Or(e,"x","selu")};return $r.runKernel(mn,t)}});const Ru=Pr({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const l=Or(e,"x","separableConv2d"),u=Or(t,"depthwiseFilter","separableConv2d"),c=Or(n,"pointwiseFilter","separableConv2d");let h=l,d=!1;if(3===l.rank&&(d=!0,h=to(l,[1,l.shape[0],l.shape[1],l.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");o(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),o(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),o(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),o(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),o(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const p=u.shape[2],f=u.shape[3];o(c.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${c.shape[2]}.`));const m=Fo(h,u,s,r,i,a),g=So(m,c,1,"valid",i);return d?to(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Gu=Pr({sign_:function(e){const t={x:Or(e,"x","sign")};return $r.runKernel(xn,t)}});const Lu=Pr({sin_:function(e){const t={x:Or(e,"x","sin","float32")};return $r.runKernel(bn,t)}});const Wu=Pr({sinh_:function(e){const t={x:Or(e,"x","sinh")};return $r.runKernel(yn,t)}});const Eu=Pr({slice1d_:function(e,t,n){const s=Or(e,"x","slice1d");return o(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),io(s,[t],[n])}});const Mu=Pr({slice2d_:function(e,t,n){const s=Or(e,"x","slice2d");return o(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),io(s,t,n)}});const $u=Pr({slice3d_:function(e,t,n){const s=Or(e,"x","slice3d");return o(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),io(s,t,n)}});const zu=Pr({slice4d_:function(e,t,n){const s=Or(e,"x","slice4d");return o(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),io(s,t,n)}});const Fu=Pr({softmax_:function(e,t=-1){const n=Or(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return $r.runKernel(Tn,s,r)}});const Xu=Pr({fft_:function(e){o("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return $r.runKernel(Qe,t)}});const Vu=Pr({ifft_:function(e){o("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return $r.runKernel(lt,t)}});const Zu=Pr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=to(e,[n,t]);s=Vu(r)}else{const r=[n,2*(t-1)],a=to(_a(e),[n,t]),i=to(Ha(e),[n,t]),o=Su(io(a,[0,1],[n,t-2]),1),l=Ri(Su(io(i,[0,1],[n,t-2]),1),nl(-1)),u=ro([a,o],1),c=ro([i,l],1),h=to(Br(u,c),[r[0],r[1]]);s=Vu(h)}if(s=_a(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=to(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}});const Ku=Pr({split_:function(e,t,n=0){const s={x:Or(e,"x","split")},r={numOrSizeSplits:t,axis:n};return $r.runKernel(Cn,s,r)}});const Du=Pr({rfft_:function(e,t){o("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=io(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=ro([e,Dl(s)],e.shape.length-1),n=t}else r=e;const a=Ko(r),i=to(Br(r,a),[s,n]),l=Xu(i),u=Math.floor(n/2)+1,c=_a(l),h=Ha(l),d=Ku(c,[u,n-u],c.shape.length-1),p=Ku(h,[u,n-u],h.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=u,to(Br(d[0],p[0]),f)}});const Ou=Pr({squaredDifference_:function(e,t){let n=Or(e,"a","squaredDifference"),s=Or(t,"b","squaredDifference");[n,s]=Nr(n,s),ja(n.shape,s.shape);const r={a:n,b:s};return $r.runKernel(En,r,{})}});const Au=Pr({squeeze_:function(e,t){const n=Or(e,"x","squeeze","string_or_numeric");return to(n,x(n.shape,t).newShape)}});const Pu=Pr({stack_:function(e,t=0){const n=Ar(e,"tensors","stack","string_or_numeric");o(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return $r.runKernel(Bt,s,r)}});const Bu=Pr({step_:function(e,t=0){const n={x:Or(e,"x","step")},s={alpha:t};return $r.runKernel(Yn,n,s)}});const Hu=Pr({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Or(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return $r.runKernel($n,u,c)}});const Uu=Pr({tan_:function(e){const t={x:Or(e,"x","tan","float32")};return $r.runKernel(Zn,t)}});function _u(e,t){u(e);const n=Zr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Hr(e,null,n,t)}function Yu(e,t,n){if(u(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Zr(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Hr(e,t,s,n)}const Ju=Pr({topk_:function(e,t=1,n=!0){const s=Or(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=$r.runKernel(On,a,i);return{values:o,indices:l}}});const Qu=Pr({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new gu(t,n,s,!0,r),i=Ra(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const ju=Pr({unique_:function(e,t=0){const n=Or(e,"x","unique","string_or_numeric");o(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=$r.runKernel(Bn,s,r);return{values:a,indices:i}}});const qu=Pr({unsortedSegmentSum_:function(e,t,n){const s=Or(e,"x","unsortedSegmentSum"),r=Or(t,"segmentIds","unsortedSegmentSum","int32");o(p(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return $r.runKernel(Un,a,i)}});const ec=Pr({unstack_:function(e,t=0){const n=Or(e,"x","unstack","string_or_numeric");o(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return $r.runKernel(Hn,s,r)}});function tc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Ra(e,"int32"),r=Ra([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const nc=Pr({dropout_:function(e,t,n,s){const r=Or(e,"x","dropout");if(o("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),o(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof mr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(d(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,l=Ni(fl(Ci(xu(a,0,1,"float32",s),i)),i);return Ri(r,l)}});function sc(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return _u(r,"float32")}const rc=Pr({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let l=e;3===e.rank&&(l=to(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=to(t,[1,t.shape[0],t.shape[1],t.shape[2]])),o(4===l.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`)),o(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),o(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===a?l.shape[3]:l.shape[1],h="NHWC"===a?u.shape[3]:u.shape[1];o(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),o(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),eo("conv2dDerFilter",r,i);const d={x:l,dy:u},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return $r.runKernel(Ie,d,p)}});function ac(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ri(e,Bu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ic(e,t){let n=t;const s=Qa(e.shape,t.shape);return s.length>0&&(n=al(n,s)),to(n,e.shape)}function oc(e,t,n,s){if("linear"===t)return e;if("relu"===t)return ku(e);if("elu"===t)return Ao(e);if("relu6"===t)return Iu(e);if("prelu"===t)return jl(e,n);if("leakyrelu"===t)return wl(e,s);if("sigmoid"===t)return ao(e);throw new Error(`Unknown fused activation ${t}.`)}const lc=(e,t)=>!(e>0)||"linear"===t;const uc=Pr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(u=u||"linear",!1===lc($r.state.gradientDepth,u)){o("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=So(e,t,n,s,r,a,i);return null!=l&&(d=Ci(d,l)),oc(d,u,c,h)}const d=Or(e,"x","conv2d","float32"),p=Or(t,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=to(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),o(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),eo("fused conv2d",s,i);const g="NHWC"===r?f.shape[3]:f.shape[1];o(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),o(ji(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const b=Pi(f.shape,p.shape,n,a,s,i);let y,x;if(null!=l&&(y=Or(l,"bias","fused conv2d"),[y]=Nr(y,d),"NHWC"===r?ja(b.outShape,y.shape):(o(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),o(0===y.shape.length||y.shape[0]===b.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=c){const e=c.shape;if(o(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)o(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{ja(e,b.outShape)}catch{const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(t)}x=Or(c,"prelu weights","fused conv2d")}const v=(e,t)=>{o("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[i,l,c,h]=t,d=ac(e,c,u);o(Qi(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[To(l.shape,d,i,n,s),rc(l,d,i.shape,n,s)];if(null!=h){const e=ic(h,d);p.push(e)}return p},w={x:f,filter:p,bias:y,preluActivationWeights:x},k={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:h};return null==l?Nl(((e,t,n)=>{let s=$r.runKernel(qn,w,k);return n([t,e,s]),m&&(s=to(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}))(f,p):Nl(((e,t,n,s)=>{let r=$r.runKernel(qn,w,k);return s([t,e,r,n]),m&&(r=to(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}))(f,p,y)}});const cc=Pr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=to(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=to(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return $r.runKernel(Fe,u,c)}});const hc=Pr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=to(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=$r.runKernel(Xe,u,c);return l?to(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const dc=Pr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:l=.2}){if(!1===lc($r.state.gradientDepth,a)){let o=Xa(e,t,n,s);return null!=r&&(o=Ci(o,r)),oc(o,a,i,l)}let u=Or(e,"a","fused matMul"),c=Or(t,"b","fused matMul");[u,c]=Nr(u,c);const d=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?c.shape[c.rank-1]:c.shape[c.rank-2],f=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=s?c.shape[c.rank-2]:c.shape[c.rank-1],g=u.shape.slice(0,-2),b=c.shape.slice(0,-2),y=h(g),x=h(b);o(d===p,(()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=ja(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([f,m]),w=to(u,n?[y,d,f]:[y,f,d]),k=to(c,s?[x,m,p]:[x,p,m]);let I,S;null!=r&&(I=Or(r,"bias","fused matMul"),[I]=Nr(I,u),ja(v,I.shape)),null!=i&&(S=Or(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[i,o,l,u]=t,c=ac(to(e,l.shape),l,a);let h,d;if(n||s?!n&&s?(h=Xa(c,o,!1,!1),d=Xa(c,i,!0,!1)):n&&!s?(h=Xa(o,c,!1,!0),d=Xa(i,c,!1,!1)):(h=Xa(o,c,!0,!0),d=Xa(c,i,!0,!0)):(h=Xa(c,o,!1,!0),d=Xa(i,c,!0,!1)),null!=r){return[h,d,ic(u,c)]}return[h,d]},T={a:w,b:k,bias:I,preluActivationWeights:S},N={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:l};return null==r?Nl(((e,t,n)=>{const s=$r.runKernel(jn,T,N);return n([e,t,s]),{value:to(s,v),gradFunc:C}}))(w,k):Nl(((e,t,n,s)=>{const r=$r.runKernel(jn,T,N);return s([e,t,r,n]),{value:to(r,v),gradFunc:C}}))(w,k,I)}});Pr({hammingWindow_:function(e){return sc(e,.54,.46)}});const pc=Pr({hannWindow_:function(e){return sc(e,.5,.5)}});const fc=Pr({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(io(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=ro([io(e,a,t-s),yo([s],r)]);i.push(o),a+=n}return 0===i.length?Yu([],[0,t]):to(ro(i),[i.length,t])}});Pr({stft_:function(e,t,n,s,r=pc){null==s&&(s=function(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}(t));const a=fc(e,t,n),i=Ri(a,r(t));return Du(i,s)}});const mc=Pr({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Or(e,"image","cropAndResize"),l=Or(t,"boxes","cropAndResize","float32"),u=Or(n,"boxInd","cropAndResize","int32"),c=l.shape[0];o(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),o(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${l.shape}.`)),o(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${l.shape}.`)),o(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),o(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),o("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const h={image:i,boxes:l,boxInd:u},d={method:r,extrapolationValue:a,cropSize:s};return $r.runKernel(Ee,h,d)}});const gc=Pr({flipLeftRight_:function(e){const t=Or(e,"image","flipLeftRight","float32");o(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return $r.runKernel(qe,n,{})}});const bc=Pr({grayscaleToRGB_:function(e){const t=Or(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];o(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),o(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,dl(t,r)}});const yc=Pr({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Or(e,"image","rotateWithOffset","float32");o(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return $r.runKernel(Qn,a,i)}});function xc(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),o(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),o(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),o(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),o(1===t.rank,(()=>"scores must be a 1D tensor")),o(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),o(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const vc=Pr({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Or(e,"boxes","nonMaxSuppression","float32"),i=Or(t,"scores","nonMaxSuppression","float32"),o=xc(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return $r.runKernel(Kt,{boxes:a,scores:i},l)}});function wc(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||kc)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function kc(e,t){return e>t?1:e<t?-1:0}function Ic(e,t,n,s,r){return Tc(e,t,n,s,r,0)}function Sc(e,t,n,s,r,a){return Tc(e,t,n,s,r,0,!1,a,!0)}function Cc(e,t,n,s,r,a){return Tc(e,t,n,s,r,a,!0)}function Tc(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Gc);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Nc(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*Rc(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&wc(u,t,Gc))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Nc(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function Rc(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Gc(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Lc=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Or(e,"boxes","nonMaxSuppressionAsync"),i=Or(t,"scores","nonMaxSuppressionAsync"),o=xc(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Ic(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),_u(h,"int32")};const Wc=Pr({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Or(e,"boxes","nonMaxSuppression"),o=Or(t,"scores","nonMaxSuppression"),l=xc(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=$r.runKernel(Ot,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Ec=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Or(e,"boxes","nonMaxSuppressionAsync"),o=Or(t,"scores","nonMaxSuppressionAsync"),l=xc(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Cc(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_u(d,"int32"),selectedScores:_u(p)}};const Mc=Pr({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Or(e,"boxes","nonMaxSuppression"),o=Or(t,"scores","nonMaxSuppression"),l=xc(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=$r.runKernel(Dt,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const $c=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Or(e,"boxes","nonMaxSuppressionAsync"),o=Or(t,"scores","nonMaxSuppressionAsync"),l=xc(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Sc(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_u(f,"int32"),validOutputs:nl(m,"int32")}};const zc=Pr({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Or(e,"images","resizeBilinear");o(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),o(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),o(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=to(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},c=$r.runKernel(an,l,u);return i?to(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Fc=Pr({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Or(e,"images","resizeNearestNeighbor");o(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),o(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=to(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},c=$r.runKernel(sn,l,u);return i?to(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Xc=Pr({threshold_:function(e,t="binary",n=!1,s=.5){const r=Or(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,l,u,c,h=Ri(_u([s]),255);if(o(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),o(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),o("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),o("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,l,u]=Ku(r,[1,1,1],-1);const e=Ri(i,.2989),t=Ri(l,.587),n=Ri(u,.114);c=Ci(Ci(e,t),n)}else c=e;if("otsu"===t){h=function(e,t){let n,s,r,a,i,o,l=_u([-1]),u=_u([0]),c=_u([0]);for(let h=0;h<e.size-1;h++){n=io(e,0,h+1),s=io(e,h+1),i=Ni(al(n),t),o=Ni(al(s),t);const d=al(Ri(n,vu(0,n.size)));r=Ni(d,al(n));const p=yo(s.shape,n.size),f=Ci(vu(0,s.size),p),m=Ri(s,f);a=Ni(al(m),al(s));const g=Ll(r,a),b=Ll(r,a),y=Ri(i,o);c=Ri(Ri(y,g),b);const x=gl(c,u);u=Zo(x,c,u),l=Zo(x,_u([h]),l)}return l}(mo(Ga(Cu(c),"int32"),Ur([]),256),a)}const d=n?Il(c,h):gl(c,h);return Ga(Ri(d,255),"int32")}});const Vc=Pr({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=Or(e,"image","transform","float32"),l=Or(t,"transforms","transform","float32");o(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),o(2===l.rank&&(l.shape[0]===i.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),o(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:i,transforms:l},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return $r.runKernel(An,u,c)}});const Zc=Pr({bandPart_:function(e,t,n){o(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),o(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Or(e,"a","bandPart");o(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const l=to(vu(0,a,1,"int32"),[-1,1]),u=vu(0,i,1,"int32"),c=Ll(l,u),h=Ml(Il(c,nl(+t,"int32")),bl(c,nl(-n,"int32"))),d=Dl([a,i],s.dtype);return to(Pu(ec(to(s,[-1,a,i])).map((e=>Zo(h,e,d)))),r)}});const Kc=Pr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,o(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)o(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Ku(e,e.shape[0],0).map((e=>Au(e,[0])));o(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push($r.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=Ri(al(Ri(n[s],e)),n[s]);e=Ll(e,t)}return Ni(e,ol(e,"euclidean"))})));return t?Pu(n,0):n}});function Dc(e,t=!1){return $r.tidy((()=>{o(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=pl(n),a=La(e);const i=Yu([[1]],[1,1]);let l=La(i);const u=n>=s?s:n;for(let e=0;e<u;++e){const t=a,o=l,u=r;[l,a,r]=$r.tidy((()=>{const t=io(a,[e,e],[n-e,1]),o=ol(t),u=io(a,[e,e],[1,1]),c=Zo(gl(u,0),Yu([[-1]]),Yu([[1]])),h=Ll(u,Ri(c,o)),d=Ni(t,h);l=1===d.shape[0]?La(i):ro([i,io(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Ua(Ni(Xa(c,h),o)),f=io(a,[e,0],[n-e,s]),m=Ri(p,l),g=Ya(l);if(0===e)a=Ll(f,Xa(m,Xa(g,f)));else{const t=Ll(f,Xa(m,Xa(g,f)));a=ro([io(a,[0,0],[e,s]),t],0)}const b=Ya(m),y=io(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Ll(y,Xa(Xa(y,l),b));else{const t=Ll(y,Xa(Xa(y,l),b));r=ro([io(r,[0,0],[n,e]),t],1)}return[l,a,r]})),Oa([t,o,u])}return!t&&n>s&&(r=io(r,[0,0],[n,s]),a=io(a,[0,0],[s,s])),[r,a]}))}const Oc=Pr({qr_:function(e,t=!1){if(o(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Dc(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=ec(to(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach((e=>{const[n,s]=Dc(e,t);r.push(n),a.push(s)}));return[to(Pu(r,0),e.shape),to(Pu(a,0),e.shape)]}}});var Ac;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ac||(Ac={}));const Pc=Pr({computeWeightedLoss_:function(e,t,n=Ac.SUM_BY_NONZERO_WEIGHTS){const s=Or(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Or(t,"weights","computeWeightedLoss"));const a=null==r?s:Ri(s,r);if(n===Ac.NONE)return a;if(n===Ac.SUM)return al(a);if(n===Ac.MEAN){if(null==r)return Kl(a);{const e=s.size/r.size,t=Ni(al(a),al(r));return e>1?Ni(t,nl(e)):t}}if(n===Ac.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Ni(al(a),nl(s.size));{const e=Ri(r,Ol(s.shape)),t=Ga(al(Ul(e,nl(0))),"float32");return Ni(al(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Pr({absoluteDifference_:function(e,t,n,s=Ac.SUM_BY_NONZERO_WEIGHTS){const r=Or(e,"labels","absoluteDifference"),a=Or(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Or(n,"weights","absoluteDifference")),l(r.shape,a.shape,"Error in absoluteDifference: ");const o=Gi(Ll(r,a));return Pc(o,i,s)}});Pr({cosineDistance_:function(e,t,n,s,r=Ac.SUM_BY_NONZERO_WEIGHTS){const a=Or(e,"labels","cosineDistance"),i=Or(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Or(s,"weights","cosineDistance")),l(a.shape,i.shape,"Error in cosineDistance: ");const u=nl(1),c=Ll(u,al(Ri(a,i),n,!0));return Pc(c,o,r)}});Pr({hingeLoss_:function(e,t,n,s=Ac.SUM_BY_NONZERO_WEIGHTS){let r=Or(e,"labels","hingeLoss");const a=Or(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Or(n,"weights","hingeLoss")),l(r.shape,a.shape,"Error in hingeLoss: ");const o=nl(1);r=Ll(Ri(nl(2),r),o);const u=ku(Ll(o,Ri(r,a)));return Pc(u,i,s)}});Pr({huberLoss_:function(e,t,n,s=1,r=Ac.SUM_BY_NONZERO_WEIGHTS){const a=Or(e,"labels","huberLoss"),i=Or(t,"predictions","huberLoss");let o=null;null!=n&&(o=Or(n,"weights","huberLoss")),l(a.shape,i.shape,"Error in huberLoss: ");const u=nl(s),c=Gi(Ll(i,a)),h=Al(c,u),d=Ll(c,h),p=Ci(Ri(nl(.5),rl(h)),Ri(u,d));return Pc(p,o,r)}});Pr({logLoss_:function(e,t,n,s=1e-7,r=Ac.SUM_BY_NONZERO_WEIGHTS){const a=Or(e,"labels","logLoss"),i=Or(t,"predictions","logLoss");let o=null;null!=n&&(o=Or(n,"weights","logLoss")),l(a.shape,i.shape,"Error in logLoss: ");const u=nl(1),c=nl(s),h=Ua(Ri(a,Cl(Ci(i,c)))),d=Ri(Ll(u,a),Cl(Ci(Ll(u,i),c))),p=Ll(h,d);return Pc(p,o,r)}});Pr({meanSquaredError_:function(e,t,n,s=Ac.SUM_BY_NONZERO_WEIGHTS){const r=Or(e,"labels","meanSquaredError"),a=Or(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Or(n,"weights","meanSquaredError")),l(r.shape,a.shape,"Error in meanSquaredError: ");const o=Ou(r,a);return Pc(o,i,s)}});Pr({sigmoidCrossEntropy_:function(e,t,n,s=0,r=Ac.SUM_BY_NONZERO_WEIGHTS){let a=Or(e,"multiClassLabels","sigmoidCrossEntropy");const i=Or(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Or(n,"weights","sigmoidCrossEntropy")),l(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=nl(s),t=nl(1),n=nl(.5);a=Ci(Ri(a,Ll(t,e)),Ri(n,e))}const u=function(e,t){const n=Or(e,"labels","sigmoidCrossEntropyWithLogits"),s=Or(t,"logits","sigmoidCrossEntropyWithLogits");l(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=ku(s),a=Ri(s,n),i=Tl(ul(Ua(Gi(s))));return Ci(Ll(r,a),i)}(a,i);return Pc(u,o,r)}});Pr({softmaxCrossEntropy_:function(e,t,n,s=0,r=Ac.SUM_BY_NONZERO_WEIGHTS){let a=Or(e,"onehotLabels","softmaxCrossEntropy");const i=Or(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Or(n,"weights","softmaxCrossEntropy")),l(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=nl(s),t=nl(1),n=nl(a.shape[1]);a=Ci(Ri(a,Ll(t,e)),Ni(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Nl(((e,t,s)=>{const r=El(t,[n],!0),a=Ll(Ga(t,"float32"),r);s([e,a]);const i=Ua(Ri(a,e));return{value:al(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=_o(e.shape,[n]);return[Ri(to(e,a),Ll(Ga(s,"float32"),ul(r))),Ri(to(e,a),Ll(ul(r),Ga(s,"float32")))]}}}))(e,t)}(a,i);return Pc(u,o,r)}});Pr({sparseFillEmptyRows_:function(e,t,n,s){const r=Or(e,"indices","sparseFillEmptyRows","int32"),a=Or(t,"values","sparseFillEmptyRows"),i=Or(n,"denseShape","sparseFillEmptyRows","int32"),o=Or(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=$r.runKernel(Nn,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});Pr({sparseReshape_:function(e,t,n){const s=Or(e,"inputIndices","sparseReshape","int32"),r=Or(t,"inputShape","sparseReshape","int32"),a=Or(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=$r.runKernel(Rn,i);return{outputIndices:o[0],outputShape:o[1]}}});Pr({sparseSegmentMean_:function(e,t,n){const s=Or(e,"data","sparseSegmentMean"),r=Or(t,"indices","sparseSegmentMean","int32"),a=Or(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return $r.runKernel(Gn,i)}});Pr({sparseSegmentSum_:function(e,t,n){const s=Or(e,"data","sparseSegmentSum"),r=Or(t,"indices","sparseSegmentSum","int32"),a=Or(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return $r.runKernel(Ln,i)}});Pr({stringNGrams_:function(e,t,n,s,r,a,i,o){const l=Or(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Or(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=$r.runKernel(zn,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});Pr({stringSplit_:function(e,t,n=!0){const s=Or(e,"input","stringSplit","string"),r=Or(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=$r.runKernel(Fn,i,a);return{indices:o[0],values:o[1],shape:o[2]}}});Pr({stringToHashBucketFast_:function(e,t){const n=Or(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return $r.runKernel(Xn,r,s)}});const Bc={flipLeftRight:gc,grayscaleToRGB:bc,resizeNearestNeighbor:Fc,resizeBilinear:zc,rotateWithOffset:yc,cropAndResize:mc,nonMaxSuppression:vc,nonMaxSuppressionAsync:Lc,nonMaxSuppressionWithScore:Wc,nonMaxSuppressionWithScoreAsync:Ec,nonMaxSuppressionPadded:Mc,nonMaxSuppressionPaddedAsync:$c,threshold:Xc,transform:Vc},Hc={bandPart:Zc,gramSchmidt:Kc,qr:Oc};class Uc extends ki{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Oa(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){o(R(e),(()=>"The f passed in variableGrads(f) must be a function")),o(null==t||Array.isArray(t)&&t.every((e=>e instanceof br)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in $r.registeredVariables)t.push($r.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;o((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=$r.gradients(e,t,null,!0);o(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=i[t]&&(l[e.name]=i[t])})),null!=s&&s.forEach((e=>l[e.name]=null)),{value:a,grads:l}}(e,t)}dispose(){null!=this.iterations_&&Oa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:nl(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Uc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class _c extends Uc{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=$r.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Da((()=>Ko(s).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Da((()=>Ko(s).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Da((()=>{const e=Ci(Ri(a,this.rho),Ri(rl(r),1-this.rho)),t=Ri(Ni(sl(Ci(i,this.epsilon)),sl(Ci(a,this.epsilon))),r),n=Ci(Ri(i,this.rho),Ri(rl(t),1-this.rho));a.assign(e),i.assign(n);const o=Ci(Ri(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Oa(this.accumulatedGrads.map((e=>e.variable))),Oa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}_c.className="Adadelta",Si(_c);class Yc extends Uc{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Da((()=>yo(s.shape,this.initialAccumulatorValue).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;Da((()=>{const e=Ci(a,rl(r));a.assign(e);const t=Ci(Ri(Ni(r,sl(Ci(e,$r.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Oa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Yc.className="Adagrad",Si(Yc);class Jc extends Uc{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Da((()=>{this.accBeta1=nl(t).variable(),this.accBeta2=nl(n).variable()})),null==s&&(this.epsilon=$r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Da((()=>{const n=Ll(1,this.accBeta1),s=Ll(1,this.accBeta2);t.forEach(((t,r)=>{const a=$r.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Da((()=>Ko(a).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Da((()=>Ko(a).variable(false)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Ci(Ri(o,this.beta1),Ri(i,1-this.beta1)),c=Ci(Ri(l,this.beta2),Ri(rl(i),1-this.beta2)),h=Ni(u,n),d=Ni(c,s);o.assign(u),l.assign(c);const p=Ci(Ri(Ni(h,Ci(sl(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(Ri(this.accBeta1,this.beta1)),this.accBeta2.assign(Ri(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Oa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Oa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Da((()=>{this.accBeta1.assign(tl(this.beta1,this.iterations_+1)),this.accBeta2.assign(tl(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Jc.className="Adam",Si(Jc);class Qc extends Uc{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Da((()=>{this.iteration=nl(0).variable(),this.accBeta1=nl(t).variable()})),null==s&&(this.epsilon=$r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Da((()=>{const n=Ll(1,this.accBeta1),s=Ni(-this.learningRate,Ci(Ri(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=$r.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Ko(a).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Ko(a).variable(false)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Ci(Ri(o,this.beta1),Ri(i,1-this.beta1)),c=Ri(l,this.beta2),h=Gi(i),d=Zl(c,h);o.assign(u),l.assign(d);const p=Ci(Ri(Ni(s,n),Ni(u,Ci(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(Ci(this.iteration,1)),this.accBeta1.assign(Ri(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Oa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Oa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Qc.className="Adamax",Si(Qc);class jc extends Uc{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=$r.registeredVariables[t];Da((()=>{const e=Ci(Ri(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Aa(nl(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}jc.className="SGD",Si(jc);class qc extends jc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=nl(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Da((()=>Ko(s).variable(!1)))});const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Da((()=>{let e;const t=Ci(Ri(this.m,r),a);e=this.useNesterov?Ci(Ri(this.c,Ci(a,Ri(t,this.m))),s):Ci(Ri(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Oa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}qc.className="Momentum",Si(qc);class eh extends Uc{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=$r.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=$r.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Da((()=>Ko(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Da((()=>Ko(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Da((()=>Ko(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Da((()=>{const e=Ci(Ri(i,this.decay),Ri(rl(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Ci(Ri(t,this.decay),Ri(a,1-this.decay)),l=Ni(Ri(a,this.learningRate),sl(Ll(e,Ci(rl(r),this.epsilon)))),u=Ci(Ri(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=Ll(s,u);s.assign(c)}else{const e=Ci(Ri(i,this.decay),Ri(rl(a),1-this.decay)),t=Ci(Ri(o,this.momentum),Ni(Ri(a,this.learningRate),sl(Ci(e,this.epsilon))));i.assign(e),o.assign(t);const n=Ll(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Oa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Oa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Oa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}eh.className="RMSProp",Si(eh);class th{static sgd(e){return new jc(e)}static momentum(e,t,n=!1){return new qc(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new eh(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Jc(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new _c(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Qc(e,t,n,s,r)}static adagrad(e,t=.1){return new Yc(e,t)}}const nh={sgd:th.sgd,momentum:th.momentum,adadelta:th.adadelta,adagrad:th.adagrad,rmsprop:th.rmsprop,adamax:th.adamax,adam:th.adam},sh=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function rh(){return new Promise((e=>sh((()=>e()))))}function ah(e,t){const n=e[0].length;e.forEach(((e,t)=>{o(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),o(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)o(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function ih(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var oh;function lh(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const a=n[r],i=s[s.length-n.length+r],o=s[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${o}`)}else s[i]=a}return s}function uh(e){const t={FIRST_DIM_SIZE:oh.FIRST_DIM_SIZE,VALUE_ROWIDS:oh.VALUE_ROWIDS,ROW_LENGTHS:oh.ROW_LENGTHS,ROW_SPLITS:oh.ROW_SPLITS,ROW_LIMITS:oh.ROW_LIMITS,ROW_STARTS:oh.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function ch(e){return 0===e.length?0:e[0]===oh.FIRST_DIM_SIZE?e.length-1:e.length}function hh(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(oh||(oh={}));const dh=30;function ph(e){return e<=dh?e:G(e,Math.floor(Math.sqrt(e)))}function fh(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function mh(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function gh(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function bh(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function yh(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function xh(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}const vh=1.7580993408473768,wh=1.0507009873554805,kh=.3275911,Ih=.254829592,Sh=-.284496736,Ch=1.421413741,Th=-1.453152027,Nh=1.061405429;function Rh(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Gh(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Lh(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Wh(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Eh(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Mh(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function $h(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function zh(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Fh="->",Xh=/->/g,Vh=",",Zh="...";function Kh(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Xh,"").length)/Fh.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Fh}").`);const[s,r]=e.split(Fh);o(-1===s.indexOf(Zh),(()=>`The ellipsis notation ("${Zh}") is not supported yet.`));const a=s.split(Vh),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===l.indexOf(t)&&l.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===l.indexOf(t)&&t!==Vh&&l.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(l.indexOf(a[e][t]))}const c=l.length,h=[];for(let e=r.length;e<c;++e)h.push(e);return{allDims:l,summedDims:h,idDims:u}}function Dh(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Oh(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:o(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function Ah(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=Bh(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function Ph(e){return e.every(((e,t)=>e===t))}function Bh(e,t){const n=[];for(let s=0;s<e.length;++s)(0===e[s].length||-1!==e[s].indexOf(t)||-1===t)&&n.push(s);return n}function Hh(e,t,n=0){let s=[];if("number"==typeof t)o(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{o(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const s=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-s}o(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function Uh(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function _h(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Yh(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Jh(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Qh(e,t){return`size ${e} must be non-negative, not ${t}`}function jh(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function qh(e,t){return`Input to reshape is a SparseTensor with ${h(e)}\n  dense values, but the requested shape requires a multiple of ${h(t)}. inputShape=${e} outputShape= ${t}`}function ed(e,t){return`Input to reshape is a tensor with ${h(e)} dense values, but the requested shape has ${h(t)}. inputShape=${e} outputShape=${t}`}function td(){return"segment ids must be >= 0"}function nd(){return"segment ids are not increasing"}function sd(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function rd(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function ad(e,t){let n,s=!1;for(e<=dh?(n=e,s=!0):n=G(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=G(e,n+1);return n}function id(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function od(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}const ld=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:ad,computeOutShape:id,collectGatherOpShapeInfo:od},Symbol.toStringTag,{value:"Module"}));function ud(e){try{return e.map((e=>er(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function cd(e){return e.map((e=>qs(e)))}const hd=Object.freeze(Object.defineProperty({__proto__:null,slice_util:wi,segment_util:ld,fromUint8ToStringArray:ud,fromStringArrayToUint8:cd,upcastType:Cr,axesAreInnerMostDims:Bo,combineLocations:Ho,computeOutAndReduceShapes:Uo,expandShapeToKeepDim:_o,assertAxesAreInnerMostDims:Yo,getAxesPermutation:Jo,getUndoAxesPermutation:Qo,getInnerMostAxes:jo,getBroadcastDims:Ja,getReductionAxes:Qa,assertAndGetBroadcastShape:ja,assertParamsConsistent:ah,computeOutShape:ih,computeDilation2DInfo:Di,computePool2DInfo:Oi,computePool3DInfo:Ai,computeConv2DInfo:Pi,computeConv3DInfo:Bi,computeDefaultPad:Hi,tupleValuesAreOne:Qi,eitherStridesOrDilationsAreOne:ji,convertConv2DDataFormat:qi,checkPadOnDimRoundingMode:eo,getFusedDyActivation:ac,getFusedBiasGradient:ic,applyActivation:oc,shouldFuse:lc,get RowPartitionType(){return oh},combineRaggedTensorToTensorShapes:lh,getRowPartitionTypesHelper:uh,getRaggedRank:ch,validateDefaultValueShape:hh,PARALLELIZE_THRESHOLD:dh,computeOptimalWindowSize:ph,getImageCenter:fh,getReshaped:mh,getPermuted:gh,getReshapedPermuted:bh,getSliceBeginCoords:yh,getSliceSize:xh,prepareAndValidate:ti,validateUpdateShape:ni,validateInput:function(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ni(n,t,e)},calculateShapes:si,SELU_SCALEALPHA:vh,SELU_SCALE:wh,ERF_P:kh,ERF_A1:Ih,ERF_A2:Sh,ERF_A3:Ch,ERF_A4:Th,ERF_A5:Nh,warn:ts,log:function(...e){A().getBool("IS_TEST")||A().getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:Rh,splitRealAndImagArrays:Gh,complexWithEvenIndex:Lh,complexWithOddIndex:Wh,getComplexWithIndex:Eh,assignToTypedArray:Mh,exponents:$h,exponent:zh,decodeEinsumEquation:Kh,getEinsumPermutation:Dh,checkEinsumDimSizes:Oh,getEinsumComputePath:Ah,isIdentityPermutation:Ph,prepareSplitSize:Hh,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Uh,getSparseFillEmptyRowsNegativeIndexErrorMessage:_h,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Yh,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Jh,getSparseReshapeNegativeOutputDimErrorMessage:Qh,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:jh,getSparseReshapeInputOutputMultipleErrorMessage:qh,getSparseReshapeInputOutputMismatchErrorMessage:ed,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:td,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:nd,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:sd,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:rd},Symbol.toStringTag,{value:"Module"})),dd={kernelName:_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Bu(Ga(n,"float32"),-1))}}},pd={kernelName:Y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=rl(Ga(n,"float32")),s=sl(Ll(nl(1),t));return Ua(Ni(e,s))}}}},fd={kernelName:J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=sl(Ll(rl(Ga(n,"float32")),1));return Ni(e,t)}}}},md={kernelName:Q,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{let t=e;const s=Qa(n.shape,r);return s.length>0&&(t=al(t,s)),to(t,n.shape)},b:()=>{let t=e;const n=Qa(s.shape,r);return n.length>0&&(t=al(t,n)),to(t,s.shape)}}}},gd={kernelName:j,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},bd={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ko(n)}}},yd={kernelName:ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ko(n)}}},xd={kernelName:se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,sl(Ll(nl(1),rl(Ga(n,"float32")))))}}},vd={kernelName:re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=sl(Ci(nl(1),rl(Ga(n,"float32"))));return Ni(e,t)}}}},wd={kernelName:oe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{const t=Ci(rl(n),rl(s));let a=Ri(e,Ni(s,t));const i=Qa(n.shape,r);return i.length>0&&(a=al(a,i)),to(a,n.shape)},b:()=>{const t=Ci(rl(n),rl(s));let a=Ua(Ri(e,Ni(n,t)));const i=Qa(s.shape,r);return i.length>0&&(a=al(a,i)),to(a,s.shape)}}}},kd={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ci(rl(Ga(n,"float32")),1))}}},Id={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ll(nl(1),rl(Ga(n,"float32"))))}}};const Sd=Pr({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Or(e,"dy","avgPool3dGrad"),l=Or(t,"input","avgPool3dGrad");let u=i,c=l,h=!1;4===l.rank&&(h=!0,u=to(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=to(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),o(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),o(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),eo("avgPool3dGrad",r,a);const d={dy:u,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},f=$r.runKernel(he,d,p);return h?to(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Cd={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Sd(e,s,r,a,i,o)}}};const Td=Pr({avgPoolGrad_:function(e,t,n,s,r){const a=Or(e,"dy","avgPoolGrad"),i=Or(t,"input","avgPoolGrad");o(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let l=i,u=a,c=!1;3===i.rank&&(c=!0,l=to(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=to(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),o(4===l.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`));const h={dy:u,input:l},d={filterSize:n,strides:s,pad:r},p=$r.runKernel(ue,h,d);return c?to(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Nd={kernelName:le,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>Td(e,s,r,a,i)}}},Rd={kernelName:de,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Xa(e,r,!1,!1),b:()=>Xa(e,s,!0,!1)}:a&&!i?{a:()=>Xa(r,e,!1,!0),b:()=>Xa(s,e,!1,!1)}:{a:()=>Xa(r,e,!0,!0),b:()=>Xa(e,s,!0,!0)}:{a:()=>Xa(e,r,!1,!0),b:()=>Xa(s,e,!0,!1)}}},Gd={kernelName:pe,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Jl(e,s,r)}}},Ld={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>al(e,o,!0)}}},Wd={kernelName:ge,gradFunc:e=>({x:()=>e.clone()})},Ed={kernelName:be,gradFunc:e=>({x:()=>Ko(e)})},Md={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Zo(Ml(bl(s,r),Il(s,a)),e,Ko(e))}}},$d={kernelName:ve,inputsToSave:["x"],gradFunc:dd.gradFunc},zd={kernelName:we,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=y(r,t[0].shape)[0],i=s.map((e=>e[a]));return Ku(e,i,a).map((e=>()=>e))}},Fd={kernelName:ke,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:l,dataFormat:u}=n;return o(Qi(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>To(s.shape,e,r,i,l,u),filter:()=>rc(s,e,r.shape,i,l,u)}}},Xd={kernelName:Se,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>So(e,r,a,i,o,1,l),filter:()=>rc(e,s,r.shape,a,i,o,l)}}};const Vd=Pr({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=to(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=to(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),o(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),o(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),o(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),o(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),o(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const l={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return $r.runKernel(Te,l,u)}}),Zd={kernelName:Ce,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;o(Qi(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,l]=t;return{x:()=>Go(i.shape,e,l,r,a),filter:()=>Vd(i,e,l.shape,r,a)}}},Kd={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(Ua(Lu(Ga(n,"float32"))),e)}}},Dd={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(Wu(Ga(n,"float32")),e)}}},Od={kernelName:We,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Jo([r],s.rank);let n=$o(e,r,a,!i);return null!=t&&(n=Ya(n,t)),n}}}},Ad={kernelName:ze,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,l=null==s?[1,1]:s;o(Qi(l),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`));const[u,c]=t;return o(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),o(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),o(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),o(ji(r,l),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${l}'.`)),eo("depthwiseConv2d",a,i),{x:()=>hc(u.shape,e,c,r,a,l,i),filter:()=>cc(u,e,c.shape,r,a,l,i)}}},Pd={kernelName:Ze,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>$r.runKernel(Ke,a,n),filter:()=>$r.runKernel(De,i,n)}}},Bd={kernelName:Pe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>$r.runKernel(Be,s)}}},Hd={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Ri(ul(Ua(rl(n))),2/Math.sqrt(Math.PI));return{x:()=>Ri(e,s)}}},Ud={kernelName:_e,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,n)}}},_d={kernelName:Ye,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>to(e,n.shape)}}},Yd={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,ul(n))}}},Jd={kernelName:et,gradFunc:e=>({x:()=>Ko(e)})},Qd={kernelName:tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{const t=Ni(e,Ga(s,"float32")),a=Qa(n.shape,r);return a.length>0?to(al(t,a),n.shape):t},b:()=>{let t=Ri(e,Ga(n,"float32"));const a=Qa(s.shape,r);a.length>0&&(t=to(al(t,a),s.shape));const i=rl(s);return Ua(Ni(t,Ga(i,"float32")))}}}},jd={kernelName:nt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?nl(1):o,u=Qa(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=Ll(r,a),d=Ri(e,l),p=Tu(Ci(i,nl(s))),f=Ri(Ri(Ri(p,p),p),nl(-.5));return{x:()=>1===a.rank?to(Ri(Ri(e,dl(to(p,[1,1,1,a.shape[0]]),c)),l),r.shape):to(Ri(Ri(e,p),l),r.shape),mean:()=>{let e=Ri(Ri(p,nl(-1)),d);return 1===a.rank&&(e=al(e,u)),to(e,a.shape)},variance:()=>{let e=Ri(Ri(f,h),d);return 1===a.rank&&(e=al(e,u)),to(e,a.shape)},scale:()=>{const t=Ri(h,p);let n=Ri(e,t);return 1===a.rank&&(n=al(n,u)),to(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=al(t,u)),to(t,a.shape)}}}},qd={kernelName:st,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=y(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=ep(0,l),d=ep(l+1,l+1+c),p=tp([o,[n],u]),f=to(e,p),m=to(r,[n]),g=tp([[l],h,d]),b=Ya(f,g);let y=qu(b,m,s.shape[i]);const x=Qo(g);return y=Ya(y,x),y},indices:()=>r}}};function ep(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function tp(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const np={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Ko(n),b:()=>Ko(s)}}},sp={kernelName:ot,gradFunc:e=>({x:()=>Ga(e,"float32")})},rp={kernelName:ct,gradFunc:e=>({x:()=>Ko(e)})},ap={kernelName:ht,gradFunc:e=>({x:()=>Ko(e)})},ip={kernelName:dt,gradFunc:e=>({x:()=>Ko(e)})},op={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=gl(s,0);return{x:()=>Zo(a,e,Ri(e,r))}}},lp={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ci(n,1))}}},up={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ga(n,"float32"))}}},cp={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=ul(s);return Ll(e,Ri(al(e,r,!0),t))}}}};const hp=Pr({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return $r.runKernel(It,o,l)}}),dp={kernelName:kt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>hp(s,r,e,a,i,o,l)}}};function pp(e,t,n,s){return t.rank<n.rank&&(t=to(t,_o(t.shape,s))),e.rank<n.rank&&(e=to(e,_o(e.shape,s))),{x:()=>Ri(e,Ga(Vo(n,t),e.dtype))}}const fp={kernelName:St,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=pp(e,t[1],a,y(r,a.shape));return{x:()=>i.x()}}},mp={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Ri(e,Ga(bl(n,s),"float32")),b:()=>Ri(e,Ga(kl(n,s),"float32"))}}};const gp=Pr({maxPool3dGrad_:function(e,t,n,s,r,a,i){const l=Or(e,"dy","maxPool3dGrad"),u=Or(t,"input","maxPool3dGrad"),c=Or(n,"output","maxPool3dGrad");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=to(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=to(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=to(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),o(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),o(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),o(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),eo("maxPool3dGrad",a,i);const m={dy:h,input:d,output:p},g={filterSize:s,strides:r,pad:a,dimRoundingMode:i},b=$r.runKernel(Gt,m,g);return f?to(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),bp={kernelName:Rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>gp(e,s,r,a,i,o,l)}}};const yp=Pr({maxPoolGrad_:function(e,t,n,s,r,a,i){const l=Or(e,"dy","maxPoolGrad"),u=Or(t,"input","maxPoolGrad"),c=Or(n,"output","maxPoolGrad");o(u.rank===l.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`)),o(4===l.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),o(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),eo("maxPoolGrad",a,i);const h={dy:l,input:u,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return $r.runKernel(Nt,h,d)}}),xp={kernelName:Tt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>yp(e,s,r,a,i,o)}}},vp={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=y(r,s.shape),i=h(Uo(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=to(e,t);return Ni(Ri(n,Ol(s.shape,"float32")),i)}}}},wp={kernelName:Et,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=pp(e,i,a,y(r,a.shape));return{x:()=>o.x()}}},kp={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Ri(e,Ga(Il(n,s),"float32")),b:()=>Ri(e,Ga(gl(n,s),"float32"))}}},Ip={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>io(e,a,s.shape)}}},Sp={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{const t=Qa(n.shape,r);return t.length>0?to(al(e,t),n.shape):e},b:()=>{const t=Ri(e,Ua(fl(Ni(n,s)))),a=Qa(s.shape,r);return a.length>0?to(al(t,a),s.shape):t}}}},Cp={kernelName:Xt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{const t=Ri(e,Ga(s,"float32")),a=Qa(n.shape,r);return a.length>0?to(al(t,a),n.shape):t},b:()=>{const t=Ri(e,Ga(n,"float32")),a=Qa(s.shape,r);return a.length>0?to(al(t,a),s.shape):t}}}},Tp={kernelName:Vt,gradFunc:e=>({x:()=>Ua(e)})},Np={kernelName:At,gradFunc:e=>({x:()=>Ko(e)})},Rp={kernelName:Bt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return ec(e,s).map((e=>()=>e))}},Gp={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>io(e,a,s.shape)}}},Lp={kernelName:Ut,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=ja(a.shape,i.shape);return{a:()=>{const t=Ga(i,"float32");let n=Ri(e,Ri(t,tl(a,Ll(t,nl(1)))));const s=Qa(a.shape,o);return s.length>0&&(n=al(n,s)),to(n,a.shape)},b:()=>{const t=gl(a,0),n=Zo(t,Cl(a),Ko(a));let s=Ri(e,Ri(r,n));const l=Qa(i.shape,o);return l.length>0&&(s=al(s,l)),to(s,i.shape)}}}},Wp={kernelName:_t,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=gl(n,0);return{x:()=>Zo(r,e,Ri(e,s)),alpha:()=>{let t=Zo(r,Ko(e),Ri(e,n));const a=Qa(s.shape,e.shape);return a.length>0&&(t=al(t,a)),to(t,s.shape)}}}};function Ep(e,t,n){const s=e.shape.length,r=s-n.length,a=Jo(n,s);let i=e;null!=a&&(i=Ya(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=to(t,s),a=Mo(e,n,!0,!1),i=Mo(e,n,!0,!0),o=Ri(a,i);return Ri(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=Qo(a);u=Ya(u,e)}return u}const Mp={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>Ep(s,e,a)}}},$p={kernelName:Oe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{const t=Ni(e,Ga(s,"float32")),a=Qa(n.shape,r);return a.length>0?to(al(t,a),n.shape):t},b:()=>{let t=Ri(e,Ga(n,"float32"));const a=Qa(s.shape,r);a.length>0&&(t=to(al(t,a),s.shape));const i=rl(s);return Ua(Ni(t,Ga(i,"float32")))}}}},zp={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ua(rl(n)))}}},Fp={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Ri(Il(n,6),Bu(n));return{x:()=>Ri(e,Ga(s,"float32"))}}},Xp={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Ga(Bu(n),"float32"))}}},Vp={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,n.shape)}}},Zp={kernelName:an,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>$r.runKernel(on,r,n)}}},Kp={kernelName:sn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>$r.runKernel(rn,r,n)}}},Dp={kernelName:un,gradFunc:(e,t,n)=>{const{dims:s}=n,r=y(s,e.shape);return{x:()=>Su(e,r)}}},Op={kernelName:cn,gradFunc:e=>({x:()=>Ko(e)})},Ap={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(Ni(e,Ri(tl(n,1.5),2)))}}},Pp={kernelName:fn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ga(Ko(n),"float32"),t:()=>Ri(e,Ga(n,e.dtype)),e:()=>Ri(e,Ga($l(n),e.dtype))}}},Bp={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gl(n,nl(0)),s=nl(vh),r=nl(wh),a=Ri(e,r),i=Ri(Ri(e,s),ul(Ga(n,"float32")));return Zo(t,a,i)}}}},Hp={kernelName:vn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Ri(n,Ll(nl(1),n)))}}},Up={kernelName:xn,gradFunc:e=>({x:()=>Ko(e)})},_p={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(Wo(Ga(n,"float32")),e)}}},Yp={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(Eo(Ga(n,"float32")),e)}}},Jp={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=yi(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Yl(e,u)}}},Qp={kernelName:Tn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=Ri(e,s);return{logits:()=>Ll(a,Ri(al(a,[r],true),s))}}},jp={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,ao(n))}}},qp={kernelName:Sn,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>lo(e,s,r)}}},ef={kernelName:Cn,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>ro(e,s)}}},tf={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ri(sl(Ga(n,"float32")),2))}}},nf={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Ri(Ga(n,"float32"),2))}}},sf={kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=nl(2);return{a:()=>Ri(e,Ri(r,Ll(n,s))),b:()=>Ri(e,Ri(r,Ll(s,n)))}}},rf={kernelName:Yn,gradFunc:e=>({x:()=>Ko(e)})},af={kernelName:Vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ja(n.shape,s.shape);return{a:()=>{let t=e;const s=Qa(n.shape,r);return s.length>0&&(t=al(t,s)),to(t,n.shape)},b:()=>{let t=e;const n=Qa(s.shape,r);return n.length>0&&(t=al(t,n)),to(Ua(t),s.shape)}}}},of={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;y(a,s.shape).forEach((e=>{r[e]=1}));const i=to(e,r),o=Ri(i,Ol(s.shape,"float32"));return{x:()=>o}}},lf={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,rl(Wo(n)))}}},uf={kernelName:Kn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(Ll(nl(1),rl(n)),e)}}},cf={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=Ko(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=Ci(t,io(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=Ci(t,io(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=Ci(t,io(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Ci(t,io(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},hf={kernelName:Pn,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Qo(r);return{x:()=>Ya(e,a)}}},df={kernelName:Hn,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>Pu(e,r)}}},pf={kernelName:Un,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Zl(t,Ko(t)),s=ml(e,n);let r=bl(t,nl(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=cl(r,e+1);r=Ml(r,Ol(s.shape,"bool"));const i=Ko(s);return Zo(r,s,i)}(e,n)}}};const ff={kernelName:_n,gradFunc:e=>({x:()=>Ko(e)})},mf=[dd,pd,fd,md,gd,bd,yd,xd,vd,wd,kd,Id,Cd,Nd,Rd,Gd,Ld,Wd,Ed,Md,$d,zd,Xd,Fd,Zd,Kd,Dd,Od,Ad,Pd,$p,Bd,Hd,Ud,_d,Yd,Qd,Jd,jd,qd,np,sp,rp,ap,ip,op,lp,up,cp,dp,fp,fp,mp,bp,xp,vp,wp,kp,Ip,Sp,Cp,Tp,{kernelName:Pt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Dl(n.shape,"float32")}}},Np,Rp,Gp,Gp,Lp,Wp,Mp,zp,Fp,Xp,Vp,Zp,Kp,Dp,Op,Ap,Pp,Bp,Hp,Up,_p,Yp,Jp,Qp,jp,qp,qp,ef,ef,tf,sf,nf,rf,af,of,lf,uf,cf,hf,df,pf,ff];for(const e of mf)ls(e);gr().prototype.abs=function(){return this.throwIfDisposed(),Gi(this)},gr().prototype.acos=function(){return this.throwIfDisposed(),Li(this)},gr().prototype.acosh=function(){return this.throwIfDisposed(),Wi(this)},gr().prototype.add=function(e){return this.throwIfDisposed(),Ci(this,e)},gr().prototype.all=function(e,t){return this.throwIfDisposed(),Ei(this,e,t)},gr().prototype.any=function(e,t){return this.throwIfDisposed(),Mi(this,e,t)},gr().prototype.argMax=function(e){return this.throwIfDisposed(),$i(this,e)},gr().prototype.argMin=function(e){return this.throwIfDisposed(),zi(this,e)},gr().prototype.asScalar=function(){return this.throwIfDisposed(),o(1===this.size,(()=>"The array must have only 1 element.")),to(this,[])},gr().prototype.asType=function(e){return this.throwIfDisposed(),Ga(this,e)},gr().prototype.as1D=function(){return this.throwIfDisposed(),to(this,[this.size])},gr().prototype.as2D=function(e,t){return this.throwIfDisposed(),to(this,[e,t])},gr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),to(this,[e,t,n])},gr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),to(this,[e,t,n,s])},gr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),to(this,[e,t,n,s,r])},gr().prototype.asin=function(){return this.throwIfDisposed(),Fi(this)},gr().prototype.asinh=function(){return this.throwIfDisposed(),Xi(this)},gr().prototype.atan=function(){return this.throwIfDisposed(),Vi(this)},gr().prototype.atan2=function(e){return this.throwIfDisposed(),Zi(this,e)},gr().prototype.atanh=function(){return this.throwIfDisposed(),Ki(this)},gr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),no(this,e,t,n,s)},gr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),lo(this,e,t)},gr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),co(this,e,t,n,s,r)},gr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),go(this,e)},gr().prototype.cast=function(e){return this.throwIfDisposed(),Ga(this,e)},gr().prototype.ceil=function(){return this.throwIfDisposed(),bo(this)},gr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),xo(this,e,t)},gr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof mr&&(e=[e]),ro([this,...e],t)},gr().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Co(this,e,t,n,s,r,a)},gr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),No(this,e,t,n,s,r)},gr().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),So(this,e,t,n,s,r,a)},gr().prototype.cos=function(){return this.throwIfDisposed(),Wo(this)},gr().prototype.cosh=function(){return this.throwIfDisposed(),Eo(this)},gr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Mo(this,e,t,n)},gr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),$o(this,e,t,n)},gr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),zo(this,e,t)},gr().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Fo(this,e,t,n,s,r,a)},gr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),Xo(this,e,t,n,s,r)},gr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Do(this,e)},gr().prototype.div=function(e){return this.throwIfDisposed(),Ni(this,e)},gr().prototype.dot=function(e){return this.throwIfDisposed(),Oo(this,e)},gr().prototype.elu=function(){return this.throwIfDisposed(),Ao(this)},gr().prototype.equal=function(e){return this.throwIfDisposed(),Vo(this,e)},gr().prototype.erf=function(){return this.throwIfDisposed(),Po(this)},gr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ll(this,e,t)},gr().prototype.exp=function(){return this.throwIfDisposed(),ul(this)},gr().prototype.expandDims=function(e){return this.throwIfDisposed(),cl(this,e)},gr().prototype.expm1=function(){return this.throwIfDisposed(),hl(this)},gr().prototype.fft=function(){return this.throwIfDisposed(),Xu(this)},gr().prototype.flatten=function(){return this.throwIfDisposed(),to(this,[this.size])},gr().prototype.floor=function(){return this.throwIfDisposed(),fl(this)},gr().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ti(this,e)},gr().prototype.gather=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},gr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),bl(this,e)},gr().prototype.greater=function(e){return this.throwIfDisposed(),gl(this,e)},gr().prototype.ifft=function(){return this.throwIfDisposed(),Vu(this)},gr().prototype.irfft=function(){return this.throwIfDisposed(),Zu(this)},gr().prototype.isFinite=function(){return this.throwIfDisposed(),yl(this)},gr().prototype.isInf=function(){return this.throwIfDisposed(),xl(this)},gr().prototype.isNaN=function(){return this.throwIfDisposed(),vl(this)},gr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),wl(this,e)},gr().prototype.lessEqual=function(e){return this.throwIfDisposed(),Il(this,e)},gr().prototype.less=function(e){return this.throwIfDisposed(),kl(this,e)},gr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Sl(this,e,t,n,s)},gr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Gl(this)},gr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Wl(this,e)},gr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),El(this,e,t)},gr().prototype.log=function(){return this.throwIfDisposed(),Cl(this)},gr().prototype.log1p=function(){return this.throwIfDisposed(),Tl(this)},gr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ml(this,e)},gr().prototype.logicalNot=function(){return this.throwIfDisposed(),$l(this)},gr().prototype.logicalOr=function(e){return this.throwIfDisposed(),zl(this,e)},gr().prototype.logicalXor=function(e){return this.throwIfDisposed(),Fl(this,e)},gr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Xa(this,e,t,n)},gr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Xl(this,e,t,n,s)},gr().prototype.max=function(e,t){return this.throwIfDisposed(),qo(this,e,t)},gr().prototype.maximum=function(e){return this.throwIfDisposed(),Zl(this,e)},gr().prototype.mean=function(e,t){return this.throwIfDisposed(),Kl(this,e,t)},gr().prototype.min=function(e,t){return this.throwIfDisposed(),el(this,e,t)},gr().prototype.minimum=function(e){return this.throwIfDisposed(),Al(this,e)},gr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Pl(this,e,t)},gr().prototype.mod=function(e){return this.throwIfDisposed(),Bl(this,e)},gr().prototype.mul=function(e){return this.throwIfDisposed(),Ri(this,e)},gr().prototype.neg=function(){return this.throwIfDisposed(),Ua(this)},gr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ol(this,e,t,n)},gr().prototype.notEqual=function(e){return this.throwIfDisposed(),Ul(this,e)},gr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Va(this,e,t,n)},gr().prototype.onesLike=function(){return this.throwIfDisposed(),_l(this)},gr().prototype.pad=function(e,t){return this.throwIfDisposed(),Yl(this,e,t)},gr().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ql(this,e,t,n,s,r,a)},gr().prototype.pow=function(e){return this.throwIfDisposed(),tl(this,e)},gr().prototype.prelu=function(e){return this.throwIfDisposed(),jl(this,e)},gr().prototype.prod=function(e,t){return this.throwIfDisposed(),ql(this,e,t)},gr().prototype.reciprocal=function(){return this.throwIfDisposed(),wu(this)},gr().prototype.relu=function(){return this.throwIfDisposed(),ku(this)},gr().prototype.relu6=function(){return this.throwIfDisposed(),Iu(this)},gr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),to(this,e.shape)},gr().prototype.reshape=function(e){return this.throwIfDisposed(),to(this,e)},gr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),zc(this,e,t,n)},gr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Fc(this,e,t,n)},gr().prototype.reverse=function(e){return this.throwIfDisposed(),Su(this,e)},gr().prototype.rfft=function(){return this.throwIfDisposed(),Du(this)},gr().prototype.round=function(){return this.throwIfDisposed(),Cu(this)},gr().prototype.rsqrt=function(){return this.throwIfDisposed(),Tu(this)},gr().prototype.selu=function(){return this.throwIfDisposed(),Nu(this)},gr().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ru(this,e,t,n,s,r,a)},gr().prototype.sigmoid=function(){return this.throwIfDisposed(),ao(this)},gr().prototype.sign=function(){return this.throwIfDisposed(),Gu(this)},gr().prototype.sin=function(){return this.throwIfDisposed(),Lu(this)},gr().prototype.sinh=function(){return this.throwIfDisposed(),Wu(this)},gr().prototype.slice=function(e,t){return this.throwIfDisposed(),io(this,e,t)},gr().prototype.softmax=function(e){return this.throwIfDisposed(),Fu(this,e)},gr().prototype.softplus=function(){return this.throwIfDisposed(),Rl(this)},gr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Jl(this,e,t)},gr().prototype.split=function(e,t){return this.throwIfDisposed(),Ku(this,e,t)},gr().prototype.sqrt=function(){return this.throwIfDisposed(),sl(this)},gr().prototype.square=function(){return this.throwIfDisposed(),rl(this)},gr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ou(this,e)},gr().prototype.squeeze=function(e){return this.throwIfDisposed(),Au(this,e)},gr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof mr?[this,e]:[this,...e];return Pu(n,t)},gr().prototype.step=function(e){return this.throwIfDisposed(),Bu(this,e)},gr().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Hu(this,e,t,n,s,r,a,i,o)},gr().prototype.sub=function(e){return this.throwIfDisposed(),Ll(this,e)},gr().prototype.sum=function(e,t){return this.throwIfDisposed(),al(this,e,t)},gr().prototype.tan=function(){return this.throwIfDisposed(),Uu(this)},gr().prototype.tanh=function(){return this.throwIfDisposed(),oo(this)},gr().prototype.tile=function(e){return this.throwIfDisposed(),dl(this,e)},gr().prototype.toBool=function(){return this.throwIfDisposed(),Ga(this,"bool")},gr().prototype.toFloat=function(){return this.throwIfDisposed(),Ga(this,"float32")},gr().prototype.toInt=function(){return this.throwIfDisposed(),Ga(this,"int32")},gr().prototype.topk=function(e,t){return this.throwIfDisposed(),Ju(this,e,t)},gr().prototype.transpose=function(e){return this.throwIfDisposed(),Ya(this,e)},gr().prototype.unique=function(e){return this.throwIfDisposed(),ju(this,e)},gr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),qu(this,e,t)},gr().prototype.unstack=function(e){return this.throwIfDisposed(),ec(this,e)},gr().prototype.where=function(e,t){return this.throwIfDisposed(),Zo(e,this,t)},gr().prototype.zerosLike=function(){return this.throwIfDisposed(),Ko(this)};class gf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gf.prototype)}}class bf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bf.prototype)}}class yf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yf.prototype)}}class xf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xf.prototype)}}class vf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vf.prototype)}}class wf{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function kf(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function If(e,t){if(!e)throw new vf(t)}function Sf(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Cf(e){return 1===e.length?e[0]:e}function Tf(e){return Array.isArray(e)?e:[e]}function Nf(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Rf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Gf={};function Lf(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Wf(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Wf(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Wf(t):e[n]=t.value)}}}function Ef(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Gf)a=Gf[r];else if(a=t[r],null==a)throw new yf(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new yf(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Gf?[o,l]=Gf.className:i in t&&([o,l]=t[i]),null==o)throw new yf(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Gf))e[t]=Gf[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Gf);for(const e of Object.keys(n))Gf[e]=n[e];Wf(a.config);const s=l(o,a.config,n,r);return Gf=Object.assign({},t),s}{const e=Object.assign({},Gf);for(const e of Object.keys(n))Gf[e]=n[e];const t=new o(a.config);return Gf=Object.assign({},e),t}}}function Mf(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function $f(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function zf(e){if(null==e)throw new yf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ff(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new yf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Xf(e,t,n=0,s=1/0){return If(n>=0),If(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Vf(e,t){Array.isArray(e)?(o(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Vf(e,`element ${n+1} of ${t}`)))):o(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Zf(e)}.`))}function Zf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Zf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Kf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Df=0;function Of(){return Df++}const Af={};function Pf(e=""){return e in Af||(Af[e]=0),Af[e]+=1,e+Af[e].toString()}const Bf=["channelsFirst","channelsLast"],Hf=["nearest","bilinear"],Uf=["valid","same","causal"],_f=["max","avg"],Yf=["sum","mul","concat","ave"],Jf=new Map;function Qf(e){Ff(Bf,"DataFormat",e)}function jf(e){Ff(Uf,"PaddingMode",e)}function qf(e){Ff(_f,"PoolMode",e)}const em=[],tm="/";function nm(e,t){em.push(e);try{const e=t();return em.pop(),e}catch(e){throw em.pop(),e}}function sm(e){if(!im(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===em.length?"":em.join(tm)+tm)+e}function rm(e){if(!im(e))throw new Error("Not a valid tensor name: '"+e+"'");Jf.has(e)||Jf.set(e,0);const t=Jf.get(e);if(Jf.set(e,Jf.get(e)+1),t>0){const n=`${e}_${t}`;return Jf.set(n,1),n}return e}const am=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function im(e){return!!e.match(am)}function om(e){return e===parseInt(e.toString(),10)}function lm(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function um(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function cm(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function hm(e,t){if(t<e)throw new yf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let dm;function pm(){return null==dm&&(dm=Ba().epsilon()),dm}function fm(e,t){return Ga(e,t)}function mm(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),to(e,n)}function gm(e,t,n){return Da((()=>{switch(e.rank){case 1:return Eu(e,t,n);case 2:return Mu(e,[t,0],[n,e.shape[1]]);case 3:return $u(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return zu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return io(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return io(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new yf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function bm(e,t,n){return Da((()=>{switch(e.rank){case 1:return Eu(e,t,n);case 2:return Mu(e,[0,t],[e.shape[0],n]);case 3:return $u(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return zu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new yf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ym(e,t,n,s){return Da((()=>{switch(e.rank){case 1:return Eu(e,t,n);case 2:switch(s){case 1:return gm(e,t,n);case 2:return bm(e,t,n);default:throw new yf(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return gm(e,t,n);case 2:return $u(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return bm(e,t,n);default:throw new yf(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return gm(e,t,n);case 2:return zu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return zu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return bm(e,t,n);default:throw new yf(`The axis is not within the rank of the tensor ${s}`)}default:throw new yf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function xm(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ro(e,t)}function vm(e,t){switch(e.rank){case 1:return vo([e,t]);case 2:return wo([e,t],0);case 3:return ko([e,t],0);case 4:return Io([e,t],0);default:throw new yf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function wm(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new yf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return dl(e,t)}function km(e,t=0,n=1,s,r){return yu(e,t,n,s,r)}function Im(e,t,n,s){if(e.rank<2||t.rank<2)throw new xf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new xf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return dc({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Tm(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=to(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=to(Ya(t,c),[l,-1]);const h=[...r,...u];return to(dc({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Tm(e.rank,s,"channelsLast"):null,activation:n}),h)}}function Sm(e,t,n){return Da((()=>(t=Array.isArray(t)?_u(t,"int32"):Ga(t,"int32"),ml(e,t,n))))}function Cm(e){return Ri(e,e)}function Tm(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new yf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?to(t,[1,s[0],1,1,1]):to(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?to(t,[1,1,1,1,s[0]]):to(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?to(t,[1,s[0],1,1]):to(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?to(t,[1,1,1,s[0]]):to(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?to(t,[1,s[0],1]):to(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?to(t,[1,1,s[0]]):to(t,[1].concat(s))}else if(e<3)return t;throw new yf(`Unsupported input rank by biasAdd: ${t.rank}`)}function Nm(e,t,n){return Da((()=>(null==n&&(n="channelsLast"),Qf(n),Ci(e,Tm(e.rank,t,n)))))}function Rm(e,t,n,s){return Da((()=>nc(e,t,n,s)))}function Gm(e,t,n=!1){return n?e():t()}const Lm=["fanIn","fanOut","fanAvg"],Wm=["normal","uniform","truncatedNormal"];class Em extends ki{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Mm extends Em{apply(e,t){return Dl(e,t)}}Mm.className="Zeros",Si(Mm);class $m extends Em{apply(e,t){return Ol(e,t)}}$m.className="Ones",Si($m);class zm extends Em{constructor(e){if(super(),"object"!=typeof e)throw new yf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new yf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Da((()=>Ri(nl(this.value),Ol(e,t))))}getConfig(){return{value:this.value}}}zm.className="Constant",Si(zm);class Fm extends Em{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return xu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Fm.className="RandomUniform",Si(Fm);class Xm extends Em{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xf(`randomNormal does not support dType ${t}.`);return km(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Xm.className="RandomNormal",Si(Xm);class Vm extends Em{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xf(`truncatedNormal does not support dType ${t}.`);return Qu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Vm.className="TruncatedNormal",Si(Vm);class Zm extends Em{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Da((()=>{if(2!==e.length||e[0]!==e[1])throw new yf("Identity matrix initializer can only be used for 2D square matrices.");return Ri(this.gain,pl(e[0]))}))}getConfig(){return{gain:this.gain}}}Zm.className="Identity",Si(Zm);class Km extends Em{constructor(e){if(super(),e.scale<0)throw new yf(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){Ff(Lm,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Ff(Wm,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Qf(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=lm(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=lm(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=lm(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xf(`${this.getClassName()} does not support dType ${t}.`);return Qu(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return xu(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Km.className="VarianceScaling",Si(Km);class Dm extends Km{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Km.className}}Dm.className="GlorotUniform",Si(Dm);class Om extends Km{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Km.className}}Om.className="GlorotNormal",Si(Om);class Am extends Km{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Km.className}}Am.className="HeNormal",Si(Am);class Pm extends Km{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Km.className}}Pm.className="HeUniform",Si(Pm);class Bm extends Km{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Km.className}}Bm.className="LeCunNormal",Si(Bm);class Hm extends Km{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Km.className}}Hm.className="LeCunNormal",Si(Hm);class Um extends Em{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new xf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Da((()=>{if(e.length<2)throw new xf("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=km(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Hc.gramSchmidt(t);return e[0]>e[1]&&(n=Ya(n)),Ri(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Um.className="Orthogonal",Si(Um);const _m={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ym(e,t={}){return Ef(e,Ii.getMap().classNameMap,t,"initializer")}function Jm(e){return Lf(e)}function Qm(e){if("string"==typeof e){const t=e in _m?_m[e]:e;if("GlorotNormal"===t)return new Om;if("GlorotUniform"===t)return new Dm;if("HeNormal"===t)return new Am;if("HeUniform"===t)return new Pm;if("LeCunNormal"===t)return new Bm;if("LeCunUniform"===t)return new Hm;{const e={};return e.className=t,e.config={},Ym(e)}}return e instanceof Em?e:Ym(e)}function jm(e){return Array.isArray(e)&&Array.isArray(e[0])}function qm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function eg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new yf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function tg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new yf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ng(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const sg="Variable";class rg{constructor(e,t="float32",n=sg,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Of(),n=null==n?sg:n,this.originalName=sm(n),this.name=rm(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e,t=!0,n,s){return $r.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ag(e){return e.map((e=>e.read()))}function ig(e){e.forEach((e=>{e[0].write(e[1])}))}class og{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class lg{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Of(),null!=a&&(this.originalName=sm(a),this.name=rm(this.originalName)),this.rank=t.length}}let ug=0;class cg{constructor(e,t){this.callArgs=t,this.id=ug++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let hg=0;class dg extends ki{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=hg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Nf(e)+"_"+Pf(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new bf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new yf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Cf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Cf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new gf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new gf(`Layer ${this.name} is not connected, no input to return.`);return Cf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new gf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new gf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Cf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Tf(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Tf(this.inputSpec);if(e.length!==t.length)throw new yf(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new yf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new yf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new yf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new yf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new yf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new yf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Tf(e);let s=!0;for(const e of n)if(!(e instanceof lg)){s=!1;break}let r=!0;for(const e of n)if(e instanceof lg){r=!1;break}if(s===r)throw new yf("Arguments to apply() must be all SymbolicTensors or all Tensors");return nm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Tf(e))t.push(n.shape);this.build(Cf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Tf(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Cf(a),null!=this.activityRegularizer)throw new xf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=Tf(e);const t=[];for(const n of e)t.push(n.shape);return Cf(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new lg(a,n,this,Tf(e),t,this.name,s))):new lg(a,s,this,Tf(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new xf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new gf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new gf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new bf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ng(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ag(e?this.trainableWeights:this.weights)}setWeights(e){Da((()=>{const t=this.weights;if(t.length!==e.length)throw new yf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=ag(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!d(a.shape,o.shape))throw new yf(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ig(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new yf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Qm("zeros"));const l=s.apply(t,n),u=new rg(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Tf(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=Tf(e);t=Tf(t),n=Tf(n),s=Tf(s),r=qm(r),a=qm(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new cg({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function pg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=pg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class fg extends dg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Pf("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new yf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new yf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new yf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new lg(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new cg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new yf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}fg.className="InputLayer",Si(fg);class mg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof mg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new yf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ga(t,e.dtype)}catch{throw new yf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof lg){if(null==this.id2Value[e.id])throw new yf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new yf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof lg){if(null==this.id2Value[e.id])throw new yf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new yf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Oa(this.id2Mask)}}const gg=new wf,bg=new wf;function yg(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],l=i.map((e=>e.name)),u=[],c=t.names();for(const e of l)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().sort().join(",");let d,p=gg.get(h);if(null==p){const e=function(e,t){o(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=vg(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=vg(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:xg(s)}}(i,t);p=e.sorted,d=e.recipientCounts,gg.put(h,p),bg.put(h,d)}d={},r||Object.assign(d,bg.get(h));const f=new mg(t);for(let e=0;e<p.length;++e){if(null!=s){const e=Ka().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof fg)continue;const o=[],c=[],h=[];let m=!1;for(const e of a.inputs){const n=f.getValue(e),s=f.getMask(e);o.push(n),c.push(s),null!=s&&(m=!0),r||(d[e.name]--,0===d[e.name]&&!t.hasKey(e)&&-1===l.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&h.push(n))}m&&((n=n||{}).mask=c[0]);const g=Tf(i.apply(o,n));let b=null;i.supportsMasking&&(b=i.computeMask(o,c));const y=wg(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],g[e],Array.isArray(b)?b[0]:b);const t=l.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}r||Oa(h)}return f.disposeMasks(),a?u:u[0]}function xg(e){const t={};for(const n in e)t[n]=e[n].size;return t}function vg(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),!n.has(t.name)&&a.push(t)}}return{sorted:s,recipientMap:r}}function wg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function kg(e,t){return Da((()=>sl(al(Ri(e,e),t,!0))))}A().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=gg&&gg.setMaxEntries(e),null!=bg&&bg.setMaxEntries(e)}));class Ig extends ki{getConfig(){return{}}}class Sg extends Ig{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Da((()=>{const t=kg(e,this.axis),n=xo(t,0,this.maxValue);return Ri(e,Ni(n,Ci(pm(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Sg.className="MaxNorm",Si(Sg);class Cg extends Ig{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Da((()=>Ni(e,Ci(pm(),kg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Cg.className="UnitNorm",Si(Cg);class Tg extends Ig{apply(e){return ku(e)}}Tg.className="NonNeg",Si(Tg);class Ng extends Ig{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Da((()=>{const t=kg(e,this.axis),n=Ci(Ri(this.rate,xo(t,this.minValue,this.maxValue)),Ri(1-this.rate,t));return Ri(e,Ni(n,Ci(pm(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ng.className="MinMaxNorm",Si(Ng);const Rg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gg(e){return Lf(e)}function Lg(e,t={}){return Ef(e,Ii.getMap().classNameMap,t,"constraint")}function Wg(e){if(null==e)return null;if("string"==typeof e){return Lg({className:e in Rg?Rg[e]:e,config:{}})}return e instanceof Ig?e:Lg(e)}async function Eg(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Oa(s)}}function Mg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var $g;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}($g||($g={}));class zg{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Fg{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Xg extends zg{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=Da((()=>Ci(this.totals[e],Ri(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Da((()=>{const n=Ri(Ni(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Aa(t[e])})))}}class Vg extends zg{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Zg extends zg{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||rh,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");T(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():js();return(...a)=>{const i=null!=n?n():js();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Eg(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Eg(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Eg(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Eg(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Eg(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):T(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Eg(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Eg(e),await this.trainEnd(e))}}function Kg(e,t){return null==e&&(e={}),e instanceof zg?[e]:Array.isArray(e)&&e[0]instanceof zg?e:Tf(e).map((e=>new Zg(e,t)))}class Dg{constructor(){}static registerCallbackConstructor(e,t){o(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Dg.checkForDuplicate(t),null==Dg.constructors[e]&&(Dg.constructors[e]=[]),Dg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Dg.constructors)Dg.constructors[+t].forEach((t=>{if(t===e)throw new yf("Duplicate callback constructor.")}))}static clear(){Dg.constructors={}}static createCallbacks(e){const t=[];for(const n in Dg.constructors){const s=+n;e>=s&&t.push(...Dg.constructors[s])}return t.map((e=>new e))}}function Og(e,t,n,s,r,a,i,o,l){const u=new Vg,c=[new Xg,...Dg.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Fg(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Ag(e,t={},n=!1){return Ef(e,Ii.getMap().classNameMap,t,"layer",n)}function Pg(e,t){return Da((()=>{"float32"!==e.dtype&&(e=Ga(e,"float32"));const n=al(Cm(e),t,!0),s=yo(n.shape,pm()),r=sl(Zl(n,s));return Ni(e,r)}))}function Bg(e,t){return Da((()=>Kl(Cm(Ll(t,e)),-1)))}function Hg(e,t){return Da((()=>Kl(Gi(Ll(t,e)),-1)))}function Ug(e,t){return Da((()=>{const n=Ll(e,t),s=xo(Gi(e),pm(),Number.MAX_VALUE),r=Gi(Ni(n,s));return Ri(100,Kl(r,-1))}))}function _g(e,t,n=!1){return Da((()=>{if(n)t=Fu(t);else{const e=al(t,t.shape.length-1,!0);t=Ni(t,e)}return t=xo(t,pm(),1-pm()),Ua(al(Ri(Ga(e,"float32"),Cl(t)),t.shape.length-1))}))}function Yg(e,t,n=!1){return Da((()=>{const s=Ga(fl(function(e){const t=[lm(e.shape)];return to(e,t)}(e)),"int32"),r=(t=xo(t,pm(),1-pm())).shape;return _g(to(Va(s,r[r.length-1]),r),t,n)}))}function Jg(e,t){return Da((()=>{let n;return n=xo(t,pm(),1-pm()),n=Cl(Ni(n,Ll(1,n))),Kl(function(e,t){if(!d(e.shape,t.shape))throw new yf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Da((()=>{const n=ku(t),s=Ua(Gi(t));return Ci(Ll(n,Ri(t,e)),Tl(ul(s)))}))}(e,n),-1)}))}function Qg(e,t){return Da((()=>{const n=Pg(e,-1),s=Pg(t,-1),r=Ri(n,s);return Ua(al(r,-1))}))}Dg.constructors={};const jg={meanSquaredError:Bg,meanAbsoluteError:Hg,meanAbsolutePercentageError:Ug,meanSquaredLogarithmicError:function(e,t){return Da((()=>{const n=xo(t,pm(),Number.MAX_VALUE),s=Cl(Ci(1,n)),r=xo(e,pm(),Number.MAX_VALUE),a=Cl(Ci(1,r));return Kl(Cm(Ll(s,a)),-1)}))},squaredHinge:function(e,t){return Da((()=>{const n=Zl(0,Ll(1,Ri(e,t)));return Kl(Cm(n),-1)}))},hinge:function(e,t){return Da((()=>{const n=Zl(0,Ll(1,Ri(e,t)));return Kl(n,-1)}))},categoricalHinge:function(e,t){return Da((()=>{const n=al(Ri(e,t),-1),s=qo(Ri(Ll(1,e),t),-1);return Zl(0,Ci(1,Ll(s,n)))}))},logcosh:function(e,t){return Da((()=>{const n=Math.log(2),s=Ll(t,e),r=Ll(Ci(s,Rl(Ri(-2,s))),n);return Kl(r,-1)}))},categoricalCrossentropy:_g,sparseCategoricalCrossentropy:Yg,binaryCrossentropy:Jg,kullbackLeiblerDivergence:function(e,t){return Da((()=>{const n=xo(e,pm(),1),s=xo(t,pm(),1);return al(Ri(e,Cl(Ni(n,s))),-1)}))},poisson:function(e,t){return Da((()=>{const n=Cl(Ci(pm(),t));return Kl(Ll(t,Ri(e,n)),-1)}))},cosineProximity:Qg};function qg(e){if("string"==typeof e){if(e in jg)return jg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new yf(t)}return e}function eb(e,t){return Da((()=>{const n=Ri(.5,_l(t)),s=fm(gl(t,n),e.dtype);return Kl(Vo(e,s),-1)}))}function tb(e,t){return Da((()=>fm(Vo($i(e,-1),$i(t,-1)),"float32")))}function nb(e,t){return Jg(e,t)}function sb(e,t){return e.rank===t.rank&&(e=Au(e,[e.rank-1])),(t=$i(t,-1)).dtype!==e.dtype&&(t=Ga(t,e.dtype)),Ga(Vo(e,t),"float32")}const rb=_g,ab=Yg,ib={binaryAccuracy:eb,categoricalAccuracy:tb,precision:function(e,t){return Da((()=>{const n=function(e,t){return Da((()=>Ga(al(Ml(Vo(e,1),Vo(t,1))),"float32")))}(e,t),s=function(e,t){return Da((()=>Ga(al(Ml(Vo(e,0),Vo(t,1))),"float32")))}(e,t),r=Ci(n,s);return Ga(Zo(gl(r,0),Ni(n,r),0),"float32")}))},categoricalCrossentropy:rb,sparseCategoricalCrossentropy:ab,mse:Bg,MSE:Bg,mae:Hg,MAE:Hg,mape:Ug,MAPE:Ug,cosine:Qg};function ob(e){if("string"==typeof e&&e in ib)return ib[e];if("string"!=typeof e&&null!=e)return e;throw new yf(`Unknown metric ${e}`)}function lb(e){if(If(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(jg))if(jg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(ib))if(ib[n]===e){t=n;break}return void 0!==t?t:e.name}}const ub=1048576;function cb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!hb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>ub&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${ub}.`)}}function hb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t)if("string"!=typeof n||!hb(e[n]))return!1;return!0}if(Array.isArray(e)){for(const t of e)if(!hb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function db(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),pb(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?fb(o[e],n,s):mb(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?ng(e.collectedTrainableWeights):ng(e.trainableWeights),t}(e),u=ng(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function pb(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function fb(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch{r="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}pb([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function mb(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];pb([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let e=1;e<i.length;++e)pb(["","","","",i[e]],t,s)}function gb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function bb(e,t){if(null===e)return null;if("string"==typeof e)return Rf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];gb(t,r,s)?n.push(s):n.push(bb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Rf(n);t[e]=bb(s,e)}}return t}}function yb(e,t){if(null==e)return null;if("string"==typeof e)return Nf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];gb(t,r,s)?n.push(s):n.push(yb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],r=Nf(n);t[r]="name"!==n&&"className"!==n||"string"!=typeof s?yb(s,n):s}return t}}const xb="3.21.0";class vb extends dg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Pf(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],$f(this.inputs).length!==this.inputs.length)throw new yf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);$f(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;If(0===n,"input layer has >1 nodes"),If(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof fg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{(null==s||null==r||null==l)&&(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new bf(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(vb.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Mf);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof vb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Mf);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new bf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new bf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new cg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new yf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new yf(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new yf(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new yf(`${e.length} of ${s} weights are not set: ${e}`)}ig(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${xb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=yb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Da((()=>{e=Tf(e);const n=new mg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return yg(this.outputs,n,t)}))}computeMask(e,t){return Da((()=>{let n;return e=Tf(e),n=null==t?kf(null,e.length):Tf(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=qm(e);if(t.length!==this.inputLayers.length)throw new yf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Mf);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=qm(t.computeOutputShape(Cf(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++){n[`${t.name}_${a}_${e}`]=r[e]}}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];If(t in n),r.push(n[t])}return Cf(r)}runInternalGraph(e,t){null==t&&(t=kf(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Mf);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Tf(t.call(e,u)),l=Tf(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Tf(t.call(s,u)),l=Tf(t.computeMask(s,i));if(t.activityRegularizer)throw new xf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){If(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof vb?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=vb.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new yf(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new yf("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new yf(`No such layer: ${e}`)}calculateLosses(){return Da((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=vb.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=vb.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch{console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[vb.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=vb.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=vb.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Cf(n),s)}function l(e){const n=e.name,a=Ag(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new yf(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!zf(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];If(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];If(t in r);const a=r[t].inboundNodes[n].outputTensors;d.push(a[s])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new yf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Da((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function wb(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function kb(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Da((()=>{if(1===e.shape.length)return La(e);if(2===e.shape.length){if(e.shape[1]>1)return $i(e,1);if(1===e.shape[1])return to(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());Oa(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),_u(r,"float32")}return null}function Ib(e,t){return Ri(e,t)}function Sb(e,t){let n,s;const r=t;n=r.xs,s=r.ys,o(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Cb("input",e.inputNames,n),i=Cb("output",e.outputNames,s),l=a[0].shape[0];o(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),o(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)o(a[t].shape[0]===l,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)o(i[t].shape[0]===l,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Cb(e,t,n){if(n instanceof mr)return[n];if(Array.isArray(n))return o(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new yf(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}async function Tb(e,t,n){const s=null!=n.batchesPerEpoch;if(o(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),o(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),o(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),o(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),o(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Nb(n.validationData))o(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new xf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const h=Kg(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Og(h,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const o={};await p.onEpochBegin(m);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:s,ys:r}=Sb(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=wb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await kb(r[e],null,t[e]))}const o=s.concat(r).concat(i),d=l(o);Oa(o);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,Aa(n)}await p.onBatchEnd(h,a),Mg(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Nb(n.validationData)?Tf(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Tf(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,o),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Nb(e){return"function"==typeof e.iterator}function Rb(e){o(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Gb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>gm(e,t,n-t))):gm(e,t,n-t)}function Lb(e,t){return Da((()=>null==e?null:Array.isArray(e)?e.map((e=>Lb(e,t))):Sm(e,"int32"===t.dtype?t:Ga(t,"int32"))))}function Wb(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function Eb(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,l,u,c,h,d,p;e.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;Rb(f);const m=!1,g=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,m,f);a=g[0],i=g[1],p=g[2];let b,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new xf("validationData including sample weights is not supported yet."):new yf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],c=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,c,null,null,t,f);h=n[0],d=n[1],b=h.concat(d)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];h=Gb(a,e,t),o=a,a=Gb(a,0,e),d=Gb(i,e,t),l=i,i=Gb(i,0,e),b=h.concat(d)}else null!=r.validationSteps&&(y=!0);const x=a.concat(i).concat(p);e.checkTrainableWeightsConsistency();const v=e.makeTrainFunction(),w=e.getDedupedMetricsNames();let k,I;y?(e.makeTestFunction(),k=e.testFunction,I=w.slice().concat(w.map((e=>"val_"+e)))):(k=null,b=[],I=w.slice());const S=Kg(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,i,o,l,u,c,h,d,p,f,m){null==a&&(a=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;if(null!=u&&null!=c&&(g=!0),null!=m&&(g=!0,null==f))throw new yf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=e.checkNumSamples(n,a,f,"steps_per_epoch");let y;null!=b&&(y=hm(0,b)),null==o&&(o=1);const{callbackList:x,history:v}=Og(l,o,i,p,b,f,a,g,d);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let o=p;o<i;++o){await x.onEpochBegin(o);const i={};if(null!=f)throw new xf("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new xf("batch shuffling is not implemneted yet");h&&s(y);const o=_u(y),l=Wb(b,a);for(let s=0;s<l.length;++s){const h={};if(await x.onBatchBegin(s,h),Da((()=>{const d=l[s][0],p=l[s][1],f=gm(o,d,p-d);h.batch=s,h.size=p-d;const m=Lb(n,f),b=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,Aa(n)}if(s===l.length-1&&g){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Aa(s),i["val_"+n]=s}}})),await x.onBatchEnd(s,h),Mg(h),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,v,x,w,f,r.epochs,r.verbose,S,k,b,r.shuffle,I,r.initialEpoch,null,null)}finally{e.isTraining=!1,$b(a,t),$b(i,n),$b(o,t),$b(l,n),$b(h,u),$b(d,c),null!=p&&Oa(p)}}function Mb(e){const t=[];e instanceof mr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(mm(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function $b(e,t){if(null==e)return;const n=[];if(t instanceof mr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof mr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function zb(e){return Array.isArray(e)}function Fb(e){return!function(e){return e instanceof mr}(e)&&!zb(e)}function Xb(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(zb(e)&&e.length>0)t=!0;else if(Fb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new yf(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Fb(e)){a=[];for(const n of t){if(null==e[n])throw new yf(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(zb(e)){if(e.length!==t.length)throw new yf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new yf(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Mb(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new yf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new yf(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Vb(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new yf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new yf(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new yf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new yf(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Zb extends vb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new yf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");db(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>nh.adagrad(.01),Adadelta:()=>nh.adadelta(1,.95,pm()),Adam:()=>nh.adam(.001,.9,.999,pm()),Adamax:()=>nh.adamax(.002,.9,.999,pm(),0),RMSProp:()=>nh.rmsprop(.001,.9,0,pm()),SGD:()=>nh.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new yf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Uc))throw new yf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new yf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>qg(e)))}else{const n=qg(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new yf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(qg(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nm("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};nm("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Jg?-1!==["accuracy","acc"].indexOf(i)?s=eb:-1!==["crossentropy","ce"].indexOf(i)&&(s=nb):this.lossFunctions[e]===Yg?-1!==["accuracy","acc"].indexOf(i)?s=sb:-1!==["crossentropy","ce"].indexOf(i)&&(s=ab):-1!==["accuracy","acc"].indexOf(i)?s=tb:-1!==["crossentropy","ce"].indexOf(i)&&(s=rb),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else a=ob(i),n=""+lb(i);let t;nm(n,(()=>{t=a})),r(e,n,t)}})(s[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Rb(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return Cf(this.testLoop(t,e,s,n.verbose,n.steps))}finally{$b(r[0],e),$b(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new xf("Verbose mode is not implemented yet.");o(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator();let l=0,u=0;for(;!s||u<n.batches;){const t=await i.next();if(a=Da((()=>{if(t.value){const{xs:n,ys:s}=Sb(e,t.value),i=n.concat(s),o=Da((()=>r(i)));if(Oa(i),0===u)for(let e=0;e<o.length;++e)a.push(nl(0));const c=i[0].shape[0];for(let e=0;e<o.length;++e){const t=o[e],n=a[e];a[e]=Da((()=>Ci(a[e],Ri(c,t)))),u>0&&Oa(n)}Oa(o),l+=c,++u}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ni(a[e],l),Oa(t)}return Cf(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new yf(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new yf(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new yf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new mg;if(e instanceof mr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new yf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new yf(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=yg(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=kf(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new yf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Da((()=>{const s=this.checkNumSamples(e);if(n)throw new xf("Verbose predictLoop() is not implemented yet.");const r=Wb(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)Da((()=>{const n=r[t][0],s=r[t][1],a=Gb(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new mg(i);return yg(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Cf(a.map((e=>ro(e,0))))}))}predict(e,t={}){const n=Mb(e);Vb(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Rb(e),this.predictLoop(n,e)}finally{$b(n,e)}}predictOnBatch(e){Vb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new bf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Yg?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=$f(e.map((e=>e.shape[0])));s.sort();const r=$f(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new yf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new yf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!d(s,r))throw new yf(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Xb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Xb(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Bg,Jg,_g];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===_g&&1===a.shape[a.shape.length-1])throw new yf(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new yf(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new yf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=wb(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await kb(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return Da((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new xf("Verbose mode is not implemented yet.");if(null!=r)throw new xf("steps mode in testLoop() is not implemented yet");{const s=Wb(a,n),r=_u(hm(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=gm(r,a,o-a),u=Lb(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(nl(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ci(i[e],Ri(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ni(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;if(Sf(e,s)>1){r+=`_${Sf(e.slice(0,n),s)}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new mg(e),o=yg(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Ib(n,r[e]));const a=Kl(n);t.push(a),l=0===e?n:Ci(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Kl(t(s[r],o[r]))}Aa(n),a.push(n)}return l=Kl(l),this.calculateLosses().forEach((e=>{l=Ci(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Da((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new mg(a),o=yg(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=Kl(s(r[e],o[e]));n=0===e?a:Ci(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=Kl(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return Eb(this,e,t,n)}async fitDataset(e,t){return Tb(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Oa(a),$b(n[0],e),$b(n[1],t),Cf(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ka().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ka().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Nf(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Nf(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Nf(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Nf(lb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Nf(lb(e))));{const e={};for(const t in this.metrics)e[t]=Nf(lb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ag(bb(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=Rf(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Rf(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Rf(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>Rf(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=Rf(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(e=>na.getSaveHandlers(e))(e);if(0===t.length)throw new yf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new yf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new yf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await _r(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${xb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await _r(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=jr([n.data,t])}return null!=this.userDefinedMetadata&&(cb(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){cb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zb.className="Model",Si(Zb);class Kb extends Zb{}Kb.className="Functional",Si(Kb);class Db extends Zb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Pf("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new yf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Db||e instanceof Zb;let n;if(t){if(n=e,1!==n.outputs.length)throw new yf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new yf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new yf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new yf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new fg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new yf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new yf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=pg(this.outputs[0])}this.inboundNodes=[],new cg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:kf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(tg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new bf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new bf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new bf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new bf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new yf("Legacy serialization format not supported yet.");r=t}else o(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Db))throw new xf(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=Ag(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new yf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new yf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Db.className="Sequential",Si(Db);class Ob extends ki{getConfig(){return{}}}class Ab extends Ob{apply(e,t=1){return function(e,t=1){if(1!==t)throw new xf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ao(e)}(e,t)}}Ab.className="elu",Si(Ab);class Pb extends Ob{apply(e){return Nu(e)}}Pb.className="selu",Si(Pb);class Bb extends Ob{apply(e){return ku(e)}}Bb.className="relu",Si(Bb);class Hb extends Ob{apply(e){return Da((()=>Al(6,ku(e))))}}Hb.className="relu6",Si(Hb);class Ub extends Ob{apply(e){return e}}Ub.className="linear",Si(Ub);class _b extends Ob{apply(e){return ao(e)}}_b.className="sigmoid",Si(_b);class Yb extends Ob{apply(e){return function(e){return Da((()=>{const t=Ci(.5,Ri(.2,e));return xo(t,0,1)}))}(e)}}Yb.className="hardSigmoid",Si(Yb);class Jb extends Ob{apply(e){return Rl(e)}}Jb.className="softplus",Si(Jb);class Qb extends Ob{apply(e){return function(e){return Da((()=>Ni(e,Ci(Gi(e),1))))}(e)}}Qb.className="softsign",Si(Qb);class jb extends Ob{apply(e){return oo(e)}}jb.className="tanh",Si(jb);class qb extends Ob{apply(e,t=-1){return Fu(e,t)}}qb.className="softmax",Si(qb);class ey extends Ob{apply(e,t=-1){return Wl(e,t)}}ey.className="logSoftmax",Si(ey);class ty extends Ob{apply(e,t=1){return Da((()=>Ri(ao(Ri(e,t)),e)))}}ty.className="swish",Si(ty);class ny extends Ob{apply(e){return Da((()=>Ri(e,oo(Rl(e)))))}}function sy(e){return e.getClassName()}function ry(e,t={}){return Ef(e,Ii.getMap().classNameMap,t,"activation")}function ay(e){if(null==e){const e={className:"linear",config:{}};return ry(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},ry(t)}return e instanceof Ob?e:ry(e)}ny.className="mish",Si(ny);class iy extends ki{}class oy extends iy{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Da((()=>{let t=Dl([1]);return this.hasL1&&(t=Ci(t,al(Ri(this.l1,Gi(e))))),this.hasL2&&(t=Ci(t,al(Ri(this.l2,Cm(e))))),to(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}oy.className="L1L2",Si(oy);const ly={l1l2:"L1L2"};function uy(e){return Lf(e)}function cy(e,t={}){return Ef(e,Ii.getMap().classNameMap,t,"regularizer")}function hy(e){if(null==e)return null;if("string"==typeof e){return cy({className:e in ly?ly[e]:e,config:{}})}return e instanceof iy?e:cy(e)}class dy extends dg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=eg(e);let n=ku(e);return null!=this.maxValue&&(n=xo(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}dy.className="ReLU",Si(dy);class py extends dg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=eg(e);return wl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}py.className="LeakyReLU",Si(py);class fy extends dg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Qm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=hy(e.alphaRegularizer),this.alphaConstraint=Wg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new yf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=tg(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new og({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=eg(e),jl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Jm(this.alphaInitializer),alphaRegularizer:uy(this.alphaRegularizer),alphaConstraint:Gg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}fy.className="PReLU",Si(fy);class my extends dg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new xf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=eg(e);return Ao(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}my.className="ELU",Si(my);class gy extends dg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=eg(e);return Ri(n,Ga(gl(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}gy.className="ThresholdedReLU",Si(gy);class by extends dg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new qb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=eg(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yy(e,t,n){if("number"==typeof e)return kf(e,t);if(e.length!==t)throw new yf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if(!om(r))throw new yf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function xy(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function vy(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+cm([n-t,0]);else{if("same"!==s)throw new yf(`Unsupport padding mode: ${s}.`);e*=t}return e}function wy(e,t){return Da((()=>(Qf(t),"channelsFirst"===t?Ya(e,[0,2,3,1]):e)))}function ky(e,t){return Da((()=>(Qf(t),"channelsFirst"===t?Ya(e,[0,2,3,4,1]):e)))}function Iy(e,t,n,s=[1,1],r="valid",a,i,o=null){return Da((()=>{if(null==a&&(a="channelsLast"),Qf(a),3!==e.rank&&4!==e.rank)throw new yf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new yf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=wy(e,a);if("causal"===r)throw new xf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=uc({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Ya(l,[0,3,1,2])),l}))}by.className="Softmax",Si(by);class Sy extends dg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Sy.verifyArgs(t),this.rank=e,Vf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new xf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=yy(t.kernelSize,e,"kernelSize"),this.strides=yy(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,jf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Qf(this.dataFormat),this.activation=ay(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Qm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Wg(t.biasConstraint),this.biasRegularizer=hy(t.biasRegularizer),this.activityRegularizer=hy(t.activityRegularizer),this.dilationRate=yy(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new yf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new yf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new yf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(If("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Xf(e.kernelSize,"number",1,3))throw new yf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:sy(this.activation),useBias:this.useBias,biasInitializer:Jm(this.biasInitializer),biasRegularizer:uy(this.biasRegularizer),activityRegularizer:uy(this.activityRegularizer),biasConstraint:Gg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cy extends Sy{constructor(e,t){super(e,t),this.kernel=null,Cy.verifyArgs(t),this.filters=t.filters,Vf(this.filters,"filters"),this.kernelInitializer=Qm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Wg(t.kernelConstraint),this.kernelRegularizer=hy(t.kernelRegularizer)}build(e){e=tg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new yf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Da((()=>{let t;e=eg(e);const n=null==this.bias?null:this.bias.read(),s=Kf(this.activation.getClassName());if(null!=s&&2===this.rank)t=Iy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return Da((()=>{if(null==a&&(a="channelsLast"),Qf(a),3!==e.shape.length)throw new yf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new yf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new yf(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Ya(e,[0,2,1])),"causal"===r)throw new xf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Co(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Nm(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Iy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new xf("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return Da((()=>{if(null==a&&(a="channelsLast"),Qf(a),4!==e.rank&&5!==e.rank)throw new yf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new yf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=ky(e,a);if("causal"===r)throw new xf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ro(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Nm(o,n)),"channelsFirst"===a&&(o=Ya(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=tg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=xy(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Jm(this.kernelInitializer),kernelRegularizer:uy(this.kernelRegularizer),kernelConstraint:Gg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new yf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ty extends Cy{constructor(e){super(2,e),Ty.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xf(e.kernelSize,"number",1,2))throw new yf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ty.className="Conv2D",Si(Ty);class Ny extends Cy{constructor(e){super(3,e),Ny.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new yf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ny.className="Conv3D",Si(Ny);class Ry extends Ty{constructor(e){if(super(e),this.inputSpec=[new og({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new yf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=tg(e)).length)throw new yf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new yf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new og({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Da((()=>{let t=eg(e);if(4!==t.shape.length)throw new yf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,vy(i,c,l,this.padding),vy(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ya(t,[0,2,3,1]));let p=No(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Ya(p,[0,3,1,2])),null!=this.bias&&(p=Nm(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=tg(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=vy(t[s],o,a,this.padding),t[r]=vy(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ry.className="Conv2DTranspose",Si(Ry);class Gy extends Ny{constructor(e){if(super(e),this.inputSpec=[new og({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new yf(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=tg(e)).length)throw new yf("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new yf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new og({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Da((()=>{let t=eg(e);if(5!==t.shape.length)throw new yf(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,vy(o,p,c,this.padding),vy(l,f,h,this.padding),vy(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ya(t,[0,2,3,4,1]));let b=Lo(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Ya(b,[0,4,1,2,3])),null!==this.bias&&(b=Nm(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=tg(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=vy(t[s],u,i,this.padding),t[r]=vy(t[r],c,o,this.padding),t[a]=vy(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Gy.className="Conv3DTranspose",Si(Gy);class Ly extends Cy{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new yf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new yf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new yf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Qm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=hy(t.depthwiseRegularizer),this.depthwiseConstraint=Wg(t.depthwiseConstraint),this.pointwiseInitializer=Qm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=hy(t.pointwiseRegularizer),this.pointwiseConstraint=Wg(t.pointwiseConstraint)}build(e){if((e=tg(e)).length<this.rank+2)throw new yf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new yf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new og({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Da((()=>{let t;if(e=eg(e),1===this.rank)throw new xf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ya(e,[0,2,3,1])),t=Ru(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Nm(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ya(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Jm(this.depthwiseInitializer),e.pointwiseInitializer=Jm(this.pointwiseInitializer),e.depthwiseRegularizer=uy(this.depthwiseRegularizer),e.pointwiseRegularizer=uy(this.pointwiseRegularizer),e.depthwiseConstraint=Gg(this.depthwiseConstraint),e.pointwiseConstraint=Gg(this.pointwiseConstraint),e}}Ly.className="SeparableConv";class Wy extends Ly{constructor(e){super(2,e)}}Wy.className="SeparableConv2D",Si(Wy);class Ey extends Cy{constructor(e){super(1,e),Ey.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xf(e.kernelSize,"number",1,1))throw new yf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ey.className="Conv1D",Si(Ey);class My extends dg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Da((()=>{if(e=eg(e),"channelsLast"===this.dataFormat){const t=ym(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ym(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ym(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ym(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}My.className="Cropping2D",Si(My);class $y extends dg{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){Ff(Hf,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Da((()=>{let t=eg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ya(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?Bc.resizeNearestNeighbor(t,[e,s]):Bc.resizeBilinear(t,[e,s]);return Ya(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Bc.resizeNearestNeighbor(t,[e,s]):Bc.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}$y.className="UpSampling2D",Si($y);class zy extends Sy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Qm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Wg(e.depthwiseConstraint),this.depthwiseRegularizer=hy(e.depthwiseRegularizer)}build(e){if((e=tg(e)).length<4)throw new yf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new yf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Da((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return Da((()=>{null==r&&(r="channelsLast"),Qf(r);let i=wy(e,r);if(4!==e.rank)throw new yf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new yf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Fo(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=Ya(i,[0,3,1,2])),i}))}(e=eg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Nm(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=tg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=xy(t,this.kernelSize[0],this.padding,this.strides[0]),a=xy(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Jm(this.depthwiseInitializer),e.depthwiseRegularizer=uy(this.depthwiseRegularizer),e.depthwiseConstraint=Gg(this.depthwiseRegularizer),e}}function Fy(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new yf("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Xy(e,t,n,s=!1,r,a,i=!1,o=!1){return Da((()=>{const l=t.shape.length;if(l<3)throw new yf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(hm(2,l));if(t=Ya(t,u),null!=a)throw new xf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=Ga(Ga(r,"bool"),"float32")).rank===l-1&&(r=cl(r,-1)),r=Ya(r,u)),s&&(t=Su(t,0),null!=r&&(r=Su(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=ec(t);let m,g;null!=r&&(m=ec(r));for(let t=0;t<p;++t){const n=f[t],s=Da((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=Da((()=>{const e=m[t],n=Ll(_l(e),e);return{output:Ci(Ri(s[0],e),Ri(d[0],n)),newStates:d.map(((t,r)=>Ci(Ri(s[1][r],e),Ri(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Pu(c,1)),[h,g,d]}))}zy.className="DepthwiseConv2D",Si(zy);class Vy extends dg{constructor(e){let t;if(super(e),null==e.cell)throw new yf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Hy({cells:e.cell}):e.cell,null==t.stateSize)throw new yf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new og({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return hm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){jm(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Da((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new xf("Constants support is not implemented in RNN yet.");jm(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new og({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!d(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new yf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new og({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Da((()=>{if(!this.stateful)throw new gf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new yf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Dl([n,e]))):this.states_=[Dl([n,this.cell.stateSize])];else if(null==e)Oa(this.states_),null!=this.keptStates&&(Oa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Dl([n,e]))):this.states_[0]=Dl([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new yf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Oa(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!d(s.shape,a))throw new yf(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>Aa(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Fy(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new og({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof lg){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Da((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=eg(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new yf(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Xy(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Da((()=>{let t=Dl(e.shape);return t=al(t,[1,2]),t=mm(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?wm(t,[1,e]):t)):this.cell.stateSize>1?[wm(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Vy.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=Ag(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Vy.className="RNN",Si(Vy);class Zy extends dg{}class Ky extends Zy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vf(this.units,"units"),this.activation=ay(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Qm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hy(e.kernelRegularizer),this.recurrentRegularizer=hy(e.recurrentRegularizer),this.biasRegularizer=hy(e.biasRegularizer),this.kernelConstraint=Wg(e.kernelConstraint),this.recurrentConstraint=Wg(e.recurrentConstraint),this.biasConstraint=Wg(e.biasConstraint),this.dropout=um([1,cm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=um([1,cm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Da((()=>{if(2!==e.length)throw new yf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uy({ones:()=>_l(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uy({ones:()=>_l(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Im(null!=a?Ri(e,a):e,this.kernel.read()),null!=this.bias&&(r=Nm(r,this.bias.read())),null!=i&&(n=Ri(n,i));let o=Ci(r,Im(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:sy(this.activation),useBias:this.useBias,kernelInitializer:Jm(this.kernelInitializer),recurrentInitializer:Jm(this.recurrentInitializer),biasInitializer:Jm(this.biasInitializer),kernelRegularizer:uy(this.kernelRegularizer),recurrentRegularizer:uy(this.recurrentRegularizer),biasRegularizer:uy(this.biasRegularizer),activityRegularizer:uy(this.activityRegularizer),kernelConstraint:Gg(this.kernelConstraint),recurrentConstraint:Gg(this.recurrentConstraint),biasConstraint:Gg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Ky.className="SimpleRNNCell",Si(Ky);class Dy extends Vy{constructor(e){e.cell=new Ky(e),super(e)}call(e,t){return Da((()=>{null!=this.cell.dropoutMask&&(Oa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Dy.className="SimpleRNN",Si(Dy);class Oy extends Zy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new yf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Vf(this.units,"units"),this.activation=ay(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ay(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Qm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hy(e.kernelRegularizer),this.recurrentRegularizer=hy(e.recurrentRegularizer),this.biasRegularizer=hy(e.biasRegularizer),this.kernelConstraint=Wg(e.kernelConstraint),this.recurrentConstraint=Wg(e.recurrentConstraint),this.biasConstraint=Wg(e.biasConstraint),this.dropout=um([1,cm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=um([1,cm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=tg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Da((()=>{if(2!==e.length)throw new yf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uy({ones:()=>_l(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uy({ones:()=>_l(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Ri(e,r[0]));let u=Im(e,this.kernel.read());this.useBias&&(u=Nm(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ri(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=Ku(c,[2*this.units,this.units],c.rank-1),p=Im(s,h),[f,m,g]=Ku(u,3,u.rank-1),[b,y]=Ku(p,2,p.rank-1);i=this.recurrentActivation.apply(Ci(f,b)),o=this.recurrentActivation.apply(Ci(m,y));const x=Im(Ri(o,s),d);l=this.activation.apply(Ci(g,x));const v=Ci(Ri(i,s),Ri(Ci(1,Ua(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:sy(this.activation),recurrentActivation:sy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jm(this.kernelInitializer),recurrentInitializer:Jm(this.recurrentInitializer),biasInitializer:Jm(this.biasInitializer),kernelRegularizer:uy(this.kernelRegularizer),recurrentRegularizer:uy(this.recurrentRegularizer),biasRegularizer:uy(this.biasRegularizer),activityRegularizer:uy(this.activityRegularizer),kernelConstraint:Gg(this.kernelConstraint),recurrentConstraint:Gg(this.recurrentConstraint),biasConstraint:Gg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Oy.className="GRUCell",Si(Oy);class Ay extends Vy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Oy(e),super(e)}call(e,t){return Da((()=>{null!=this.cell.dropoutMask&&(Oa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ay.className="GRU",Si(Ay);class Py extends Zy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vf(this.units,"units"),this.activation=ay(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ay(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Qm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=hy(e.kernelRegularizer),this.recurrentRegularizer=hy(e.recurrentRegularizer),this.biasRegularizer=hy(e.biasRegularizer),this.kernelConstraint=Wg(e.kernelConstraint),this.recurrentConstraint=Wg(e.recurrentConstraint),this.biasConstraint=Wg(e.biasConstraint),this.dropout=um([1,cm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=um([1,cm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=tg(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Em{apply(t,s){const r=e.apply([n]),a=(new $m).apply([n]),i=e.apply([2*n]);return vm(vm(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Da((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new yf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uy({ones:()=>_l(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uy({ones:()=>_l(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Ri(e,a[0]));let h=Im(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ri(s,i[0])),h=Ci(h,Im(s,this.recurrentKernel.read())),this.useBias&&(h=Nm(h,this.bias.read()));const[d,p,f,m]=Ku(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Ci(Ri(l,r),Ri(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ri(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:sy(this.activation),recurrentActivation:sy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jm(this.kernelInitializer),recurrentInitializer:Jm(this.recurrentInitializer),biasInitializer:Jm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:uy(this.kernelRegularizer),recurrentRegularizer:uy(this.recurrentRegularizer),biasRegularizer:uy(this.biasRegularizer),activityRegularizer:uy(this.activityRegularizer),kernelConstraint:Gg(this.kernelConstraint),recurrentConstraint:Gg(this.recurrentConstraint),biasConstraint:Gg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Py.className="LSTMCell",Si(Py);class By extends Vy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Py(e),super(e)}call(e,t){return Da((()=>{null!=this.cell.dropoutMask&&(Oa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}By.className="LSTM",Si(By);class Hy extends Zy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Da((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;jm(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{nm(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Ag(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ag(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}ig(t)}}function Uy(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Rm(t(),n),o=()=>Gm(i,t,s);return!r||r<=1?Aa(o().clone()):Array(r).fill(void 0).map(o).map((e=>Aa(e.clone())))}Hy.className="StackedRNNCells",Si(Hy);var _y=globalThis&&globalThis.__rest||function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n};class Yy extends Vy{constructor(e){if(e.unroll)throw new xf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new og({ndim:5})]}call(e,t){return Da((()=>{if(null!=this.cell.dropoutMask&&(Oa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new yf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Da((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Dl([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){Da((()=>{if(!this.stateful)throw new gf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new yf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Dl(r))):this.states_=[Dl(r)];else if(null==e)Oa(this.states_),null!=this.keptStates&&(Oa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Dl(r))):this.states_[0]=Dl(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new yf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Oa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!d(n.shape,s))throw new yf(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Aa(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=xy(l,s[0],r,a[0],i[0]),h=xy(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Yy.className="ConvRNN2D";class Jy extends Py{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Vf(this.filters,"filters"),this.kernelSize=yy(n,2,"kernelSize"),this.kernelSize.forEach((e=>Vf(e,"kernelSize"))),this.strides=yy(s||1,2,"strides"),this.strides.forEach((e=>Vf(e,"strides"))),this.padding=r||"valid",jf(this.padding),this.dataFormat=a||"channelsLast",Qf(this.dataFormat),this.dilationRate=yy(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Vf(e,"dilationRate")))}build(e){var t;e=tg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new yf(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Em{apply(e,t){return xm([n.apply([s]),Ol([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Da((()=>{if(3!==e.length)throw new yf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uy({ones:()=>_l(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ri(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uy({ones:()=>_l(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[b,y,x,v]=Ku(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?Ku(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[C,T,N,R]=Ku(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,T),m=this.recurrentConv(m,N),g=this.recurrentConv(g,R);const G=this.recurrentActivation.apply(Ci(l,p)),L=this.recurrentActivation.apply(Ci(u,f)),W=Ci(Ri(L,a),Ri(G,this.activation.apply(Ci(c,m)))),E=Ri(this.recurrentActivation.apply(Ci(h,g)),this.activation.apply(W));return[E,E,W]}))}getConfig(){const e=super.getConfig(),t=_y(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},t,n)}inputConv(e,t,n,s){const r=So(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Nm(r,n,this.dataFormat):r}recurrentConv(e,t){return So(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Jy.className="ConvLSTM2DCell",Si(Jy);class Qy extends Yy{constructor(e){const t=new Jy(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Qy.className="ConvLSTM2D",Si(Qy);class jy extends dg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return Gm((()=>Rm(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}jy.className="Dropout",Si(jy);class qy extends jy{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}qy.className="SpatialDropout1D",Si(qy);class ex extends dg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Vf(this.units,"units"),this.activation=ay(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Qm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Qm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Wg(e.kernelConstraint),this.biasConstraint=Wg(e.biasConstraint),this.kernelRegularizer=hy(e.kernelRegularizer),this.biasRegularizer=hy(e.biasRegularizer),this.activityRegularizer=hy(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=tg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=tg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e),s=Kf(this.activation.getClassName());let r;return null!=s?r=Im(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Im(n,this.kernel.read()),null!=this.bias&&(r=Nm(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:sy(this.activation),useBias:this.useBias,kernelInitializer:Jm(this.kernelInitializer),biasInitializer:Jm(this.biasInitializer),kernelRegularizer:uy(this.kernelRegularizer),biasRegularizer:uy(this.biasRegularizer),activityRegularizer:uy(this.activityRegularizer),kernelConstraint:Gg(this.kernelConstraint),biasConstraint:Gg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ex.className="Dense",Si(ex);class tx extends dg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tg(e);for(const t of e.slice(1))if(null==t)throw new yf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],lm(e,1)]}call(e,t){return Da((()=>{this.invokeCallHook(e,t);let n=eg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ya(n,e)}return function(e){if(e.rank<=1)throw new yf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],lm(e.shape,1)];return to(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}tx.className="Flatten",Si(tx);class nx extends dg{constructor(e){super(e),this.supportsMasking=!0,this.activation=ay(e.activation)}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:sy(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}nx.className="Activation",Si(nx);class sx extends dg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Da((()=>function(e,t){return Da((()=>{if(2!==e.shape.length)throw new yf(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return wm(mm(e,1),[1,t,1])}))}(e=eg(e),this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}sx.className="RepeatVector",Si(sx);class rx extends dg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new yf("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=lm(e);if(null!==a){if(0===r||i%r!=0)throw new yf(n);s[a]=i/r}else if(i!==r)throw new yf(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return to(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}rx.className="Reshape",Si(rx);class ax extends dg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=hm(1,e.dims.length+1);if(!d(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new og({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=tg(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return Ya(eg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ax.className="Permute",Si(ax);class ix extends dg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=eg(e);return Mi(Ul(n,this.maskValue),-1)}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e),s=Mi(Ul(n,this.maskValue),-1,!0);return Ri(n,Ga(s,n.dtype))}))}}ix.className="Masking",Si(ix);class ox extends dg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Tf(e.inputLength))}this.inputDim=e.inputDim,Vf(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Vf(this.outputDim,"outputDim"),this.embeddingsInitializer=Qm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=hy(e.embeddingsRegularizer),this.activityRegularizer=hy(e.activityRegularizer),this.embeddingsConstraint=Wg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Da((()=>this.maskZero?(e=eg(e),Ul(e,Ko(e))):null))}computeOutputShape(e){if(e=tg(e),null==this.inputLength)return[...e,this.outputDim];const t=Tf(this.inputLength);if(t.length!==e.length-1)throw new yf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new yf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Da((()=>{this.invokeCallHook(e,t);let n=eg(e);"int32"!==n.dtype&&(n=fm(n,"int32"));const s=Sm(this.embeddings.read(),to(n,[n.size]));return to(s,tg(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Jm(this.embeddingsInitializer),embeddingsRegularizer:uy(this.embeddingsRegularizer),activityRegularizer:uy(this.activityRegularizer),embeddingsConstraint:Gg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ox.className="Embedding",Si(ox);class lx extends dg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new yf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tg(e)]),e.length<2)throw new yf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=$f(t),t.length>1)throw new yf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===$f(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Da((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=cm(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=mm(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=to(s,[r].concat(lm(e.slice(1))));i=Ya(i,[1,0]),i=to(i,a),t.push(i),n=!0}else if(e>1){const r=hm(1,e).concat([0]);t.push(Ya(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=to(Ya(to(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(hm(0,r-1));s=Ya(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=$f(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Da((()=>{if(null==t)return null;if(!Array.isArray(t))throw new yf("`mask` should be an Array");if(!Array.isArray(e))throw new yf("`inputs` should be an Array");if(t.length!==e.length)throw new yf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:cl(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ml(n,t[e]);return n}))}}class ux extends lx{constructor(e){super(e)}mergeFunction(e){return Da((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ci(t,e[n]);return t}))}}ux.className="Add",Si(ux);class cx extends lx{constructor(e){super(e)}mergeFunction(e){return Da((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ri(t,e[n]);return t}))}}cx.className="Multiply",Si(cx);class hx extends lx{constructor(e){super(e)}mergeFunction(e){return Da((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ci(t,e[n]);return Ri(1/e.length,t)}))}}hx.className="Average",Si(hx);class dx extends lx{constructor(e){super(e)}mergeFunction(e){return Da((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zl(t,e[n]);return t}))}}dx.className="Maximum",Si(dx);class px extends lx{constructor(e){super(e)}mergeFunction(e){return Da((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Al(t,e[n]);return t}))}}px.className="Minimum",Si(px);class fx extends lx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new yf("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(d(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new yf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Da((()=>xm(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new yf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new yf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new yf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new yf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Da((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(Ga(_l(e[n]),"bool")):t[n].rank<e[n].rank?s.push(cl(t[n],-1)):s.push(t[n]);const r=ro(s,this.axis);return Ei(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function mx(e,t){for(;e<0;)e+=t;return e}fx.className="Concatenate",Si(fx);class gx extends lx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){o(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new xf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new yf(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new yf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>mx(t,e[n].shape.length))):[mx(this.axes,n.shape.length),mx(this.axes,s.shape.length)],this.normalize&&(n=Pg(n,t[0]),s=Pg(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new xf("batchDot is not implemented for tensors of 4D or higher rank yet");if(o(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),o(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new xf("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return Da((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=to(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=to(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?al(Ri(e,t),a[0]):al(Ri(Ya(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=Xa(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=Au(i,t)}return 1===i.shape.length&&(i=cl(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[mx(this.axes,e.length),mx(this.axes,t.length)],n}computeOutputShape(e){o(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new xf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}gx.className="Dot",Si(gx);class bx extends dg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e);return Gm((()=>Ci(km(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}bx.className="GaussianNoise",Si(bx);class yx extends dg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Da((()=>{this.invokeCallHook(e,t);const n=eg(e);return this.rate>0&&this.rate<1?Gm((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ri(n,km(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}yx.className="GaussianDropout",Si(yx);class xx extends dg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||eg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Da((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Gm((()=>{const t=eg(e),s=-1.7580993408473766;let r=bl(xu(n),this.rate);r=fm(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=Ci(Ri(t,r),Ri(Ci(r,-1),s));return Ci(Ri(o,a),i)}),(()=>eg(e)),t.training||!1)}return e}))}}function vx(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=ho(e,t,n,s,r,a);else if(3===e.rank)i=po(e,t,n,s,r,a);else{if(4!==e.rank)throw new xf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=fo(e,t,n,s,r,a)}return i}function wx(e,t,n,s,r=.001){return d(s.slice().sort(),hm(0,e.rank-1))?function(e,t,n,s,r=.001){return Da((()=>{const a=Hl(e,s),i=a.mean,o=a.variance;return[vx(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return Da((()=>{const a=Hl(e,s),i=a.mean,o=a.variance,l=[];for(const t of hm(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=to(i,l),c=to(o,l),h=null==t?null:to(t,l),d=null==n?null:to(n,l);return[vx(e,u,c,d,h,r),i,o]}))}(e,t,n,s,r)}xx.className="AlphaDropout",Si(xx);class kx extends dg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Qm(e.betaInitializer||"zeros"),this.gammaInitializer=Qm(e.gammaInitializer||"ones"),this.movingMeanInitializer=Qm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Qm(e.movingVarianceInitializer||"ones"),this.betaConstraint=Wg(e.betaConstraint),this.gammaConstraint=Wg(e.gammaConstraint),this.betaRegularizer=hy(e.betaRegularizer),this.gammaRegularizer=hy(e.gammaRegularizer)}build(e){e=tg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new yf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new og({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Da((()=>{const n=null!=t.training&&t.training,s=eg(e),r=s.shape,a=r.length,i=hm(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=kf(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!d(u,hm(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=to(this.movingMean.read(),l),t=to(this.movingVariance.read(),l),n=this.center?to(this.beta.read(),l):null,r=this.scale?to(this.gamma.read(),l):null;return vx(s,e,t,n,r,this.epsilon)}return vx(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=wx(s,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{Da((()=>{const s=1-n,r=e.read(),a=Ri(Ll(r,t),s);e.write(Ll(r,a))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jm(this.betaInitializer),gammaInitializer:Jm(this.gammaInitializer),movingMeanInitializer:Jm(this.movingMeanInitializer),movingVarianceInitializer:Jm(this.movingVarianceInitializer),betaRegularizer:uy(this.betaRegularizer),gammaRegularizer:uy(this.gammaRegularizer),betaConstraint:Gg(this.betaConstraint),gammaConstraint:Gg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}kx.className="BatchNormalization",Si(kx);class Ix extends dg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Qm(e.betaInitializer||"zeros"),this.gammaInitializer=Qm(e.gammaInitializer||"ones"),this.betaRegularizer=hy(e.betaRegularizer),this.gammaRegularizer=hy(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=tg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==$f(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=eg(e),s=n.shape,r=s.length;return Da((()=>{let{mean:e,variance:t}=Hl(n,this.axis,!0);const a=kf(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?to(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=dl(e,u),t=dl(t,u),null!=o&&(o=dl(o,c)),null!=l&&(l=dl(l,c)),vx(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jm(this.betaInitializer),gammaInitializer:Jm(this.gammaInitializer),betaRegularizer:uy(this.betaRegularizer),gammaRegularizer:uy(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ix.className="LayerNormalization",Si(Ix);class Sx extends dg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new yf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new yf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new yf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new og({ndim:4})]}computeOutputShape(e){let t,n;return e=tg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Da((()=>function(e,t,n){return Da((()=>{if(4!==e.rank)throw new yf(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new yf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new yf(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Yl(e,s)}))}(eg(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Cx(e,t,n,s,r,a){return Da((()=>{let i;Qf(r),qf(a),jf(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=wy(e,r);const o="same"===s?"same":"valid";return i="max"===a?Xl(e,t,n,o):no(e,t,n,o),"channelsFirst"===r&&(i=Ya(i,[0,3,1,2])),i}))}function Tx(e,t,n,s,r,a){return Da((()=>{let i;Qf(r),qf(a),jf(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=ky(e,r);const o="same"===s?"same":"valid";return i="max"===a?Vl(e,t,n,o):so(e,t,n,o),"channelsFirst"===r&&(i=Ya(i,[0,4,1,2,3])),i}))}Sx.className="ZeroPadding2D",Si(Sx);class Nx extends dg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new yf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Vf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new yf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Vf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,jf(this.padding),this.inputSpec=[new og({ndim:3})]}computeOutputShape(e){const t=xy((e=tg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Da((()=>{this.invokeCallHook(e,t),e=mm(eg(e),2);const n=this.poolingFunction(eg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Au(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Rx extends Nx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Qf(r),jf(s),Cx(e,t,n,s,r,"max")}}Rx.className="MaxPooling1D",Si(Rx);class Gx extends Nx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Qf(r),jf(s),Cx(e,t,n,s,r,"avg")}}Gx.className="AveragePooling1D",Si(Gx);class Lx extends dg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new yf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Vf(this.poolSize,"poolSize"),Vf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qf(this.dataFormat),jf(this.padding),this.inputSpec=[new og({ndim:4})]}computeOutputShape(e){e=tg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=xy(t,this.poolSize[0],this.padding,this.strides[0]),n=xy(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Da((()=>(this.invokeCallHook(e,t),this.poolingFunction(eg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Wx extends Lx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Qf(r),jf(s),Cx(e,t,n,s,r,"max")}}Wx.className="MaxPooling2D",Si(Wx);class Ex extends Lx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Qf(r),jf(s),Cx(e,t,n,s,r,"avg")}}Ex.className="AveragePooling2D",Si(Ex);class Mx extends dg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new yf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Vf(this.poolSize,"poolSize"),Vf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qf(this.dataFormat),jf(this.padding),this.inputSpec=[new og({ndim:5})]}computeOutputShape(e){e=tg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=xy(t,this.poolSize[0],this.padding,this.strides[0]),n=xy(n,this.poolSize[1],this.padding,this.strides[1]),s=xy(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Da((()=>(this.invokeCallHook(e,t),this.poolingFunction(eg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $x extends Mx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Qf(r),jf(s),Tx(e,t,n,s,r,"max")}}$x.className="MaxPooling3D",Si($x);class zx extends Mx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Qf(r),jf(s),Tx(e,t,n,s,r,"avg")}}zx.className="AveragePooling3D",Si(zx);class Fx extends dg{constructor(e){super(e),this.inputSpec=[new og({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xf}}class Xx extends Fx{constructor(e){super(e||{})}call(e,t){return Da((()=>{const t=eg(e);return Kl(t,1)}))}}Xx.className="GlobalAveragePooling1D",Si(Xx);class Vx extends Fx{constructor(e){super(e||{})}call(e,t){return Da((()=>{const t=eg(e);return qo(t,1)}))}}Vx.className="GlobalMaxPooling1D",Si(Vx);class Zx extends dg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qf(this.dataFormat),this.inputSpec=[new og({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xf}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kx extends Zx{call(e,t){return Da((()=>{const t=eg(e);return"channelsLast"===this.dataFormat?Kl(t,[1,2]):Kl(t,[2,3])}))}}Kx.className="GlobalAveragePooling2D",Si(Kx);class Dx extends Zx{call(e,t){return Da((()=>{const t=eg(e);return"channelsLast"===this.dataFormat?qo(t,[1,2]):qo(t,[2,3])}))}}Dx.className="GlobalMaxPooling2D",Si(Dx);class Ox extends dg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Ag(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Ax extends Ox{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=tg(e)).length<3)throw new yf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=tg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Da((()=>Xy(((e,n)=>[eg(this.layer.call(e,t)),[]]),e=eg(e),[],!1,null,null,!1,!0)[1]))}}Ax.className="TimeDistributed",Si(Ax);class Px extends Ox{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ag(n),t.goBackwards=!0!==t.goBackwards;const s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ag(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){Ff(Yf,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new xf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState&&(s=r.slice(1)),t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Cf(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Fy(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new yf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new og({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new xf("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof lg;for(const e of a)if(e instanceof lg!==o)throw new yf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Da((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Su(r,1)),"concat"===this.mergeMode?i=xm([s,r]):"sum"===this.mergeMode?i=Ci(s,r):"ave"===this.mergeMode?i=Ri(.5,Ci(s,r)):"mul"===this.mergeMode?i=Ri(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){nm(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),nm(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ag(t.layer);if(delete t.layer,null!=t.numConstants)throw new xf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}Px.className="Bidirectional",Si(Px);class Bx extends dg{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Da((()=>("float32"!==(e=eg(e)).dtype&&(e=fm(e,"float32")),Ci(Ri(e,this.scale),this.offset))))}}var Hx,Ux;Bx.className="Rescaling",Si(Bx),A().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Hx||(Hx={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(Ux||(Ux={}));var _x;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(_x||(_x={}));function Yx(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Jx=tc;class Qx extends t{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new e(this,Za())}nextDataId(){return Qx.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,A().get("IS_NODE")&&ts("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&C(n[0])){const r=n.map((e=>qs(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Rh(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>er(e)));return Ra(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ra(e.shape,e.dtype,t)}makeOutput(e,t,n){return Za().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=js();return e(),{kernelMs:js()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Yx([e],"where");const t=this.readSync(e.dataId);return Jx(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Qx.nextDataId=0;const jx={kernelName:_,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Yx(t,"abs");let s=new Float32Array(h(t.shape));return s=function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}};function qx(e){return(t,n,s,r,a)=>{const i=ja(t,n),o=i.length,l=L(i),u=v(a,h(i)),c=t.length,d=n.length,p=L(t),f=L(n),m=Ja(t,i),g=Ja(n,i);if(m.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=V(t,o,l),a=n.slice(-c);m.forEach((e=>a[e]=0));const i=X(a,c,p),h=n.slice(-d);g.forEach((e=>h[e]=0));const b=X(h,d,f);u[t]=e(s[i],r[b])}return[u,i]}}function ev(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const tv={kernelName:xe,backendName:"cpu",kernelFunc:ev};function nv(e,t,n="float32"){if("complex64"===n){return ev({inputs:{real:nv(e,t,"float32"),imag:nv(e,t,"float32")},backend:e})}const s=$(h(t),n);return e.makeTensorInfo(t,n,s)}function sv(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const rv={kernelName:ot,backendName:"cpu",kernelFunc:sv};function av(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const iv={kernelName:qt,backendName:"cpu",kernelFunc:av};function ov(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return sv({inputs:{x:r},backend:n});const e=nv(n,r.shape,r.dtype),t=ov({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=ev({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=av({inputs:{input:r},backend:n}),t=ov({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!k(r.dtype,a)){const e=sv({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(r.dataId).values,[o,l,u]=function(e,t,n,s){if("int32"===s)return[t,"int32",Int32Array.from(e)];if("bool"===s){const s=Qs([0],n),[r,a]=qx(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}(i,r.shape,r.dtype,a);return n.makeTensorInfo(o,l,u)}const lv={kernelName:ge,backendName:"cpu",kernelFunc:ov};function uv(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a:a,b:i}=n,o=r;Yx([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?ud(l):l,h="string"===a.dtype?ud(u):u,d=s||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a:a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=ov({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=ov({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),v=o.makeTensorInfo(y,"float32",b),w=ev({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function cv(e){return(t,n,s,r,a,i)=>{const o=ja(t,n),l=h(o),u=o.length,c=L(o),d=v("float32",l),p=v("float32",l),f=Ja(t,o),m=Ja(n,o),g=Rh(s,r),b=Rh(a,i),y=t.length,x=L(t),w=n.length,k=L(n);if(f.length+m.length===0)for(let t=0;t<d.length;t++){const n=t%g.length,s=t%b.length,r=e(g[2*n],g[2*n+1],b[2*s],b[2*s+1]);d[t]=r.real,p[t]=r.imag}else for(let t=0;t<d.length;t++){const n=V(t,u,c),s=n.slice(-y);f.forEach((e=>s[e]=0));const r=X(s,y,x),a=n.slice(-w);m.forEach((e=>a[e]=0));const i=X(a,w,k),o=e(g[2*r],g[2*r+1],b[2*i],b[2*i+1]);d[t]=o.real,p[t]=o.imag}return[d,p,o]}}const hv=qx(((e,t)=>e+t)),dv=cv(((e,t,n,s)=>({real:e+n,imag:t+s}))),pv=uv(Q,hv,dv),fv={kernelName:Q,backendName:"cpu",kernelFunc:pv};function mv(e,t,n,s,r){const a=h(s),i=$(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function gv(e){return(t,n,s)=>{const r=v(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}function bv(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(Yx(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=h(i.shape),c=n||i.dtype,d=w(c,u);for(let e=0;e<u;++e)d[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,d)}}function yv(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(Yx(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}const xv=gv((e=>Math.ceil(e))),vv=yv(be,xv),wv={kernelName:be,backendName:"cpu",kernelFunc:vv};const kv=qx(((e,t)=>e===t?1:0)),Iv=uv(Ue,kv,null,"bool"),Sv={kernelName:Ue,backendName:"cpu",kernelFunc:Iv},Cv=gv((e=>Math.exp(e))),Tv=yv(_e,Cv,"float32"),Nv={kernelName:_e,backendName:"cpu",kernelFunc:Tv},Rv=gv((e=>Math.expm1(e))),Gv=yv(Je,Rv),Lv={kernelName:Je,backendName:"cpu",kernelFunc:Gv},Wv=gv((e=>Math.floor(e))),Ev=yv(et,Wv),Mv={kernelName:et,backendName:"cpu",kernelFunc:Ev};const $v=qx(((e,t)=>e>t?1:0)),zv=uv(at,$v,null,"bool"),Fv={kernelName:at,backendName:"cpu",kernelFunc:zv},Xv=qx(((e,t)=>e>=t?1:0)),Vv=uv(it,Xv,null,"bool"),Zv={kernelName:it,backendName:"cpu",kernelFunc:Vv},Kv=qx(((e,t)=>e<t?1:0)),Dv=uv(ft,Kv,null,"bool"),Ov={kernelName:ft,backendName:"cpu",kernelFunc:Dv},Av=qx(((e,t)=>e<=t?1:0)),Pv=uv(mt,Av,null,"bool"),Bv={kernelName:mt,backendName:"cpu",kernelFunc:Pv};const Hv=gv((e=>Math.log(e))),Uv=yv(bt,Hv),_v={kernelName:bt,backendName:"cpu",kernelFunc:Uv};const Yv=qx(((e,t)=>Math.max(e,t))),Jv=uv(Ct,Yv),Qv={kernelName:Ct,backendName:"cpu",kernelFunc:Jv},jv=qx(((e,t)=>Math.min(e,t))),qv=uv(Mt,jv),ew={kernelName:Mt,backendName:"cpu",kernelFunc:qv},tw=qx(((e,t)=>e*t)),nw=cv(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),sw=uv(Xt,tw,nw),rw={kernelName:Xt,backendName:"cpu",kernelFunc:sw};const aw={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;Yx(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=function(e,t,n){const s=Js(-1,n);return tw([],t,s,e,n)}(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},iw=qx(((e,t)=>e!==t?1:0)),ow=uv(Zt,iw,null,"bool"),lw={kernelName:Zt,backendName:"cpu",kernelFunc:ow};function uw(e,t,n,s,r){const a=t.length,i=h(t),o=L(t),l=L(r),u=v(n,h(r));for(let t=0;t<i;++t){const n=V(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[X(r,a,l)]=e[t]}return u}function cw(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Yx(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=uw(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const hw={kernelName:Pn,backendName:"cpu",kernelFunc:cw};const dw={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Yx(r,"prod");const o=r.shape.length,l=y(a,r.shape),u=Jo(l,o);let c=l,d=r;const p=[];null!=u&&(d=cw({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(d),c=jo(c.length,o));const f=n.data.get(d.dataId).values,{outVals:m,outShape:g,outDtype:b}=function(e,t,n,s){const[r,a]=Uo(e,s),i=Cr(t,"int32"),o=$(h(r),i),l=h(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}(d.shape,d.dtype,f,c);let x=g;return i&&(x=_o(g,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(x,b,m)}};function pw(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let s=0;s<e.length;++s){let i=e[s],l=e[s]+1;for(let e=0;e<n.length;++e){const s=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-s[i];for(let e=i;e<l;++e)o[r].push(s[e+1]+t)}i=s[i],l=s[l]}l!==i&&(r.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:r,numValues:a}}function fw(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function mw(e,t,n,s,r){const a=t.slice();a[0]=r;const i=w(n,h(a)),o=e.length;return function(e,t,n,s,r,a){const i=fw(t,2)[1],o=fw(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<s;++t)r[l*o+t]=e[n*i+t];++l}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}function gw(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=V(s,t.length,L(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=pw(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const s=w("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(u),p=mw(n,s,r,c,h);return[d,p[0],p[1]]}var bw=oh;class yw{constructor(e,t,n,s,r,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=uh(u),this.raggedRank=ch(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===bw.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===bw.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case bw.VALUE_ROWIDS:return yw.getMaxWidthValueRowID(t);case bw.ROW_SPLITS:return yw.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${bw[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return vw(e,n)}calculateOutputSize(e){const t=this.valuesShape;hh(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=lh(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let e=0;e<s;++e,a+=t)r.push(a);for(let t=s;t<e;++t)r.push(-1);return o(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case bw.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case bw.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${bw[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case bw.FIRST_DIM_SIZE:return e[0];case bw.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case bw.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${bw[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=vw(t,!1),r=w(this.valuesDType,h(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=h(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Da((()=>{const t=to(u,e);u=go(t,i).dataSync()}))}let c=0,d=0,p=0;for(let e=0;e<=l;++e){let s=e<l?t[e]:-1;if(s!==p){if(d<p){const e=r.subarray(c*o);xw(a.subarray(d*o),e,(p-d)*o)}if(e>=l){const e=n.length;s=Math.floor(e/o)}if(s>p)if(1===this.defaultValue.length)a.subarray(p*o,s*o).fill(this.defaultValue[0]),p=s;else for(;s>p;){xw(a.slice(p*o),u,o),++p}s<0?(c=e+1,d=p):(c=e,d=p,p=d+1)}else++p}}}function xw(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function vw(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}const ww=gv((e=>1/Math.sqrt(e))),kw=yv(hn,ww),Iw={kernelName:hn,backendName:"cpu",kernelFunc:kw};function Sw(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Ra(n,t.dtype);const p=Ra(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const Cw=bv(vn,(e=>1/(1+Math.exp(-e)))),Tw={kernelName:vn,backendName:"cpu",kernelFunc:Cw};function Nw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;Yx(r,"slice");const[o,l]=yi(r,a,i);ii(r,o,l);const u=function(e,t,n,s,r){const a=gi(s,t,n),i=h(n),o=L(s);if(a){const n=bi(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Ra(s,r,"string"===r?ud(e):e),u=Ra(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?cd(u.values):u.values}(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Rw={kernelName:gn,backendName:"cpu",kernelFunc:Nw};function Gw(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=w(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(sd(g,c));g>m&&d.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(rd(t,s[t],l[0]));for(let t=0;t<u;t++)d[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]}const Lw=bv(kn,(e=>Math.sqrt(e))),Ww={kernelName:kn,backendName:"cpu",kernelFunc:Lw},Ew=qx(((e,t)=>{const n=e-t;return n*n})),Mw=uv(En,Ew),$w={kernelName:En,backendName:"cpu",kernelFunc:Mw};class zw{constructor(e,t,n,s,r,a){this.separator=qs(e),this.nGramWidths=t,this.leftPad=qs(n),this.rightPad=qs(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=w("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function Fw(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);(!n||0!==t.length)&&s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void((!n||0!==e.length)&&s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);(!n||0!==t.length)&&s.push(t),r=a+1}}const Xw=qx(((e,t)=>e-t)),Vw=cv(((e,t,n,s)=>({real:e-n,imag:t-s}))),Zw=uv(Vn,Xw,Vw),Kw={kernelName:Vn,backendName:"cpu",kernelFunc:Zw};const Dw=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Ow(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);Ow(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,o=s;for(i(e,n,t),Dw(e[s],r)>0&&i(e,n,s);a<o;){for(i(e,a,o),a++,o--;Dw(e[a],r)<0;)a+=1;for(;Dw(e[o],r)>0;)o-=1}0===Dw(e[n],r)?i(e,n,o):(o+=1,i(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}Pa("cpu",(()=>new Qx),1);const Aw=bv(Pe,(e=>e>=0?e:Math.exp(e)-1)),Pw={kernelName:Pe,backendName:"cpu",kernelFunc:Aw};function Bw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Yx([r],"leakyRelu");const i=h(r.shape),o=n.data.get(r.dataId).values,l=v("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const Hw={kernelName:pt,backendName:"cpu",kernelFunc:Bw},Uw=qx(((e,t)=>e<0?t*e:e));function _w(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Yx([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=Uw(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Yw={kernelName:_t,backendName:"cpu",kernelFunc:_w},Jw=bv(tn,(e=>Math.max(0,e))),Qw={kernelName:tn,backendName:"cpu",kernelFunc:Jw},jw=bv(ln,(e=>Math.min(Math.max(0,e),6))),qw={kernelName:ln,backendName:"cpu",kernelFunc:jw};function ek(e,t,n,s,r){if("linear"===n)return sv({inputs:{x:t},backend:e});if("relu"===n)return Jw({inputs:{x:t},backend:e});if("elu"===n)return Aw({inputs:{x:t},backend:e});if("relu6"===n)return jw({inputs:{x:t},backend:e});if("prelu"===n)return _w({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Bw({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Cw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function tk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=h(r.shape),l=b(a,i),u=h(l);o(i===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const c=n.data.get(r.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:r.dataId,shape:l,dtype:r.dtype}}const nk={kernelName:nn,backendName:"cpu",kernelFunc:tk};function sk(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:l}=s;Yx([r,a],"matMul");const u=r.shape.length,c=a.shape.length,d=i?r.shape[u-2]:r.shape[u-1],p=l?a.shape[c-1]:a.shape[c-2],f=i?r.shape[u-1]:r.shape[u-2],m=l?a.shape[c-2]:a.shape[c-1],g=r.shape.slice(0,-2),b=a.shape.slice(0,-2),y=h(g),x=h(b),v=ja(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([f,m]);o(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${l} must match.`));const w=l?[x,m,p]:[x,p,m],k=tk({inputs:{x:r},backend:n,attrs:{shape:i?[y,d,f]:[y,f,d]}}),I=tk({inputs:{x:a},backend:n,attrs:{shape:w}}),S=i?k.shape[1]:k.shape[2],C=i?k.shape[2]:k.shape[1],T=l?I.shape[1]:I.shape[2],N=Math.max(y,x),R=n.data.get(k.dataId).values,G=n.data.get(I.dataId).values,W=L(k.shape),E=L(I.shape),[M,$,z]=i?[W[0],1,W[1]]:[W[0],W[1],1],[F,X,V]=l?[1,E[1],E[0]]:[E[1],1,E[0]],Z=C*T,K=Ra([N,C,T],k.dtype),D=K.values,O=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<C;t+=O)for(let n=0;n<T;n+=O)for(let s=0;s<S;s+=O){const r=Math.min(t+O,C),a=Math.min(n+O,T),i=Math.min(s+O,S);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,y-1)*M,a=Math.min(e,x-1)*V;n+=R[s+o*$+r*z]*G[r*F+t*X+a]}D[e*Z+(o*T+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,K.dtype,K.values)}const rk={kernelName:de,backendName:"cpu",kernelFunc:sk};const ak={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=sk({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=pv({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=ek(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},ik=bv(Y,(e=>Math.acos(e))),ok={kernelName:Y,backendName:"cpu",kernelFunc:ik},lk=bv(J,(e=>Math.acosh(e))),uk={kernelName:J,backendName:"cpu",kernelFunc:lk};const ck={kernelName:j,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;Yx(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Ra(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};const hk={kernelName:q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Yx(r,"all");const o=y(a,r.shape);let l=o;const u=Jo(l,r.shape.length);let c=r;null!=u&&(c=cw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=jo(l.length,r.shape.length)),Yo("all",l,c.shape.length);const[d,p]=Uo(c.shape,l),f=h(p),m=$(h(d),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];n=n&&s}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(d,c.dtype,m);if(i){const e=tk({inputs:{x:b},backend:n,attrs:{shape:_o(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const dk={kernelName:ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Yx(r,"any");const o=y(a,r.shape);let l=o;const u=Jo(l,r.shape.length);let c=r;null!=u&&(c=cw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=jo(l.length,r.shape.length)),Yo("any",l,c.shape.length);const[d,p]=Uo(c.shape,l),f=h(p),m=$(h(d),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];n=n||s}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(d,c.dtype,m);if(i){const e=tk({inputs:{x:b},backend:n,attrs:{shape:_o(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const pk={kernelName:te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Yx(r,"argMax");let i=y(a,r.shape);const o=Jo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=cw({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=jo(i.length,l.shape.length)),i=[i[0]],Yo("argMax",i,l.shape.length);const[c,d]=Uo(l.shape,i),p=$(h(c),"int32"),f=h(d),m=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],s=0;for(let e=0;e<f;++e){const r=m[t+e];r>n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}};const fk={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Yx(r,"argMin");let i=y(a,r.shape);const o=Jo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=cw({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=jo(i.length,l.shape.length)),i=[i[0]],Yo("argMin",i,l.shape.length);const[c,d]=Uo(l.shape,i),p=$(h(c),"int32"),f=h(d),m=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],s=0;for(let e=0;e<f;++e){const r=m[t+e];r<n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},mk=bv(se,(e=>Math.asin(e))),gk={kernelName:se,backendName:"cpu",kernelFunc:mk},bk=bv(re,(e=>Math.asinh(e))),yk={kernelName:re,backendName:"cpu",kernelFunc:bk},xk=bv(ae,(e=>Math.atan(e))),vk={kernelName:ae,backendName:"cpu",kernelFunc:xk},wk=qx(((e,t)=>Math.atan2(e,t))),kk=uv(oe,wk),Ik={kernelName:oe,backendName:"cpu",kernelFunc:kk},Sk=bv(ie,(e=>Math.atanh(e))),Ck={kernelName:ie,backendName:"cpu",kernelFunc:Sk};function Tk(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ra(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),I=n+b*y;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<d;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}g[I+n*x+t]="avg"===a?y/v:b}}}return m}function Nk(e,t,n,s,r=!1,a=!1){const i=Ra(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ra(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const y=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(s.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function Rk(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ra(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*w,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let w=0;w<r.outDepth;++w){const C=w*i-m;let T=C;for(;T<0;)T+=u;const N=Math.min(r.inDepth,d+C),R=n+w*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,p+i),w=R+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),g=w+n*S;let k=y,I=0,C=0;for(let n=T;n<N;n+=u){const r=x+n*s[1];for(let n=d;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?I/C:k}}}}return x}const Gk={kernelName:le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Yx(r,"avgPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=s;o(ji(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=Oi(r.shape,a,i,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))h=sv({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=L(r.shape),s=Tk(e,r.shape,r.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,s.values)}return h}};const Lk={kernelName:ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Yx(r,"avgPool3d");const c=Ai(r.shape,a,i,1,o,l,u),h=Rk(n.data.get(r.dataId).values,r.shape,r.dtype,L(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Wk={kernelName:he,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Yx([r,a],"avgPool3DGrad");const c=Ai(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,C=w-1-c.padInfo.top,T=Ra(a.shape,"float32"),N=1/(f*m*g),R=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-C,o=r-S;let l=0;for(let n=0;n<v;n+=b){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<w;n+=y){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;l+=R.get(e,s,r,a,t)}}}T.set(l*N,e,n,s,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Ek={kernelName:ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;Yx([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Oi(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=Ra(i.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,S=Ra(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-v,a=s-x;let i=0;for(let n=0;n<b;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<y;n+=g){const r=(a+n)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;i+=S.get(e,s,r,t)}}w.set(i*k,e,n,s,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Mk={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:l,variance:u}=t;o(l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o(null==i||l.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o(null==a||l.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Yx([r,l,u,a,i],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(r.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),b=m.length,y=f.length,x=p.length,v=d.length;let w=0,k=0,I=0,S=0;for(let e=0;e<h.length;++e)g[e]=m[w++]+(h[e]-d[k++])*f[I++]/Math.sqrt(p[S++]+c),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};const $k={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;Yx([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=mh(r.shape,a,o),u=gh(l.length,a.length),c=bh(r.shape,a,o),h=yh(i,a.length),d=xh(c,i,a.length),p=tk({inputs:{x:r},backend:n,attrs:{shape:l}}),f=cw({inputs:{x:p},backend:n,attrs:{perm:u}}),m=tk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Nw({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const zk={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=mv(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};const Fk={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=ja(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Xk=bv(ye,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Vk={kernelName:ye,backendName:"cpu",kernelFunc:Xk},Zk={kernelName:ve,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(h(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function Kk(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const Dk={kernelName:ut,backendName:"cpu",kernelFunc:Kk};function Ok(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=y(r,t[0].shape)[0];ah(t.map((e=>e.shape)),a);let i=ih(t.map((e=>e.shape)),a);if(0===h(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>h(e.shape)>0));if(1===o.length)return sv({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>av({inputs:{input:e},backend:n}))),t=o.map((e=>Kk({inputs:{input:e},backend:n}))),s=Ok({inputs:e,backend:n,attrs:{axis:a}}),r=Ok({inputs:t,backend:n,attrs:{axis:a}}),i=ev({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=[-1,h(e.shape.slice(a))];return tk({inputs:{x:e},backend:n,attrs:{shape:t}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=ih(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],d=function(e,t,n,s){const r=w(n,h(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=h(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?ud(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}(u,i,t[0].dtype,c),p=ih(o.map((e=>e.shape)),a),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Ak={kernelName:we,backendName:"cpu",kernelFunc:Ok};function Pk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Yx([r,a],"conv2d");const h=qi(l),d=Pi(r.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new dr(d.outShape,r.dtype),w=L(r.shape),k=L(a.shape),I=w[0],S=x?w[1]:w[2],C=x?w[2]:1,T=x?1:w[1],N=v.strides[0],R=x?v.strides[1]:v.strides[2],G=x?v.strides[2]:1,W=x?1:v.strides[1],E=n.data.get(r.dataId).values,M=n.data.get(a.dataId).values,$=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*N;for(let e=0;e<d.outHeight;++e){const s=n+e*R,r=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=s+e*G,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=d.inWidth)continue;const r=i+s*C;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=E[r+e*T];for(let e=0;e<d.outChannels;++e)$[t+e*W]+=n*M[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,$)}const Bk={kernelName:ke,backendName:"cpu",kernelFunc:Pk};const Hk={kernelName:Ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Yx([r,a],"conv2dBackpropFilter");const h=qi(l),d=Pi(r.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,y=new dr(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new dr(r.shape,r.dtype,w),S=new dr(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(d.outWidth,(d.inWidth+x-s)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=r;e<a;++e){const n=s+e*f-x;l+=b?I.get(u,t,n,i)*S.get(u,c,e,o):I.get(u,i,t,n)*S.get(u,o,c,e)}}y.set(l,e,s,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Uk={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;Yx([r,a],"conv2dBackpropInput");const h=L(a.shape),d=L(r.shape);let p=qi(u);const f=Pi(i,a.shape,o,1,l,c,!1,p),m=new dr(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:T,inWidth:N,outChannels:R,outHeight:G,outWidth:W,strideHeight:E,strideWidth:M}=f;p=f.dataFormat;const $=I-1-f.padInfo.top,z=S-1-f.padInfo.left,F="channelsLast"===p,X=m.strides[0],V=F?m.strides[1]:m.strides[2],Z=F?m.strides[2]:1,K=F?1:m.strides[1],D=d[0],O=F?d[1]:d[2],A=F?d[2]:1,P=F?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<C;++t)for(let n=0;n<T;++n){const s=n-$,r=Math.max(0,Math.ceil(s/E)),a=Math.min(G,(I+s)/E);for(let i=0;i<N;++i){const o=i-z,l=Math.max(0,Math.ceil(o/M)),u=Math.min(W,(S+o)/M);let c=0;for(let n=r;n<a;++n){const r=n*E-s;for(let s=l;s<u;++s){const a=D*e+O*n+A*s,i=x*(I-1-r)+v*(S-1-(s*M-o))+w*t;for(let e=0;e<R;++e){c+=b[a+P*e]*y[i+e]}}}g[X*e+V*n+Z*i+K*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const _k={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;Yx([r,a],"conv3d");const u=Bi(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,x=g.top,v=new dr(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=v.values,S=L(r.shape),C=L(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*v.strides[1],r=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=u.inDepth)continue;const a=e*C[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=s+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*C[1],o=i+s*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*C[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Yk={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;Yx([r,a],"conv3dBackpropFilterV2");const u=L(r.shape),c=L(a.shape),h=Bi(r.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new dr(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,S=n.data.get(a.dataId).values,[C,T,N,R]=c,G=n.data.get(r.dataId).values,[W,E,M,$]=u,z=h.padInfo.front,F=h.padInfo.left,X=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((z-e)/d)),n=Math.min(h.outDepth,(h.inDepth+z-e)/d),s=e*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((X-r)/p)),i=Math.min(h.outHeight,(h.inHeight+X-r)/p),o=r*w+s;for(let s=0;s<b;++s){const l=Math.max(0,Math.ceil((F-s)/f)),u=Math.min(h.outWidth,(h.inWidth+F-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*W,b=m*C;for(let m=t;m<n;++m){const t=(e+m*d-z)*E+h,n=m*T+b;for(let e=a;e<i;++e){const a=(r+e*p-X)*M+t,i=e*N+n;for(let e=l;e<u;++e){const t=e*R+i;g+=G[(s+e*f-F)*$+a+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Jk={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;Yx([r],"conv3dBackpropInputV2");const u=L(r.shape),c=L(a.shape),h=Bi(l,a.shape,o,1,i),d=new dr(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(r.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[S,C,T,N]=c,{batchSize:R,filterDepth:G,filterHeight:W,filterWidth:E,inChannels:M,inDepth:$,inHeight:z,inWidth:F,outChannels:X,outDepth:V,outHeight:Z,outWidth:K,strideDepth:D,strideHeight:O,strideWidth:A}=h,P=G-1-h.padInfo.front,B=W-1-h.padInfo.top,H=E-1-h.padInfo.left;for(let e=0;e<R;++e)for(let t=0;t<M;++t)for(let n=0;n<$;++n){const s=n-P,r=Math.max(0,Math.ceil(s/D)),a=Math.min(V,(G+s)/D);for(let i=0;i<z;++i){const o=i-B,l=Math.max(0,Math.ceil(o/O)),u=Math.min(Z,(W+o)/O);for(let c=0;c<F;++c){const h=c-H,d=Math.max(0,Math.ceil(h/A)),R=Math.min(K,(E+h)/A);let L=0;for(let n=r;n<a;++n){const r=n*D-s;for(let s=l;s<u;++s){const a=s*O-o;for(let i=d;i<R;++i){const o=x*e+v*n+w*s+k*i,l=S*(G-1-r)+C*(W-1-a)+T*(E-1-(i*A-h))+N*t;for(let e=0;e<X;++e){L+=y[o+e]*I[l+e]}}}}p[f*e+m*n+g*i+b*c+t]=L}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Qk=bv(Re,(e=>Math.cos(e))),jk={kernelName:Re,backendName:"cpu",kernelFunc:Qk},qk=bv(Ge,(e=>Math.cosh(e))),eI={kernelName:Ge,backendName:"cpu",kernelFunc:qk};const tI={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=o,b=Ra([f,m,g,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,w=L(r.shape),k=L(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],s=y[t+1],r=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<p;s++){const r=s+n*k[2]+t*k[1]+e*k[0];b.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(d-1)+l*f:.5*(s+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+l*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let s=0;s<p;s++){let a=s+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=s+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=s+h*w[2]+r*w[1]+i*w[0];const d=v[a];a=s+m*w[2]+r*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(v[a]-d)*y;a=s+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(d-1)+n*f:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<p;s++){const r=s+o*w[2]+l*w[1]+i*w[0],a=s+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const nI={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;Yx(r,"cumprod");const l=Jo([a],r.shape.length);let u=r;null!=l&&(u=cw({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=jo(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Cr(u.dtype,"int32"),p=M(h(u.shape),d),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)p[n]=i?1:f[n];else{const s=g(e,t-1);p[n]=i?f[s]*p[s]:f[n]*p[s]}}const b=n.makeTensorInfo(u.shape,d,p);if(null!=l){const e=cw({inputs:{x:b},backend:n,attrs:{perm:Qo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}};const sI={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;Yx(r,"cumsum");const l=Jo([a],r.shape.length);let u=r;null!=l&&(u=cw({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=jo(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Cr(u.dtype,"int32"),p=$(h(u.shape),d),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)p[n]=i?0:f[n];else{const s=g(e,t-1);p[n]=i?f[s]+p[s]:f[n]+p[s]}}const b=n.makeTensorInfo(u.shape,d,p);if(null!=l){const e=cw({inputs:{x:b},backend:n,attrs:{perm:Qo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}};const rI={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=mv(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=function(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Ra([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};const aI={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;o("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const l=r.shape[0],u=r.shape[1],c=r.shape[2],h=r.shape[3],d=u*a,p=c*a,f=h/(a*a),m=n.data.get(r.dataId).values,g=new Float32Array(l*d*p*f);let b=0;for(let e=0;e<l;++e)for(let t=0;t<d;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<p;++t){const r=Math.floor(t/a),i=(s*a+t%a)*f;for(let t=0;t<f;++t){const s=t+i+h*(r+c*(n+u*e));g[b++]=m[s]}}}return n.makeTensorInfo([l,d,p,f],r.dtype,g)}};function iI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:c}=s;Yx([r,a],"depthwiseConv2DNative");const h=L(r.shape),d=L(a.shape);let p=u;null==p&&(p=[1,1]),o(ji(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const f=Pi(r.shape,a.shape,i,p,l,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new dr(f.outShape,r.dtype),S=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,T=I.values;for(let e=0;e<f.batchSize;++e){const t=e*h[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const s=n+e*I.strides[1],r=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=r+e*b;if(n<0||n>=f.inHeight)continue;const a=e*d[0],i=t+n*h[1];for(let e=0;e<f.outWidth;++e){const t=s+e*I.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const s=n+e*y;if(s<0||s>=f.inWidth)continue;const r=a+e*d[1],o=i+s*f.inChannels;let l=t,u=r;for(let e=0;e<f.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)T[l+e]+=t*C[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const oI={kernelName:ze,backendName:"cpu",kernelFunc:iI};const lI={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;Yx([r,a],"depthwiseConv2dNativeBackpropFilter");const h=Pi(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new dr(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new dr(r.shape,r.dtype,v),k=n.data.get(a.dataId).values,I=new dr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((b-s)/p)),a=Math.min(h.outWidth,(h.inWidth+b-s)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=r;e<a;++e){const n=s+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const uI={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;Yx([r,a],"depthwiseConv2DNativeBackpropInput");const h=L(r.shape),d=L(a.shape),p=Pi(c,a.shape,i,o,l,u,!0),f=new dr(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[S,C,T]=d,{batchSize:N,filterHeight:R,filterWidth:G,inChannels:W,inHeight:E,inWidth:M,outChannels:$,outHeight:z,outWidth:F,strideHeight:X,strideWidth:V}=p,Z=R-1-p.padInfo.top,K=G-1-p.padInfo.left,D=$/W;for(let e=0;e<N;++e)for(let t=0;t<W;++t)for(let n=0;n<E;++n){const s=n-Z,r=Math.max(0,Math.ceil(s/X)),a=Math.min(z,(R+s)/X);for(let i=0;i<M;++i){const o=i-K,l=Math.max(0,Math.ceil(o/V)),u=Math.min(F,(G+o)/V);let c=0;for(let n=r;n<a;++n){const r=n*X-s;for(let s=l;s<u;++s){const a=v*e+w*n+k*s,i=S*(R-1-r)+C*(G-1-(s*V-o))+T*t;for(let e=0;e<D;++e){c+=x[a+(t*D+e)]*I[i+e]}}}m[g*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const cI={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=h(s.shape),a=n.data.get(s.dataId).values,i=Ra([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},hI={kernelName:Ze,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:x,padInfo:v,strideHeight:k,strideWidth:I,filterHeight:S,filterWidth:C,dilationHeight:T,dilationWidth:N,outShape:R}=Di(s.shape,r.shape,a,i,"NHWC",o),G=h(R),W=R.length,E=w(s.dtype,G);for(let e=0;e<f;++e)for(let t=0;t<y;++t){const n=t*k-v.top;for(let a=0;a<x;++a){const i=a*I-v.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const a=n+t*T;if(a>=0&&a<m)for(let n=0;n<C;++n){const h=i+n*N;if(h>=0&&h<g){const i=X([e,a,h,o],c,L(s.shape)),f=X([t,n,o],p,L(r.shape)),m=u[i]+d[f];m>l&&(l=m)}}}E[X([e,t,a,o],W,L(R))]=l}}}return{dataId:l.write(Qs(E,s.dtype),R,s.dtype),shape:R,dtype:s.dtype}}},dI={kernelName:De,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:l,dilations:u}=n,c=t,h=E(s.shape,c.data.get(s.dataId).values),d=E(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:T}=Di(s.shape,r.shape,i,l,"NHWC",u);o(a.rank===T.length,(()=>`Error in ${De}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const N=E(T,c.data.get(a.dataId).values),R=z(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let s=0;s<y;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*C;if(u>=0&&u<m){const r=h[e][s][u][a]+d[t][n][a];r>i&&(i=r,o=t,l=n)}}}R[o][l][a]+=N[e][t][s][a]}}}return{dataId:c.write(Qs(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pI={kernelName:Ke,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:l,dilations:u}=n,c=t,h=E(s.shape,c.data.get(s.dataId).values),d=E(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:T}=Di(s.shape,r.shape,i,l,"NHWC",u);o(a.rank===T.length,(()=>`Error in ${Ke}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const N=E(T,c.data.get(a.dataId).values),R=z(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let s=0;s<y;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*C;if(u>=0&&u<m){const r=h[e][s][u][a]+d[t][n][a];r>i&&(i=r,o=s,l=u)}}}R[e][o][l][a]+=N[e][t][s][a]}}}return{dataId:c.write(Qs(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function fI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;Yx(r,"sum"),o="bool"===r.dtype?ov({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):sv({inputs:{x:r},backend:n});const l=o.shape.length,u=y(a,o.shape),c=Jo(u,l);let d=u,p=o;null!=c&&(p=cw({inputs:{x:o},backend:n,attrs:{perm:c}}),d=jo(d.length,l)),Yo("sum",d,p.shape.length);const[f,m]=Uo(p.shape,d);let g=nv(n,f,Cr(p.dtype,"int32"));const b=h(m),x=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let e=0;e<x.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=v[t+e];x[e]=n}if(i){const e=g;g=tk({inputs:{x:g},backend:n,attrs:{shape:_o(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),g}const mI={kernelName:In,backendName:"cpu",kernelFunc:fI};const gI={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=Kh(r,a.length);Oh(i.length,l,a);const{path:u,steps:c}=Ah(o,l),h=c.length;let p=null,f=i.length;const m=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=Dh(f,l[t]);let r;Ph(e)?r=a[t]:(r=cw({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);d(r.shape,i)||(r=tk({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=sw({inputs:{a:r,b:p},backend:n}),m.push(p))}e<h-1&&(u[e]>=0&&(p=fI({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeIntermediateTensorInfo(e);return p}};const bI={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;Yx([s,r],"eluGrad");const a=new Float32Array(h(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},yI=bv(He,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+.3275911*n);return t*(1-((((1.061405429*s-1.453152027)*s+1.421413741)*s-.284496736)*s+.254829592)*s*Math.exp(-n*n))})),xI={kernelName:He,backendName:"cpu",kernelFunc:yI};function vI(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,l=r.shape.slice();let u=a;return a<0&&(o(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),l.splice(u,0,1),tk({inputs:{x:r},backend:n,attrs:{shape:l}})}const wI={kernelName:Ye,backendName:"cpu",kernelFunc:vI},kI=qx(((e,t)=>e/t)),II=uv(Oe,kI),SI={kernelName:Oe,backendName:"cpu",kernelFunc:II};function CI(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=h(u),d=v("float32",c),p=v("float32",c);for(let e=0;e<r;e++){const s=Nw({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=Nw({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=ev({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=TI(i,t,n),h=Rh(u,c);for(let t=0;t<a;t++){const n=Eh(h,t);d[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",p),g=ev({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function TI(e,t,n){const s=h(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(s)){const r=NI(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Js(s,"float32")),i=sv({inputs:{x:a},backend:n}),l=SI.kernelFunc({inputs:{a:e,b:a},backend:n}),u=SI.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=zh(r*s,t,n),l=Eh(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Mh(s,a,i,r)}return s}(Rh(a,i),s,t);return Gh(e)}}function NI(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=Rh(e,t),i=n/2,o=Lh(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=ev({inputs:{real:h,imag:d},backend:r}),f=Wh(a),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),x=r.makeTensorInfo(b,"float32",g),v=ev({inputs:{real:y,imag:x},backend:r}),w=NI(l,u,i,s,r),k=w.real,I=w.imag,S=[k.length],C=r.makeTensorInfo(S,"float32",k),T=r.makeTensorInfo(S,"float32",I),N=ev({inputs:{real:C,imag:T},backend:r}),R=NI(m,g,i,s,r),G=R.real,L=R.imag,W=[G.length],E=r.makeTensorInfo(W,"float32",G),M=r.makeTensorInfo(W,"float32",L),$=ev({inputs:{real:E,imag:M},backend:r}),z=$h(n,s),F=[z.real.length],X=r.makeTensorInfo(F,"float32",z.real),V=r.makeTensorInfo(F,"float32",z.imag),Z=ev({inputs:{real:X,imag:V},backend:r}),K=sw({inputs:{a:Z,b:$},backend:r}),D=pv({inputs:{a:N,b:K},backend:r}),O=Zw({inputs:{a:N,b:K},backend:r}),A=av({inputs:{input:D},backend:r}),P=av({inputs:{input:O},backend:r}),B=Kk({inputs:{input:D},backend:r}),H=Kk({inputs:{input:O},backend:r}),U=Ok({inputs:[A,P],backend:r,attrs:{axis:0}}),_=Ok({inputs:[B,H],backend:r,attrs:{axis:0}}),Y=r.data.get(U.dataId).values,J=r.data.get(_.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(_),{real:Y,imag:J}}const RI={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=h(s.shape),a=s.shape[s.shape.length-1],i=tk({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=CI(i,!1,n),l=tk({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function GI(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||N(r),o=w(i,h(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const LI={kernelName:je,backendName:"cpu",kernelFunc:GI};const WI={kernelName:qe,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=v(s.dtype,h(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];if(i>=0&&i<l){h=c[t+n+i*u+r]}a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},EI=qx(((e,t)=>Math.floor(e/t))),MI=uv(tt,EI,null,"int32"),$I={kernelName:tt,backendName:"cpu",kernelFunc:MI};const zI={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Pk({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=tk({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=pv({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=pv({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=tk({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=ek(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=ek(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const FI={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=iI({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=pv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ek(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const XI={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=h(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,d]=ti(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=function(e,t,n,s,r,a,i,o,l){const u=Ra([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,p.values)}};const VI={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:l}=s;Yx([r,a],"gatherV2");const u=y(i,r.shape)[0],c=n.data.get(a.dataId).values,d=r.shape[u];for(let e=0;e<c.length;++e){const t=c[e];o(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let p=l;null==l&&(p=0);const f=h(a.shape),m=od(r,a,u,p),g=tk({inputs:{x:r},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),b=tk({inputs:{x:a},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),x=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],v=n.bufferSync(b),w=function(e,t,n){const s=Ra(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}(n.bufferSync(g),v,x);return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),n.makeTensorInfo(m.outputShape,w.dtype,w.values)}};const ZI={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=h(s.shape),a=s.shape[s.shape.length-1],i=tk({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=CI(i,!0,n),l=tk({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},KI=bv(ct,(e=>Number.isFinite(e)?1:0),"bool"),DI={kernelName:ct,backendName:"cpu",kernelFunc:KI},OI=bv(ht,(e=>Math.abs(e)===1/0?1:0),"bool"),AI={kernelName:ht,backendName:"cpu",kernelFunc:OI},PI=bv(dt,(e=>Number.isNaN(e)?1:0),"bool"),BI={kernelName:dt,backendName:"cpu",kernelFunc:PI};const HI={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=function(e,t,n){const s=(t-e)/(n-1),r=$(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},UI=bv(yt,(e=>Math.log1p(e))),_I={kernelName:yt,backendName:"cpu",kernelFunc:UI},YI=qx(((e,t)=>e&&t)),JI=uv(xt,YI,null,"bool"),QI={kernelName:xt,backendName:"cpu",kernelFunc:JI},jI=bv(vt,(e=>e?0:1),"bool"),qI={kernelName:vt,backendName:"cpu",kernelFunc:jI},eS=qx(((e,t)=>e||t)),tS=uv(wt,eS,null,"bool"),nS={kernelName:wt,backendName:"cpu",kernelFunc:tS};const sS={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;Yx(r,"LRN");const u=r.shape[3],c=u-1,d=n.data.get(r.dataId).values,p=h(r.shape),f=new Float32Array(p);function m(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=d[n];r+=e*e}return r}for(let e=0;e<p;e++){const t=m(e),n=d[e]*Math.pow(i+o*t,-l);f[e]=n}return n.makeTensorInfo(r.shape,r.dtype,f)}};const rS={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;Yx(i,"LRNGrad");const d=h(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,g=n.data.get(a.dataId).values,b=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),s=e-t+Math.min(p,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(m[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*m[t]*g[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=f[e],b[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,b)}};function aS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=y(a,l);let d=c;const p=Jo(d,u);let f=o.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=uw(f,l,r.dtype,p,e),d=jo(d.length,u),l=e}Yx(r,"max"),Yo("max",d,u);const[m,g]=Uo(l,d),b=function(e,t,n,s){const r=v(s,h(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}(f,h(g),m,r.dtype),x=o.write(b,m,r.dtype);let w=m;return i&&(w=_o(m,c)),{dataId:x,shape:w,dtype:r.dtype}}const iS={kernelName:St,backendName:"cpu",kernelFunc:aS};const oS={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Yx(r,"maxPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=s;o(ji(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=Oi(r.shape,a,i,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))h=sv({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=L(r.shape),s=Tk(e,r.shape,r.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,s.values)}return h}};const lS={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Yx(r,"maxPool3d");const c=Ai(r.shape,a,i,1,o,l,u),h=Rk(n.data.get(r.dataId).values,r.shape,r.dtype,L(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const uS={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Yx([r,a],"maxPool3DGrad");const c=Ai(a.shape,i,o,1,l,u),h=function(e,t){const n=Ra(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*s-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+y);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let s=d;s<w;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(m,t,s,a,g);o>=S&&(S=o,C=n*c*h+r*c+i)}}}n.set(C,m,b,s,r,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Ra(a.shape,"float32"),C=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-w,i=s-I,o=r-k;let l=0;for(let n=0;n<y;n+=m){const s=(a+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*v-1-h.get(e,s,a,u,t)===n*x*v+r*v+i?1:0;if(0===d)continue;l+=C.get(e,s,a,u,t)*d}}}S.set(l,e,n,s,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const cS={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;Yx([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Oi(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Ra(d.outShape,o.dtype,Nk(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ra(o.shape,"float32"),S=n.data.get(r.dataId).values,C=Ra(r.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-k,a=s-w;let i=0;for(let n=0;n<x;n+=b){const s=(r+n)/m;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=y){const o=(a+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,s,o,t)===n*v+r?1:0;if(0===l)continue;i+=C.get(e,s,o,t)*l}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const hS={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Yx(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Oi(s.shape,r,a,[1,1],i),[h,d]=function(e,t,n,s,r){const a=Tk(e,0,n,L(t),r,"max"),i=Nk(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const dS={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=y(a,r.shape),l=h(Uo(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const d=ov({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(d);const p=II({inputs:{a:d,b:c},backend:n});u.push(p);const f=fI({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const pS={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Yx(r,"min");const o=y(a,r.shape);let l=o;const u=Jo(l,r.shape.length);let c=r;null!=u&&(c=cw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=jo(l.length,r.shape.length)),Yo("min",l,c.shape.length);const[d,p]=Uo(c.shape,l),f=h(p),m=$(h(d),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];(Number.isNaN(s)||s<n)&&(n=s)}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(d,c.dtype,m);if(i){const e=tk({inputs:{x:b},backend:n,attrs:{shape:_o(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const fS={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;Yx(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,f=L(r.shape),m=h(o),g=o.length,b=L(o),y=v(r.dtype,m);for(let e=0;e<m;e++){let t=V(e,g,b);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=X(t,p,f);y[e]=d[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},mS=qx(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),gS=uv(zt,mS),bS={kernelName:zt,backendName:"cpu",kernelFunc:gS};function yS(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=y([o],r.shape),u=aS({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=_o(u.shape,l),h=tk({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Zw({inputs:{a:r,b:h},backend:n}),p=Tv({inputs:{x:d},backend:n}),f=fI({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=tk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=II({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const xS={kernelName:Tn,backendName:"cpu",kernelFunc:yS};const vS={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;Yx(r,"multinomial");const l=o?r:yS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=n.data.get(l.dataId).values,p=[u,a],f=$(h(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const s=mu.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();f[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){f[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}},wS=Ic;const kS={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;Yx(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=wS(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},IS=Sc;const SS={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;Yx(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=IS(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},CS=Cc;const TS={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;Yx(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=CS(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};const NS={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s;Yx(r,"oneHot");const u=h(r.shape),c=new Float32Array(u*i);c.fill(l);const d=n.data.get(r.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<i&&(c[e*i+d[e]]=o);return n.makeTensorInfo([...r.shape,i],a,c)}};function RS(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=av({inputs:{input:s},backend:n}),t=RS({inputs:{x:e},backend:n}),r=Kk({inputs:{input:s},backend:n}),a=RS({inputs:{x:r},backend:n}),i=ev({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return GI({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const GS={kernelName:_n,backendName:"cpu",kernelFunc:RS};const LS={kernelName:At,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=av({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=Kk({inputs:{input:r},backend:s}),i=RS({inputs:{x:a},backend:s}),o=ev({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return GI({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function WS(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return vI({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{l(a,e.shape,"All tensors passed to stack must have matching shapes"),o(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Ok({inputs:t.map((e=>{const t=vI({inputs:{input:e},backend:n,attrs:{dim:r}});return u.push(t),t})),backend:n,attrs:{axis:r}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const ES={kernelName:Bt,backendName:"cpu",kernelFunc:WS};const MS={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;Yx(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=h(r.shape),d=r.shape.length,p=L(r.shape),f=h(o),m=o.length,g=L(o),b=v(r.dtype,f);0!==i&&b.fill(i);for(let e=0;e<c;e++){b[X(V(e,d,p).map(((e,t)=>e+l[t])),m,g)]=u[e]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},$S=qx(((e,t)=>Math.pow(e,t))),zS=uv(Ut,$S),FS={kernelName:Ut,backendName:"cpu",kernelFunc:zS};const XS={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,o=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,[h,d,p]=gw(o,l,u,a.shape,a.dtype,c,i.shape),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(p,a.dtype,d);return f.concat([m])}};const VS={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=function(e,t,n,s,r,a,i,o,l,u){return new yw(e,t,n,s,r,a,i,o,l,u).compute()}(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}};const ZS={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=function(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return $(0,s);const r=$(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},KS=bv(en,(e=>1/e)),DS={kernelName:en,backendName:"cpu",kernelFunc:KS};const OS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;Yx(r,"resizeBilinear");const l=L(r.shape),[u,c]=o,[d,p,f,m]=r.shape,g=n.data.get(r.dataId).values,b=new Float32Array(h([d,u,c,m])),y=[a&&u>1?p-1:p,a&&c>1?f-1:f],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let v=0;const w=y[0]/x[0],k=y[1]/x[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(f-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],p=u+a*l[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*s,i=a+(n+(g[p+e]-n)*s-a)*r;b[v++]=i}}}return n.makeTensorInfo([d,u,c,m],"float32",b)}};const AS={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;Yx([a,r],"resizeBilinearGrad");const o=L(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=a+n*o[2],m=a+s*o[2],g=i+n*o[2],b=i+s*o[2],w=d*u,k=d*r,I=l*u,S=l*r;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}};const PS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;Yx(r,"resizeNearestNeighbor");const l=L(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}};const BS={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;Yx([a,r],"resizeNearestNeighborGrad");const o=L(r.shape),l=L(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*w),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*l[2],a=t*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const HS={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Yx(r,"reverse");const i=r.shape.length,o=y(a,r.shape);if(0===i)return sv({inputs:{x:r},backend:n});const l=new dr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},US={kernelName:Qn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=v(s.dtype,h(s.shape)),[u,c,d,p]=s.shape,[f,m]=fh(i,c,d),g=Math.sin(r),b=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*d*c*p;for(let e=0;e<c;e++){const n=e*(d*p);for(let s=0;s<d;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,e,s,i],h=o[2],x=o[1];let v=(h-f)*b-(x-m)*g,w=(h-f)*g+(x-m)*b;v=Math.round(v+f),w=Math.round(w+m);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<d&&w>=0&&w<c){k=y[t+w*(d*p)+v*p+i]}l[t+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},_S=bv(cn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),YS={kernelName:cn,backendName:"cpu",kernelFunc:_S};const JS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=si(0,r,i),d=Sw(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function QS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function jS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const qS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=w("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===a?QS(n,t[e+l]):jS(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const eC={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Yx([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Cr(r.dtype,a.dtype),d=$(h(r.shape),c);let p=0;const f=0===i||i>1||1===r.shape.length?1:h(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<f;t++)1===o[e]?d[p++]=l[e]:d[p++]=u[e];return n.makeTensorInfo(r.shape,c,d)}},tC=bv(mn,(e=>e>=0?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1))),nC={kernelName:mn,backendName:"cpu",kernelFunc:tC},sC=bv(xn,(e=>e<0?-1:e>0?1:0)),rC={kernelName:xn,backendName:"cpu",kernelFunc:sC},aC=bv(bn,(e=>Math.sin(e))),iC={kernelName:bn,backendName:"cpu",kernelFunc:aC},oC=bv(yn,(e=>Math.sinh(e))),lC={kernelName:yn,backendName:"cpu",kernelFunc:oC},uC=Math.log(1.1920928955078125e-7)+2,cC=bv(wn,(e=>{const t=e>-uC,n=e<uC,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),hC={kernelName:wn,backendName:"cpu",kernelFunc:cC};const dC={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;Yx([r],"spaceToBatchND");const o=h(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=MS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=mh(u.shape,a,o,!1),d=gh(c.length,a.length,!1),p=bh(u.shape,a,o,!1),f=tk({inputs:{x:u},backend:n,attrs:{shape:c}}),m=cw({inputs:{x:f},backend:n,attrs:{perm:d}}),g=tk({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const pC={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=function(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Uh(o));return[w(n,0),[0,h],w(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(_h(t,n));if(n>=l)throw new Error(Yh(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=w(n,t*h),d=w(r,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};const fC={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,d]=function(e,t,n,s,r){const a=h(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(Jh(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Qh(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(qh(s,l));l[c]=e}if(h(l)!==a)throw new Error(ed(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=w(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<d;++s)n+=e[t*d+s]*p[s];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],l]}(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};const mC={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Gw(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}};const gC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Gw(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}};const bC={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=si(0,r,o),p=!1,f=n.bufferSync(r);let m;switch(a.dtype){case"bool":m=Sw(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":m=Sw(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"int32":m=Sw(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":m=Sw(f,n.bufferSync(a),o,d,c,u,l,h,er(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const yC={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=y(i,r.shape)[0],l=Hh(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=Nw({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},xC={kernelName:Mn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;Yx(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},vC=bv(Yn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),wC={kernelName:Yn,backendName:"cpu",kernelFunc:vC};const kC={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:l,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s;Yx(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:v,strides:w}=xi(r.shape,a,i,l,u,c,h,d,p);let k;if(g)k=tk({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||y){o(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=oi(x,v,w),t=Nw({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});k=tk({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=function(e,t,n,s){const r=Ra(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}(f,n.bufferSync(r),w,x);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};const IC={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=function(e,t,n,s,r,a,i,o){return new zw(n,s,r,a,i,o).compute(e,t)}(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const SC={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=function(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;Fw(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=w("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const CC={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=function(e,t){const n=w("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Ys(e[s]).modulo(t).getLowBitsUnsigned();return n}(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},TC=bv(Zn,(e=>Math.tan(e))),NC={kernelName:Zn,backendName:"cpu",kernelFunc:TC},RC=bv(Kn,(e=>Math.tanh(e)));const GC={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Yx(r,"tile");const i=function(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Ra(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};const LC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;Yx(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=function(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=v(n,i*s),u=v("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(Ow(i,s),i=i.slice(0,s)),r&&i.sort(Dw);const c=t*s,h=l.subarray(c,c+s),d=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[Ra(c,n,l),Ra(c,"int32",u)]}(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const WC={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,d,p,f]=r.shape,[m,g]=null!=u?u:[d,p],b=[c,m,g,f],y=L(r.shape),x=y[0],w=y[1],k=y[2],I=L(b),S=I[0],C=I[1],T=I[2],N=v(r.dtype,h(b));N.fill(l);const R=s.data.get(r.dataId).values,G=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?G:G.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let s=0;s<g;++s)for(let r=0;r<f;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,h=(t[3]*s+t[4]*n+t[5])/u,f=EC(c,p,o),m=EC(h,d,o);switch(i){case"nearest":a=$C(R,d,p,x,w,k,e,m,f,r,l);break;case"bilinear":a=zC(R,d,p,x,w,k,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*S+n*C+s*T+r]=a}return s.makeTensorInfo(b,r.dtype,N)}return{dataId:s.write(N,b,r.dtype),shape:r.shape,dtype:r.dtype}}};function EC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function MC(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function $C(e,t,n,s,r,a,i,o,l,u,c){return MC(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function zC(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*MC(e,t,n,s,r,a,i,h,d,u,c)+(l-d)*MC(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*MC(e,t,n,s,r,a,i,p,d,u,c)+(l-d)*MC(e,t,n,s,r,a,i,p,f,u,c))}const FC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Yx(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=function(e,t,n,s){const r=y(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new dr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new dr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}};const XC={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=Nw({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=tk({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}};const VC={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;Yx(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=vI({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Js(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=Iv({inputs:{a:s,b:c},backend:n}),i=ov({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=sw({inputs:{a:i,b:r},backend:n}),h=fI({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=WS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ZC=[ak,jx,ok,uk,fv,ck,hk,dk,pk,fk,gk,yk,vk,Ik,Ck,Gk,Lk,Wk,Ek,rk,Mk,$k,zk,Fk,lv,wv,Vk,tv,Zk,Ak,Bk,Hk,Uk,_k,Yk,Jk,jk,eI,tI,nI,sI,rI,aI,oI,lI,uI,cI,hI,dI,pI,gI,Pw,bI,Sv,xI,Nv,wI,Lv,RI,LI,WI,Mv,$I,zI,FI,XI,VI,Fv,Zv,rv,ZI,Dk,DI,AI,BI,Hw,Ov,Bv,HI,_v,_I,QI,qI,nS,sS,rS,iS,Qv,oS,lS,uS,cS,hS,dS,pS,ew,fS,bS,vS,rw,aw,kS,SS,TS,lw,NS,LS,ES,MS,FS,Yw,dw,XS,VS,ZS,iv,SI,DS,Qw,qw,nk,OS,AS,PS,BS,HS,US,YS,Iw,JS,qS,eC,nC,Tw,rC,iC,lC,Rw,xS,hC,dC,pC,fC,mC,gC,bC,yC,Ww,xC,$w,wC,kC,IC,SC,CC,Kw,mI,NC,{kernelName:Kn,backendName:"cpu",kernelFunc:RC},GC,LC,WC,hw,FC,XC,VC,GS];for(const e of ZC)os(e);const KC={},DC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function OC(e,t){if(!(e in KC)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(typeof OffscreenCanvas<"u"&&2===e)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete KC[e]}),!1),A().getBool("SOFTWARE_WEBGL_ENABLED")&&(DC.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",DC)||n.getContext("experimental-webgl",DC):n.getContext("webgl2",DC)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;KC[e]=n}const n=KC[e];return null==n||n.isContextLost()?(delete KC[e],OC(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),KC[e])}var AC,PC,BC;function HC(e,t){return[t,e]}function UC(e){const t=h(e);return f(Math.ceil(t/4))}function _C(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function YC(e,t){const n=e;let s,r,a,i,o,l,u,c,h,d;return 2===A().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function JC(e,t){const n=t();return A().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(AC||(AC={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(PC||(PC={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(BC||(BC={}));function QC(e){return!!(A().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function jC(e,t){return oT(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const qC=/ERROR: [0-9]+:([0-9]+):/g;function eT(e,t){const n=qC.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>m((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${m(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function tT(e,t){if(JC(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function nT(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(JC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),JC(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),JC(e,(()=>e.enableVertexAttribArray(o))),!0)}function sT(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}})(e,n),JC(e,(()=>e.activeTexture(e.TEXTURE0+n))),JC(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function rT(e,t,n){JC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),JC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function aT(e,t){JC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),JC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function iT(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function oT(e,t,n){const s=JC(e,(()=>t()));if(null==s)throw new Error(n);return s}function lT(e,t=2){return h(e.slice(0,e.length-t))}function uT(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cT(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[lT(e),...uT(e)]),t}function hT(e){return e%2==0}function dT(e,t){if(d(e=e.slice(-2),t=t.slice(-2))||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||hT(n)&&hT(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&hT(e[0])&&hT(t[0])}let pT,fT;function mT(e,t){return null!=e.getExtension(t)}function gT(e){try{if(null!=OC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function bT(e){if(0===e)return!1;const t=OC(e);if(1!==e){if(mT(t,"EXT_color_buffer_float"))return yT(t);const e="EXT_color_buffer_half_float";if(mT(t,e)){const n=t.getExtension(e);return function(e,t){const n=YC(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!mT(t,"OES_texture_float")||!mT(t,"WEBGL_color_buffer_float"))&&yT(t)}function yT(e){const t=YC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function xT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const vT=A();function wT(){let e,t,n,s,r,a,i,o,l,u;return 2===A().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=A().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function kT(e,t,n="index"){const s=L(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function IT(e,t,n="index"){const s=L(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function ST(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${s[r]}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}function CT(e){const t=L(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}vT.registerFlag("HAS_WEBGL",(()=>vT.getNumber("WEBGL_VERSION")>0)),vT.registerFlag("WEBGL_VERSION",(()=>gT(2)?2:gT(1)?1:0)),vT.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),vT.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===vT.get("WEBGL_VERSION"))),vT.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),vT.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),vT.registerFlag("WEBGL_PACK",(()=>vT.getBool("HAS_WEBGL"))),vT.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_CLIP",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_PACK_REDUCE",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_LAZILY_UNPACK",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_CONV_IM2COL",(()=>vT.getBool("WEBGL_PACK"))),vT.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==pT){const t=OC(e);pT=t.getParameter(t.MAX_TEXTURE_SIZE)}return pT}(vT.getNumber("WEBGL_VERSION")))),vT.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==fT){const t=OC(e);fT=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,fT)}(vT.getNumber("WEBGL_VERSION")))),vT.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=vT.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=OC(e);return t=mT(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:mT(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),vT.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>vT.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Fr())),vT.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=OC(e);if(1===e){if(!mT(t,"OES_texture_float"))return!1}else if(!mT(t,"EXT_color_buffer_float"))return!1;return yT(t)}(vT.getNumber("WEBGL_VERSION")))),vT.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!vT.getBool("WEBGL_FORCE_F16_TEXTURES")&&vT.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),vT.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>bT(vT.getNumber("WEBGL_VERSION")))),vT.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>function(e){return 2===e&&null!=OC(e).fenceSync}(vT.getNumber("WEBGL_VERSION")))),vT.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>vT.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),vT.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),vT.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Fr()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),vT.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),vT.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),vT.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),vT.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),vT.registerFlag("WEBGL_EXP_CONV",(()=>!1)),vT.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>vT.getBool("IS_TEST"))),vT.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),vT.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),vT.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));const TT="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:NT}=hd;function RT(e,t,n){const s=[];if(e.forEach((e=>{const t=h(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ZT(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?LT(e,s):GT(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=NT(e.shapeInfo.logicalShape,t.logicalShape),l=VT(i),u=i-a;let c;const d=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+u]}`)).join(", ");let f="return outputValue;";const m=1===h(e.shapeInfo.logicalShape),g=1===h(t.logicalShape);if(1!==a||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?f="return vec4(outputValue.x);":o.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&d(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=VT(l),c=NT(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const f=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${f[e+h]} = 0;`)).join("\n");let m="";return m=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${m});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=wT(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${WT}\n    ${ET}\n    ${MT}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return zT();case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(d(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return zT();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return d(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${IT(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=kT(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${IT(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=kT(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=kT(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=kT(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(p+=$T),[p,l,c,r,u,a,n.userCode].join("\n")}function GT(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=FT(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${XT(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=FT(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&d(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=x(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${GT(KT(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${DT(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${XT(e)}\n      }\n    `;const u=a[0],c=a[1],h=FT(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=x(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${GT(KT(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${DT(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${XT(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=FT(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=x(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${GT(KT(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${DT(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${XT(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=FT(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=x(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${GT(KT(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${DT(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${XT(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=FT(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=x(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${GT(KT(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${DT(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${XT(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=FT(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function LT(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=wT();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=wT();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=wT();if(null!=a&&d(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${LT(KT(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${DT(a,s)});\n        }\n      `}const o=wT();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=wT();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const WT="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ET="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MT="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$T="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function zT(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function FT(e){return`offset${e}`}function XT(e){const t=e.name,n=h(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function VT(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ZT(e,t,n){const{newShape:s,keptDims:r}=x(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!d(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function KT(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function DT(e,t){return t.map((t=>e[t])).join(", ")}function OT(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=RT(r,i,t),l=function(e,t){const n=oT(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(JC(e,(()=>e.shaderSource(n,t))),JC(e,(()=>e.compileShader(n))),A().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw eT(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return A().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},AT(e,t,u))}function AT(e,t,n){const s={},r={},a={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===A().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];s[o]=e.getUniformLocation(n,o,d),s[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(r[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,s)=>{i[s]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function PT(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!d(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!d(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function BT(e){return A().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class HT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=AC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=wT();this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?IT(["r","c","d"],e):kT(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class UT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=AC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=wT();this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?IT(["r","c","d"],e):kT(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class _T{constructor(e){this.variableNames=["A"],this.outTexUsage=PC.DOWNLOAD;const t=wT();this.outputShape=e,this.userCode=`\n      ${TT}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class YT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=PC.DOWNLOAD;const t=wT();this.outputShape=e,this.userCode=`\n      ${TT}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class JT{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=wT();this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":CT(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class QT{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=wT();this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":CT(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function jT(e){const t=wT();return function(e,t){const n=oT(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(JC(e,(()=>e.shaderSource(n,t))),JC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function qT(e){return function(e,t){const n=oT(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return JC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),JC(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function eN(e){return function(e,t){const n=oT(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return JC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),JC(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function tN(e,t,n,s,r,a){!function(e,t){const n=A().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return oT(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return JC(e,(()=>e.bindTexture(o,i))),JC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),JC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),JC(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),JC(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===A().getNumber("WEBGL_VERSION")?JC(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):JC(e,(()=>e.texStorage2D(o,1,s,t,n))),JC(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function nN(e){return e.internalFormatFloat}function sN(e){return e.internalFormatHalfFloat}function rN(e){return e.downloadTextureFormat}function aN(e){return e.internalFormatPackedFloat}function iN(e){return e.internalFormatPackedHalfFloat}function oN(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=_C(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class lN{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=A().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){KC[e]=t}(t,e)):this.gl=OC(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===A().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=jC(this.gl,e),mT(this.gl,t))this.textureHalfFloatExtension=jC(this.gl,t);else if(A().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),mT(this.gl,s))this.colorBufferHalfFloatExtension=jC(this.gl,s);else if(A().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",mT(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!mT(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=qT(this.gl),this.indexBuffer=eN(this.gl),this.framebuffer=function(e){return oT(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=YC(this.gl,this.textureHalfFloatExtension)}get debug(){return A().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;JC(e,(()=>e.finish())),JC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),JC(e,(()=>e.deleteFramebuffer(this.framebuffer))),JC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),JC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),JC(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=HC(t,n);return tN(e,r,a,nN(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=HC(t,n);return tN(e,r,a,sN(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=HC(t,n);return tN(e,r,a,rN(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){JC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===A().getNumber("WEBGL_VERSION")?JC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):JC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===A().getNumber("WEBGL_VERSION")?JC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):JC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),JC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;JC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===A().getNumber("WEBGL_VERSION")?JC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):JC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),JC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=_C(t,n);return tN(e,r,a,iN(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=_C(t,n);return tN(e,r,a,aN(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(aT(this.gl,this.framebuffer),this.outputTexture=null),JC(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=HC(t,n),i=new Uint8Array(function(e,t){return e*4}(t*n));return JC(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return oN(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();JC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return JC(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),JC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),JC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(A().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return JC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=jT(t));const n=function(e){return oT(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return JC(t,(()=>t.attachShader(n,this.vertexShader))),JC(t,(()=>t.attachShader(n,e))),function(e,t){if(JC(e,(()=>e.linkProgram(t))),!A().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&tT(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return JC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),nT(e,t,"clipSpacePos",n,3,20,0)&&nT(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&JC(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&tT(this.gl,this.program),JC(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return oT(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),JC(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,s){JC(e,(()=>sT(e,t,s))),JC(e,(()=>e.uniform1i(n,s)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=_C(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&tT(this.gl,this.program),iT(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),JC(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),JC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=jC(this.gl,2===A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await g((()=>this.disposed||this.isQueryAvailable(e,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in A().platform&&(n=A().platform.setTimeoutCustom.bind(A().platform)),g((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),rT(this.gl,e,this.framebuffer),this.debug&&iT(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(rT(this.gl,this.outputTexture,this.framebuffer),this.debug&&iT(this.gl)):aT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;rT(s,e,this.framebuffer),this.debug&&iT(s),this.outputTexture=e,JC(s,(()=>s.viewport(0,0,t,n))),JC(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),JC(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function uN(e){return(t,n,s,r,a)=>{const i=ja(t,n),o=i.length,l=L(i),u=v(a,h(i)),c=t.length,d=n.length,p=L(t),f=L(n),m=Ja(t,i),g=Ja(n,i);if(m.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=V(t,o,l),a=n.slice(-c);m.forEach((e=>a[e]=0));const i=X(a,c,p),h=n.slice(-d);g.forEach((e=>h[e]=0));const b=X(h,d,f);u[t]=e(s[i],r[b])}return[u,i]}}const cN=uN(((e,t)=>e+t));function hN(e){return(t,n,s)=>{const r=v(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const dN=hN((e=>Math.ceil(e)));const pN=uN(((e,t)=>e===t?1:0)),fN=hN((e=>Math.exp(e))),mN=hN((e=>Math.expm1(e))),gN=hN((e=>Math.floor(e)));const bN=uN(((e,t)=>e>t?1:0)),yN=uN(((e,t)=>e>=t?1:0)),xN=uN(((e,t)=>e<t?1:0)),vN=uN(((e,t)=>e<=t?1:0));const wN=hN((e=>Math.log(e)));const kN=uN(((e,t)=>Math.max(e,t))),IN=uN(((e,t)=>Math.min(e,t))),SN=uN(((e,t)=>e*t));const CN=uN(((e,t)=>e!==t?1:0));function TN(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let s=0;s<e.length;++s){let i=e[s],l=e[s]+1;for(let e=0;e<n.length;++e){const s=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-s[i];for(let e=i;e<l;++e)o[r].push(s[e+1]+t)}i=s[i],l=s[l]}l!==i&&(r.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:r,numValues:a}}function NN(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function RN(e,t,n,s,r){const a=t.slice();a[0]=r;const i=w(n,h(a)),o=e.length;return function(e,t,n,s,r,a){const i=NN(t,2)[1],o=NN(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<s;++t)r[l*o+t]=e[n*i+t];++l}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}var GN=oh;class LN{constructor(e,t,n,s,r,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=uh(u),this.raggedRank=ch(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===GN.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===GN.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case GN.VALUE_ROWIDS:return LN.getMaxWidthValueRowID(t);case GN.ROW_SPLITS:return LN.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${GN[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return EN(e,n)}calculateOutputSize(e){const t=this.valuesShape;hh(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=lh(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let e=0;e<s;++e,a+=t)r.push(a);for(let t=s;t<e;++t)r.push(-1);return o(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case GN.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case GN.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${GN[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case GN.FIRST_DIM_SIZE:return e[0];case GN.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case GN.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${GN[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=EN(t,!1),r=w(this.valuesDType,h(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=h(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Da((()=>{const t=to(u,e);u=go(t,i).dataSync()}))}let c=0,d=0,p=0;for(let e=0;e<=l;++e){let s=e<l?t[e]:-1;if(s!==p){if(d<p){const e=r.subarray(c*o);WN(a.subarray(d*o),e,(p-d)*o)}if(e>=l){const e=n.length;s=Math.floor(e/o)}if(s>p)if(1===this.defaultValue.length)a.subarray(p*o,s*o).fill(this.defaultValue[0]),p=s;else for(;s>p;){WN(a.slice(p*o),u,o),++p}s<0?(c=e+1,d=p):(c=e,d=p,p=d+1)}else++p}}}function WN(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function EN(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}const MN=hN((e=>1/Math.sqrt(e)));const $N=hN((e=>1/(1+Math.exp(-e))));const zN=hN((e=>Math.sqrt(e))),FN=uN(((e,t)=>{const n=e-t;return n*n}));class XN{constructor(e,t,n,s,r,a){this.separator=qs(e),this.nGramWidths=t,this.leftPad=qs(n),this.rightPad=qs(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=w("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function VN(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);(!n||0!==t.length)&&s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void((!n||0!==e.length)&&s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);(!n||0!==t.length)&&s.push(t),r=a+1}}const ZN=uN(((e,t)=>e-t));const KN=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function DN(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);DN(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,o=s;for(i(e,n,t),KN(e[s],r)>0&&i(e,n,s);a<o;){for(i(e,a,o),a++,o--;KN(e[a],r)<0;)a+=1;for(;KN(e[o],r)>0;)o-=1}0===KN(e[n],r)?i(e,n,o):(o+=1,i(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}const ON=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t},addImpl:cN,bincountImpl:function(e,t,n,s,r){const a=h(s),i=$(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i},bincountReduceImpl:function(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Ra([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i},castImpl:function(e,t,n,s){if("int32"===s){return[t,"int32",Int32Array.from(e)]}if("bool"===s){const s=Qs([0],n),[r,a]=uN(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)},ceilImpl:dN,concatImpl:function(e,t,n,s){const r=w(n,h(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=h(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?ud(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r},equalImpl:pN,expImpl:fN,expm1Impl:mN,floorImpl:gN,gatherNdImpl:function(e,t,n,s,r,a,i,o,l){const u=Ra([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u},gatherV2Impl:function(e,t,n){const s=Ra(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s},greaterImpl:bN,greaterEqualImpl:yN,lessImpl:xN,lessEqualImpl:vN,linSpaceImpl:function(e,t,n){const s=(t-e)/(n-1),r=$(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r},logImpl:wN,maxImpl:function(e,t,n,s){const r=v(s,h(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r},maximumImpl:kN,minimumImpl:IN,multiplyImpl:SN,negImpl:function(e,t,n){const s=Js(-1,n);return SN([],t,s,e,n)},notEqualImpl:CN,prodImpl:function(e,t,n,s){const[r,a]=Uo(e,s),i=Cr(t,"int32"),o=$(h(r),i),l=h(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}},raggedGatherImpl:function(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=V(s,t.length,L(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=TN(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const s=w("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(u),p=RN(n,s,r,c,h);return[d,p[0],p[1]]},raggedTensorToTensorImpl:function(e,t,n,s,r,a,i,o,l,u){return new LN(e,t,n,s,r,a,i,o,l,u).compute()},rangeImpl:function(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return $(0,s);const r=$(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r},rsqrtImpl:MN,scatterImpl:function(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Ra(n,t.dtype);const p=Ra(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p},sigmoidImpl:$N,sliceImpl:function(e,t,n,s,r){const a=gi(s,t,n),i=h(n),o=L(s);if(a){const n=bi(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Ra(s,r,"string"===r?ud(e):e),u=Ra(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?cd(u.values):u.values},sparseFillEmptyRowsImpl:function(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Uh(o));return[w(n,0),[0,h],w(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(_h(t,n));if(n>=l)throw new Error(Yh(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=w(n,t*h),d=w(r,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}},sparseReshapeImpl:function(e,t,n,s,r){const a=h(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(Jh(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Qh(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(qh(s,l));l[c]=e}if(h(l)!==a)throw new Error(ed(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=w(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<d;++s)n+=e[t*d+s]*p[s];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],l]},sparseSegmentReductionImpl:function(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=w(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(sd(g,c));g>m&&d.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(rd(t,s[t],l[0]));for(let t=0;t<u;t++)d[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]},sqrtImpl:zN,squaredDifferenceImpl:FN,stridedSliceImpl:function(e,t,n,s){const r=Ra(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r},stringNGramsImpl:function(e,t,n,s,r,a,i,o){return new XN(n,s,r,a,i,o).compute(e,t)},stringSplitImpl:function(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;VN(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=w("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]},stringToHashBucketFastImpl:function(e,t){const n=w("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Ys(e[s]).modulo(t).getLowBitsUnsigned();return n},subImpl:ZN,tileImpl:function(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Ra(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s},topKImpl:function(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=v(n,i*s),u=v("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(DN(i,s),i=i.slice(0,s)),r&&i.sort(KN);const c=t*s,h=l.subarray(c,c+s),d=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[Ra(c,n,l),Ra(c,"int32",u)]},transposeImpl:function(e,t,n,s,r){const a=t.length,i=h(t),o=L(t),l=L(r),u=v(n,h(r));for(let t=0;t<i;++t){const n=V(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[X(r,a,l)]=e[t]}return u},uniqueImpl:function(e,t,n,s){const r=y(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new dr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new dr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}},Symbol.toStringTag,{value:"Module"})),{addImpl:AN,bincountImpl:PN,bincountReduceImpl:BN,castImpl:HN,ceilImpl:UN,concatImpl:_N,equalImpl:YN,expImpl:JN,expm1Impl:QN,floorImpl:jN,gatherNdImpl:qN,gatherV2Impl:eR,greaterImpl:tR,greaterEqualImpl:nR,lessImpl:sR,lessEqualImpl:rR,linSpaceImpl:aR,logImpl:iR,maxImpl:oR,maximumImpl:lR,minimumImpl:uR,multiplyImpl:cR,negImpl:hR,notEqualImpl:dR,prodImpl:pR,raggedGatherImpl:fR,raggedTensorToTensorImpl:mR,rangeImpl:gR,rsqrtImpl:bR,scatterImpl:yR,sigmoidImpl:xR,simpleAbsImpl:vR,sliceImpl:wR,sparseFillEmptyRowsImpl:kR,sparseReshapeImpl:IR,sparseSegmentReductionImpl:SR,sqrtImpl:CR,stridedSliceImpl:TR,stringNGramsImpl:NR,stringSplitImpl:RR,stringToHashBucketFastImpl:GR,subImpl:LR,tileImpl:WR,topKImpl:ER,transposeImpl:MR,uniqueImpl:$R}=ON;function zR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function FR(e,t){return 1===t?[e]:zR(e,t)}class XR{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=BT(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=FR("rc",this.rank),t=VT(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class VR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?ST(["r","c","d"],"inputShape"):kT(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":CT(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ZR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=DR(t,n),r=OR(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=KR(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===BC.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===BC.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===BC.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===BC.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===BC.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=DR(n,s),a=OR(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=KR(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=A().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function KR(e,t,n,s,r){const a=function(e,t){switch(e){case BC.PACKED_2X2_FLOAT32:return aN(t);case BC.PACKED_2X2_FLOAT16:return iN(t);case BC.UNPACKED_FLOAT32:return nN(t);case BC.UNPACKED_FLOAT16:return sN(t);case BC.PACKED_4X1_UNSIGNED_BYTE:return rN(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=_C(e[0],e[1]);i=t*n}else{const[t,n]=HC(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function DR(e,t){if(e===PC.UPLOAD)return BC.PACKED_2X2_FLOAT32;if(e===PC.RENDER||null==e)return function(e){return A().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?BC.PACKED_2X2_FLOAT32:BC.UNPACKED_FLOAT32:e?BC.PACKED_2X2_FLOAT16:BC.UNPACKED_FLOAT16}(t);if(e===PC.DOWNLOAD||e===PC.PIXELS)return BC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function OR(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class AR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const PR="if (isnan(x)) return x;",BR="return x;",HR="return abs(x);",UR="return (x >= 0.0) ? x : (exp(x) - 1.0);",_R=PR+"\n  return (x < 0.0) ? 0.0 : x;\n",YR=PR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",JR="return x;",QR="return 1.0 / (1.0 + exp(-1.0 * x));",jR="return x;",qR="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",eG="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",tG="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nG="return 1.0 / (1.0 + exp(-1.0 * x));";class sG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class rG{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length);const t=e.length,n=FR("rc",t),s=VT(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const aG=tc,iG={};const oG=A().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class lG extends t{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!A().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(null!=t){if(t instanceof lN)n=t;else{const e=OC(A().getNumber("WEBGL_VERSION"),t);n=new lN(e)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=OC(A().getNumber("WEBGL_VERSION"));n=new lN(e),this.binaryCache=function(e){return e in iG||(iG[e]={}),iG[e]}(A().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ZR(this.gpgpu),this.numMBBeforeWarning=null==A().global.screen?1024:A().global.screen.height*A().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new e(this,Za())}nextDataId(){return lG.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((A().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||A().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:PC.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,s,r){if(A().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:PC.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new sG(i,JR):new AR(i,JR);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=js()),"complex64"===s){c=Rh(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=js()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new sG(s,JR):new AR(s,JR);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(A().getBool("DEBUG")&&!A().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===A().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&A().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...UC(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Rh(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=h(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;JC(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Za().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new sG(r,JR):new AR(r,JR);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Za().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>er(e)));return Ra(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ra(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!QC(n))throw A().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=h(t);if(A().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...UC(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=A().getBool("WEBGL_PACK")&&!0===s,i=a?cT(t):t,o=a?new YT(i):new _T(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=c(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=c(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:js(),endMs:null}}endTimer(e){return A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=js(),e)}async getQueryTime(e){if(A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=oG){return A().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&h(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ts("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return aG(e.shape,t)}packedUnaryOp(e,t,n){const s=new sG(e.shape,t),r=this.compileAndRun(s,[e],n);return Za().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=vR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(A().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,HR,e.dtype);const t=new AR(e.shape,HR),n=this.compileAndRun(t,[e]);return Za().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&C(n[0])){const r=n.map((e=>qs(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return Za().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new rG(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new XR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[lT(e.shape),...uT(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[lT(t),...uT(t)],a=new VR(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(null!=t){o(h(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=cT(r);let l;l=s?new UT(i):new HT(i);const u=[null!=t?t:UC(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(l,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===AC.DENSE){const t=null!=a?a:UC(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===h(i.shape))return o.values=v(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&h(t.shape)<=A().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!dT(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=ZT(e.packedInputs,t.shape,a);let u="",c="",p="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=L(o);p=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const f=t.shape.length,m=2===o.length&&d(t.shape,a),g=1===h(t.shape),b=Ja(t.shape,n.shape),y=!e.packedInputs&&f===n.shape.length&&d(a,n.texData.texShape),x=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${f}_${y}_${i?l:""}_${o.length}_${g}_${b}_${m}_${u}_${c}_${p}_${x}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${A().getNumber("WEBGL_VERSION")}`,a}(e,u,c),f=this.getAndSaveBinary(p,(()=>OT(this.gpgpu,e,u,c))),m=null!=this.activeTimers;let g;m&&(g=this.startTimer()),A().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(PT(t.inShapeInfos,n),PT([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===A().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=ZT(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a){if(n.isUniform){if(h(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=L(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,f,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const b=A().get("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=js();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!A().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(A().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Da((()=>{if(!A().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=A().getBool("DEBUG");A().set("DEBUG",!1);const t=this.abs(nl(1e-8)).dataSync()[0];if(A().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=js());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=A().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=A().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&A().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?a(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=x(e).newShape);let r=h(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o)if(t){const t=lT(e);let n=2,s=2;e.length&&([n,s]=uT(e)),r=t*(n/2)*(s/2),i=f(r).map((e=>2*e))}else i=f(r);return i}(n,l),t.texShape=d),null!=r){const e=cT(n);let a,i=d[1],o=d[0];const h=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!h)&&([i,o]=_C(d[0],d[1])),a=l?new QT(e,h):new JT(e,h);const p=h?[o,i]:d,f=this.makeTensorInfo(p,s),m=this.texData.get(f.dataId);m.usage=h?PC.PIXELS:PC.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,o,r);const g=[[o,i]],b=!0,y=this.runWebGLProgram(a,[f],s,g,b),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,A().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=js()-c)}else{const e=this.acquireTexture(d,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*S(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await rh(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(eT(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=AT(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}}lG.nextDataId=0;Xr()&&Pa("webgl",(()=>new lG),2);const uG="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class cG{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ja(t,n),this.enableShapeUniforms=BT(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const hG="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class dG{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ja(t,n);const r=this.outputShape.length;this.enableShapeUniforms=BT(r);let a="";if(s)if(0===r||1===h(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${VT(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=FR("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function pG(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const fG={kernelName:ot,backendName:"webgl",kernelFunc:pG};function mG(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=pG({inputs:{x:s},backend:n}),l=pG({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const gG={kernelName:xe,backendName:"webgl",kernelFunc:mG},bG="return (a < 0.) ? b * a : a;",yG="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const xG={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Js(a,"float32")),o=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dG(yG,r.shape,i.shape):new cG(bG,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},vG="return (a < 0.) ? b * a : a;",wG="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const kG={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dG(wG,s.shape,r.shape):new cG(vG,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}},IG="if (isnan(x)) return x;";function SG({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=A().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new sG(i.shape,t):new AR(i.shape,e),o.runWebGLProgram(u,[i],l)}}function CG({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new cG(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],Cr(n.dtype,s.dtype))})),a=mG({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||Cr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?ud(e):e,s="string"===l.dtype?ud(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new dG(t,l.shape,u.shape,n):new cG(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function TG(e,t=!1){if("linear"===e)return t?jR:BR;if("relu"===e)return t?eG:_R;if("elu"===e)return t?qR:UR;if("relu6"===e)return t?tG:YR;if("prelu"===e)return t?wG:vG;if("leakyrelu"===e)return t?yG:bG;if("sigmoid"===e)return t?nG:QR;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class NG{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=BT(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const RG={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class GG{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ja(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const LG="return a * b;";function WG(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=Cr(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new GG(RG.REAL,s.shape,r.shape),i=new GG(RG.IMAG,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=mG({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=cR(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dG(LG,s.shape,r.shape):new cG(LG,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const EG={kernelName:Xt,backendName:"webgl",kernelFunc:WG};function MG(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,l=h(r.shape),u=b(a,l),c=h(u);o(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${r.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(r.dataId);return!d.isPacked||dT(r.shape,u)||null!==d.texture&&dT(d.shape,u)?(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const s=[lT(e.shape),...uT(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[lT(t),...uT(t)],i=new VR(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,u,i)}const $G={kernelName:nn,backendName:"webgl",kernelFunc:MG};class zG{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${p(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class FG{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function XG(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=ph(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new zG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new zG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new FG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class VG{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=VT(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class ZG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=VT(this.rank),r=zR("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function KG(e,t,n){const s=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZG(e.shape,t):new VG(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function DG(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=y(r,e.shape);let o=i;const l=Jo(o,a),u=null!=l;let c=e;u&&(c=KG(e,l,s),o=jo(o.length,a)),Yo("sum",o,a);const[d,p]=Uo(c.shape,o);let f=d;n&&(f=_o(d,i));const m=h(p),g=MG({inputs:{x:c},attrs:{shape:[h(e.shape)/m,m]},backend:s}),b=XG(g,Tr(e.dtype),"sum",s),x=MG({inputs:{x:b},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(b),u&&s.disposeIntermediateTensorInfo(c),x}(r,a,i,n)}const OG={kernelName:In,backendName:"webgl",kernelFunc:DG};function AG(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=MR(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype);i.texData.get(u.dataId).values=t}else u=KG(r,a,i);return u}const PG={kernelName:Pn,backendName:"webgl",kernelFunc:AG},BG=1e3;function HG({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}){const c=e.shape.length,d=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],f=s?t.shape[d-1]:t.shape[d-2],m=n?e.shape[c-1]:e.shape[c-2],g=s?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=h(b),v=h(y),w=ja(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,g]);o(p===f,(()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[x,p,m]:[x,m,p],I=s?[v,g,f]:[v,f,g],S=MG({inputs:{x:e},backend:r,attrs:{shape:k}}),C=MG({inputs:{x:t},backend:r,attrs:{shape:I}}),T=[S,C],N=Math.max(x,v),R=n?S.shape[1]:S.shape[2],G=null!=a,L=null!=i,W="leakyrelu"===u,E=null!=u?TG(u,!0):null;let M;if((1===m||1===g)&&R>BG&&!1===(G||L||W||null!=E)){let e=S,t=C;n&&(e=AG({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),T.push(e)),s&&(t=AG({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),T.push(t));const a=1===g;let i=e;1!==g&&(i=MG({inputs:{x:e},backend:r,attrs:{shape:[N,R,1]}}),T.push(i));const o=1===g?2:1;let l=t;a&&(l=MG({inputs:{x:t},backend:r,attrs:{shape:[N,1,R]}}),T.push(l));const u=WG({inputs:{a:i,b:l},backend:r});M=DG({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{const o=Cr(e.dtype,t.dtype),u=new NG(k,I,[N,m,g],n,s,G,E,L,W),c=[S,C];if(null!=a&&c.push(a),L&&c.push(i),W){const e=r.makeTensorInfo([],"float32",Js(l,"float32"));c.push(e),T.push(e)}M=r.runWebGLProgram(u,c,o)}const $=MG({inputs:{x:M},backend:r,attrs:{shape:w}});T.push(M);for(const e of T)r.disposeIntermediateTensorInfo(e);return $}const UG={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return HG({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},_G="return abs(x);";const YG={kernelName:_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=vR(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=A().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new sG(s.shape,_G):new AR(s.shape,_G),n.runWebGLProgram(r,[s],s.dtype)}},JG=SG({opSnippet:PR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),QG={kernelName:Y,backendName:"webgl",kernelFunc:JG},jG=SG({opSnippet:PR+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),qG={kernelName:J,backendName:"webgl",kernelFunc:jG},eL="return a + b;",tL=CG({opSnippet:eL,packedOpSnippet:eL,supportsComplex:!0,cpuKernelImpl:AN}),nL={kernelName:Q,backendName:"webgl",kernelFunc:tL};class sL{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class rL{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const aL={kernelName:j,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return pG({inputs:{x:r[0]},backend:s});if(r.length>A().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>Cr(e,t))),i=r.map((e=>e.shape)),o=A().getBool("WEBGL_PACK")?new rL(r[0].shape,i):new sL(r[0].shape,i);return s.runWebGLProgram(o,r,a)}};const iL={kernelName:q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=y(a,r.shape);let u=l;const c=Jo(u,o);let d=r;null!=c&&(d=AG({inputs:{x:r},backend:n,attrs:{perm:c}}),u=jo(u.length,o)),Yo("all",u,o);const[p,f]=Uo(d.shape,u),m=MG({inputs:{x:d},backend:n,attrs:{shape:[-1,h(f)]}}),g=XG(m,m.dtype,"all",n);let b;if(i){b=MG({inputs:{x:g},backend:n,attrs:{shape:_o(p,l)}})}else b=MG({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),b}};const oL={kernelName:ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=y(a,r.shape);let u=l;const c=Jo(u,o);let d=r;null!=c&&(d=AG({inputs:{x:r},backend:n,attrs:{perm:c}}),u=jo(u.length,o)),Yo("any",u,o);const[p,f]=Uo(d.shape,u),m=MG({inputs:{x:d},backend:n,attrs:{shape:[-1,h(f)]}}),g=XG(m,m.dtype,"any",n);let b;if(i){b=MG({inputs:{x:g},backend:n,attrs:{shape:_o(p,l)}})}else b=MG({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),b}};class lL{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class uL{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,u=VT(l),c=FR("coords",l);let h,d;if(1===a){d=l+1;const e=VT(d);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map((e=>"int "+e)),g=FR("sourceLocR",d-1).concat("inIdx.r"),b=FR("sourceLocG",d-1).concat("inIdx.g"),y=FR("sourceLocB",d-1).concat("inIdx.b"),x=FR("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function cL(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=ph(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new lL(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=cL(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function hL(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=ph(r[r.length-1]),i=new uL(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=hL(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function dL(e,t,n,s){const r=[n];if(Yo("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!A().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Uo(i.shape,r),u=h(l),c=MG({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const d=cL(e,c,s);n.push(d);const p=MG({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return hL(e,t,s)}const pL={kernelName:te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=y(a,r.shape);const o=Jo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=AG({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=jo(i.length,l.shape.length)),Yo("argMax",[i[0]],l.shape.length);const c=dL(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const fL={kernelName:ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=y(a,r.shape);const o=Jo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=AG({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=jo(i.length,l.shape.length)),Yo("argMin",[i[0]],l.shape.length);const c=dL(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},mL=SG({opSnippet:PR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),gL={kernelName:se,backendName:"webgl",kernelFunc:mL},bL=SG({opSnippet:PR+"return log(x + sqrt(x * x + 1.0));"}),yL={kernelName:re,backendName:"webgl",kernelFunc:bL},xL=SG({opSnippet:PR+"\n  return atan(x);\n"}),vL={kernelName:ae,backendName:"webgl",kernelFunc:xL},wL=CG({opSnippet:uG+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+hG+"\n  return result;\n"}),kL={kernelName:oe,backendName:"webgl",kernelFunc:wL},IL=SG({opSnippet:PR+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),SL={kernelName:ie,backendName:"webgl",kernelFunc:IL};class CL{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class TL{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const NL={kernelName:le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;xT(r,"avgPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=s;o(ji(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=Oi(r.shape,a,i,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))return pG({inputs:{x:r},backend:n});const h=new CL(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};const RL={kernelName:ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=Ai(r.shape,a,i,[1,1,1],o,l,u),h=new TL(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class GL{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LL{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const WL={kernelName:he,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Ai(i.shape,o,l,[1,1,1],u,c),d=new LL(h);return n.runWebGLProgram(d,[r],i.dtype)}};const EL={kernelName:ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;xT([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Oi(i.shape,o,l,1,u),h=new GL(c);return n.runWebGLProgram(h,[r],i.dtype)}};const ML={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return HG({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class $L{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ja(e,t),ja(e,n);let i="0.0";null!=s&&(ja(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(ja(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class zL{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ja(e,t),ja(e,n);let i="vec4(0.0)";null!=s&&(ja(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(ja(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const FL={kernelName:nt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:l}=e;o(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o(null==l||r.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,r,a];let h=null;null!=i&&(h=i.shape,c.push(i));let d=null;null!=l&&(d=l.shape,c.push(l));const p=A().getBool("WEBGL_PACK_NORMALIZATION")?new zL(s.shape,r.shape,a.shape,h,d,u):new $L(s.shape,r.shape,a.shape,h,d,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class XL{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=VT(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return VL.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${VL[t]} = start[${t}] + coords.${VL[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const VL=["x","y","z","w","u","v"];class ZL{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=VT(this.rank),n=FR("coords",this.rank),s=FR("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function KL(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=yi(r,a,i);if(ii(r,o,l),0===h(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=wR(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=gi(r.shape,o,l);if(u||!c){const e=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZL(l):new XL(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=bi(t,L(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const DL={kernelName:gn,backendName:"webgl",kernelFunc:KL},OL={kernelName:pe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;o(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=a.reduce(((e,t)=>e*t)),u=mh(r.shape,a,l),c=gh(u.length,a.length),h=bh(r.shape,a,l),d=yh(i,a.length),p=xh(h,i,a.length),f=[],m=MG({inputs:{x:r},backend:n,attrs:{shape:u}}),g=AG({inputs:{x:m},backend:n,attrs:{perm:c}}),b=MG({inputs:{x:g},backend:n,attrs:{shape:h}}),y=KL({inputs:{x:b},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const AL={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=PN(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}};const PL={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=ja(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},BL=CG({opSnippet:"return float(a != b);",cpuKernelImpl:dR,dtype:"bool"}),HL={kernelName:Zt,backendName:"webgl",kernelFunc:BL};function UL(e){const{inputs:t,backend:n}=e,{input:s}=t;return pG({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const _L={kernelName:qt,backendName:"webgl",kernelFunc:UL},YL="return float(int(x));";const JL={kernelName:ge,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return pG({inputs:{x:a},backend:s});const t=Dl(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=mG({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=UL({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!k(a.dtype,i)){const e=pG({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,[t,n,r]=HN(e,a.shape,a.dtype,i);return s.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new AR(e.shape,YL),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",v("bool",1)),t=BL({inputs:{a:a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},QL="return ceil(x);",jL=SG({opSnippet:QL,packedOpSnippet:QL,cpuKernelImpl:UN}),qL={kernelName:be,backendName:"webgl",kernelFunc:jL};class eW{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class tW{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const nW={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=A().getBool("WEBGL_PACK_CLIP")?new tW(r.shape):new eW(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class sW{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function rW(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const aW={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new sW(s.shape),i=[rW(s,r.complexTensorInfos.real),rW(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class iW{constructor(e){this.outputShape=[],this.outputShape=ih(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class oW{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ih(e,t);const n=this.outputShape,s=n.length,r=VT(s),a=FR("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${lW(i,l,t)}),\n            vec2(${lW(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${lW(i,l,p)}),\n          vec2(${lW(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function lW(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function uW(e){const{inputs:t,backend:n}=e,{input:s}=t;return pG({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const cW={kernelName:ut,backendName:"webgl",kernelFunc:uW};function hW(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>UL({inputs:{input:e},backend:n}))),r=e.map((e=>uW({inputs:{input:e},backend:n}))),a=hW(s,t,n),i=hW(r,t,n),o=mG({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=[-1,h(e.shape.slice(t))];return MG({inputs:{x:e},backend:n,attrs:{shape:s}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=ih(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=_N(a,i,s,o),u=ih(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=A().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){const s=[];for(let r=0;r<e.length;r+=a){const i=e.slice(r,r+a);s.push(hW(i,t,n))}const r=hW(s,t,n);for(const e of s)n.disposeIntermediateTensorInfo(e);return r}if(A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new oW(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:i,outShape:o}=function(e,t,n){const s=ih(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>MG({inputs:{x:e},attrs:{shape:[-1,h(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),l=new iW(i.map((e=>e.shape))),u=n.runWebGLProgram(l,i,s);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=MG({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function dW(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=y(r,t[0].shape)[0];ah(t.map((e=>e.shape)),a);const i=ih(t.map((e=>e.shape)),a);if(0===h(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>h(e.shape)>0));return 1===o.length?pG({inputs:{x:o[0]},backend:n}):hW(o,a,n)}const pW={kernelName:we,backendName:"webgl",kernelFunc:dW};class fW{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",v="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class mW{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gW{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BT(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<c;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(h+1)/2;t++){const n=2*t;if(d+=`\n           xC = xCCorner + ${n*l};\n           `,1===o){if(n<c&&(i%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===l&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<c)){const e=i%2==0?a(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<c&&(i%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<c&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<c&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<c&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<c&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class bW{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=BT(this.outputShape.length);const{dataFormat:n}=t,s=wT(),r="channelsLast"===n,a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function yW(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function xW({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const u=e.shape,c=s.texData.get(e.dataId),h=n.inChannels,p=u[0]*u[1]*u[2],f=n.outChannels,m="channelsLast"===n.dataFormat;let g;const b=[];if(null!=a){const e=yW(a.shape,m);null!=e&&(a=MG({inputs:{x:a},backend:s,attrs:{shape:e}}),b.push(a))}if(null!=r){const e=yW(r.shape,m);null!=e&&(r=MG({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}if((1!==p&&1!==f||!(h>BG))&&c.isPacked&&m&&null!=c.texture&&u[2]%2!=0&&d(c.shape.slice(-3),u.slice(-3))){const h=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,o(dT(c.shape,d.shape),(()=>`packed reshape ${c.shape} to ${d.shape} isn't free`));const f=MG({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(f);const m=HG({a:d,b:f,backend:s,transposeA:false,transposeB:false,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:i}),y=s.texData.get(m.dataId);o(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,y.shape=n.outShape,g=pG({inputs:{x:m},backend:s}),g.shape=n.outShape,b.push(m)}else{const o=n.outHeight*n.outWidth,u=MG({inputs:{x:e},backend:s,attrs:{shape:m?[n.batchSize,o,n.inChannels]:[n.batchSize,n.inChannels,o]}}),c=MG({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=HG({a:m?u:c,b:m?c:u,transposeA:!m,transposeB:false,backend:s,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:i});g=MG({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),b.push(u),b.push(c),b.push(h)}for(const e of b)s.disposeIntermediateTensorInfo(e);return g}function vW({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=l*u*c,b=p*d,y=[n.batchSize,g,b],x=[];if(null!=a){const e=yW(a.shape,m);null!=e&&(a=MG({inputs:{x:a},backend:s,attrs:{shape:e}}),x.push(a))}if(null!=r){const e=yW(r.shape,m);null!=e&&(r=MG({inputs:{x:r},backend:s,attrs:{shape:e}}),x.push(r))}const v=MG({inputs:{x:t},backend:s,attrs:{shape:[1,g,h(t.shape)/g]}});x.push(v);const w=new bW(y,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(w,[e],"float32",k),S=MG({inputs:{x:I},backend:s,attrs:{shape:y}});x.push(I),x.push(S);const C=null!=r,T=null!=a,N="leakyrelu"===o,R=o?TG(o,!0):null,G=new NG(m?S.shape:v.shape,m?v.shape:S.shape,m?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,C,R,T,N),L=m?[S,v]:[v,S];if(r&&L.push(r),T&&L.push(a),N){const e=s.makeTensorInfo([],"float32",Js(i,"float32"));L.push(e),x.push(e)}const W=s.runWebGLProgram(G,L,"float32"),E=MG({inputs:{x:W},backend:s,attrs:{shape:n.outShape}});x.push(W);for(const e of x)s.disposeIntermediateTensorInfo(e);return E}const wW={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=qi(l),d=Pi(r.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&A().getBool("WEBGL_EXP_CONV")){const e=new gW(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,a],"float32",t)}else if(A().getBool("WEBGL_CONV_IM2COL"))p=vW({x:r,filter:a,convInfo:d,backend:n});else{const e=new fW(d);p=n.runWebGLProgram(e,[r,a],"float32")}else p=xW({x:r,filter:a,convInfo:d,backend:n});const f=MG({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class kW{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IW{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SW{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CW{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const TW={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=qi(l),d=Pi(r.shape,c,i,1,o,u,!1,h),p=new kW(d);return n.runWebGLProgram(p,[r,a],"float32")}};const NW={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=qi(u),d=Pi(i,a.shape,o,1,l,c,!1,h),p=new IW(d);return n.runWebGLProgram(p,[r,a],"float32")}};const RW={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=Bi(r.shape,a.shape,i,l,o),c=new mW(u);return n.runWebGLProgram(c,[r,a],"float32")}};const GW={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=Bi(r.shape,l,i,1,o),c=new SW(u);return n.runWebGLProgram(c,[r,a],"float32")}};const LW={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=Bi(l,a.shape,o,1,i),c=new CW(u);return n.runWebGLProgram(c,[r,a],"float32")}},WW=SG({opSnippet:IG+"\n  return cos(x);\n"}),EW={kernelName:Re,backendName:"webgl",kernelFunc:WW},MW=SG({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),$W={kernelName:Ge,backendName:"webgl",kernelFunc:MW};class zW{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const FW={kernelName:Ee,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new zW(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};var XW;!function(e){e.Prod="*",e.Sum="+"}(XW||(XW={}));class VW{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===XW.Prod?"1.0":"0.0",i=n?a:`getX(${ZW(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${VT(r)} coords = getOutputCoords();\n        int end = ${KW(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${KW(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${ZW(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function ZW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function KW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function DW(e,t,n,s,r,a){const i=t.shape.length,o=Jo([s],i);let l=t;null!=o&&(l=AG({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=jo(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=pG({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const s=new VW(e,l.shape,!1,a),r=[[t]],i=h;h=n.runWebGLProgram(s,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){const t=new VW(e,l.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=AG({inputs:{x:h},backend:n,attrs:{perm:Qo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const OW={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return DW(XW.Prod,r,n,a,i,o)}};const AW={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return DW(XW.Sum,r,n,a,i,o)}};const PW={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=PN(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=BN(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class BW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const HW={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new BW("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class UW{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BT(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class _W{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BT(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<h;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===l){if(t<h&&(o%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<h)){const e=o%2==0?a(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<h&&(o%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<h&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<h&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<h&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const YW={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:c}=s;let h=u;null==h&&(h=[1,1]),o(ji(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const d=Pi(r.shape,a.shape,i,h,l,c,!0);let p;p=A().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new _W(d):new UW(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",f)}};class JW{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QW{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jW={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Pi(r.shape,c,i,o,l,u,!0),d=new JW(h);return n.runWebGLProgram(d,[r,a],"float32")}};const qW={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Pi(c,a.shape,i,o,l,u,!0),d=new QW(h);return n.runWebGLProgram(d,[r,a],"float32")}};class eE{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const tE={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=h(s.shape),i=MG({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new eE(a),l=n.runWebGLProgram(o,[i],i.dtype),u=MG({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class nE{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const sE={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=Di(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new nE(u);c=n.runWebGLProgram(h,[r,a],"float32");const d=MG({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}};const rE={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=Kh(r,a.length);Oh(i.length,l,a);const{path:u,steps:c}=Ah(o,l),h=c.length;let p=null,f=i.length;const m=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=Dh(f,l[t]);let r;Ph(e)?r=a[t]:(r=AG({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);d(r.shape,i)||(r=MG({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=WG({inputs:{a:r,b:p},backend:n}),m.push(p))}e<h-1&&(u[e]>=0&&(p=DG({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},aE=SG({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),iE={kernelName:Pe,backendName:"webgl",kernelFunc:aE},oE={kernelName:Be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dG("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new cG("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},lE=CG({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:YN}),uE={kernelName:Ue,backendName:"webgl",kernelFunc:lE},cE=SG({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${kh};\n  float a1 = ${Ih};\n  float a2 = ${Sh};\n  float a3 = ${Ch};\n  float a4 = ${Th};\n  float a5 = ${Nh};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),hE={kernelName:He,backendName:"webgl",kernelFunc:cE},dE=SG({opSnippet:IG+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:JN,dtype:"float32"}),pE={kernelName:_e,backendName:"webgl",kernelFunc:dE};function fE(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,l=a.shape.slice();let u=r;return r<0&&(o(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+r+1),l.splice(u,0,1),MG({inputs:{x:a},backend:s,attrs:{shape:l}})}const mE={kernelName:Ye,backendName:"webgl",kernelFunc:fE},gE="return exp(x) - 1.0;",bE=SG({opSnippet:gE,packedOpSnippet:gE,cpuKernelImpl:QN}),yE={kernelName:Je,backendName:"webgl",kernelFunc:bE};class xE{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function vE(e,t,n){const s=n.texData.get(e.dataId),r=h(e.shape),a=e.shape[e.shape.length-1],i=MG({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new xE("real",o,t),u=new xE("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),f=mG({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=MG({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const wE={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return vE(s,!1,n)}};class kE{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function IE(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||N(r),"string"===a){const e=w(a,h(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new kE(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const SE={kernelName:je,backendName:"webgl",kernelFunc:IE};class CE{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const TE={kernelName:qe,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new CE(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},NE="return floor(x);",RE=SG({opSnippet:NE,packedOpSnippet:NE,cpuKernelImpl:jN}),GE={kernelName:et,backendName:"webgl",kernelFunc:RE},LE=CG({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),WE={kernelName:tt,backendName:"webgl",kernelFunc:LE};class EE{constructor(e){this.variableNames=["A"];const t=wT(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ME{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=wT(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const $E={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(o||i){const e=A().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==zE||e!==FE)&&(FE=e,zE=document.createElement("canvas").getContext("2d",{willReadFrequently:FE})),zE.canvas.width=l,zE.canvas.height=u,zE.drawImage(r,0,0,l,u),r=zE.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=PC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=A().getBool("WEBGL_PACK")?new ME(h):new EE(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let zE,FE=A().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const XE={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=qi(c),g=Pi(r.shape,a.shape,l,h,u,d,!1,m);let b;const y=[],x=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[r,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=MG({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Js(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&A().getBool("WEBGL_EXP_CONV")){const e=p?TG(p,!0):null,t=new gW(g,x,e,v,w),s=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();b=n.runWebGLProgram(t,r,"float32",s)}else if(A().getBool("WEBGL_CONV_IM2COL"))b=vW({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?TG(p,!1):null,t=new fW(g,x,e,v,w),s=k();b=n.runWebGLProgram(t,s,"float32")}else b=xW({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=MG({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const VE={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),o(ji(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const b=Pi(r.shape,a.shape,u,g,c,d,!0),y=A().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=p?TG(p,y):null,v=[r,a],w=null!=i,k=null!=l,I="leakyrelu"===p;if(w&&v.push(i),k&&v.push(l),I){const e=n.makeTensorInfo([],"float32",Js(f,"float32"));v.push(e),m.push(e)}let S;S=y?new _W(b,w,x,k,I):new UW(b,w,x,k,I);const C=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],T=n.runWebGLProgram(S,v,"float32",C);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class ZE{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=VT(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const KE={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=h(s.shape),[l,u,c,d]=ti(s,r),p=MG({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=MG({inputs:{x:s},backend:n,attrs:{shape:[h(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=qN(e,t,s.dtype,u,i,c,d,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const m=new ZE(i,d,[u,c],s.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),b=MG({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),b}};class DE{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=VT(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function OE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:l}=s,u=y(i,r.shape)[0];if(A().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[u];for(let n=0;n<e.length;++n){const s=e[n];o(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const c=od(r,a,u,l),d=h(a.shape),p=[],f=MG({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=MG({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(f),p.push(m);const g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),s=eR(t,e,g);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,s.dtype,s.values)}const b=new DE(f.shape,g),x=n.runWebGLProgram(b,[f,m],f.dtype);p.push(x);const v=MG({inputs:{x:x},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const AE={kernelName:st,backendName:"webgl",kernelFunc:OE},PE=CG({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:tR,dtype:"bool"}),BE={kernelName:at,backendName:"webgl",kernelFunc:PE},HE=CG({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:nR}),UE={kernelName:it,backendName:"webgl",kernelFunc:HE};const _E={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return vE(s,!0,n)}},YE=SG({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),JE={kernelName:ct,backendName:"webgl",kernelFunc:YE},QE=SG({opSnippet:"return float(isinf(x));",dtype:"bool"}),jE={kernelName:ht,backendName:"webgl",kernelFunc:QE},qE=SG({opSnippet:"return float(isnan(x));",dtype:"bool"}),eM={kernelName:dt,backendName:"webgl",kernelFunc:qE},tM=CG({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:sR,dtype:"bool"}),nM={kernelName:ft,backendName:"webgl",kernelFunc:tM},sM=CG({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:rR,dtype:"bool"}),rM={kernelName:mt,backendName:"webgl",kernelFunc:sM};const aM={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=aR(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},iM=SG({opSnippet:IG+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:iR}),oM={kernelName:bt,backendName:"webgl",kernelFunc:iM},lM=SG({opSnippet:IG+"\n  return log(1.0 + x);\n"}),uM={kernelName:yt,backendName:"webgl",kernelFunc:lM},cM=CG({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),hM={kernelName:xt,backendName:"webgl",kernelFunc:cM},dM=SG({opSnippet:"return float(!(x >= 1.0));"}),pM={kernelName:vt,backendName:"webgl",kernelFunc:dM},fM=CG({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),mM={kernelName:wt,backendName:"webgl",kernelFunc:fM};class gM{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class bM{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const yM={kernelName:kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=A().getBool("WEBGL_PACK_NORMALIZATION")?new bM(r.shape,a,i,o,l):new gM(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class xM{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const vM={kernelName:It,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new xM(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function wM(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=y(a,r.shape);let u=l;const c=Jo(u,o),d=null!=c,p=n.shouldExecuteOnCPU([r]);let f=r;if(d){if(p){const e=n.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=MR(e,r.shape,r.dtype,c,t);f=n.makeTensorInfo(t,r.dtype);n.texData.get(f.dataId).values=s}else f=KG(r,c,n);u=jo(u.length,o)}Yo("max",u,o);const[m,g]=Uo(f.shape,u);let b,x=m;if(i&&(x=_o(m,l)),p){const e=n.texData.get(f.dataId).values,t=oR(e,h(g),x,r.dtype);b=n.makeTensorInfo(x,r.dtype);n.texData.get(b.dataId).values=t}else b=function(e,t,n,s){const r=h(t),a=MG({inputs:{x:e},attrs:{shape:[h(e.shape)/r,r]},backend:s}),i=XG(a,e.dtype,"max",s),o=MG({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,x,n);return d&&n.disposeIntermediateTensorInfo(f),b}const kM={kernelName:St,backendName:"webgl",kernelFunc:wM},IM=CG({opSnippet:uG+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+hG+"\n  return result;\n",cpuKernelImpl:lR}),SM={kernelName:Ct,backendName:"webgl",kernelFunc:IM};const CM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;xT(r,"maxPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=s;o(ji(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=Oi(r.shape,a,i,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))return pG({inputs:{x:r},backend:n});const h=new CL(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};const TM={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=Ai(r.shape,a,i,[1,1,1],o,u,l),h=new TL(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class NM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GM={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Ai(i.shape,o,l,[1,1,1],u,c),d=new TL(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new RM(h),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};const LM={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;xT([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Oi(o.shape,l,u,1,c,h),p=new CL(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new NM(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const WM={kernelName:Lt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:l}=t,u=n;o(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];o(ji(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=Oi(s.shape,r,a,c,i),[d,p]=function(e,t,n,s){let r=new CL(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new CL(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,l,h,u);return[d,p]}};const EM={kernelName:Wt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=y(a,s.shape);let u=l;const c=Jo(u,o),d=null!=c,p=i.shouldExecuteOnCPU([s]),f=[];let m=s;if(d){if(p){const e=i.texData.get(m.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=MR(e,s.shape,s.dtype,c,t);m=i.makeTensorInfo(t,s.dtype);i.texData.get(m.dataId).values=n}else m=KG(s,c,i);f.push(m),u=jo(u.length,o)}Yo("sum",u,o);const[g,b]=Uo(m.shape,u);let x=g;r&&(x=_o(g,l));const v=function(e,t,n,s){const r=h(t),a=MG({inputs:{x:e},attrs:{shape:[h(e.shape)/r,r]},backend:s}),i=XG(a,"float32","mean",s),o=MG({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(m,b,x,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return v}};const MM={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=y(a,r.shape);let u=l;const c=Jo(u,o);let d=r;null!=c&&(d=AG({inputs:{x:r},backend:n,attrs:{perm:c}}),u=jo(u.length,r.shape.length)),Yo("min",u,o);const[p,f]=Uo(d.shape,u),m=MG({inputs:{x:d},backend:n,attrs:{shape:[-1,h(f)]}}),g=XG(m,m.dtype,"min",n);let b;if(i){b=MG({inputs:{x:g},backend:n,attrs:{shape:_o(p,l)}})}else b=MG({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),b}},$M=CG({opSnippet:uG+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+hG+"\n  return result;\n",cpuKernelImpl:uR}),zM={kernelName:Mt,backendName:"webgl",kernelFunc:$M};class FM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=VT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class XM{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=VT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=FR("rc",s),l=FR("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const VM={kernelName:$t,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XM(s.shape,r,a):new FM(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},ZM=CG({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+hG+"\n  return result;\n"}),KM={kernelName:zt,backendName:"webgl",kernelFunc:ZM};class DM{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const OM=CG({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),AM={kernelName:Oe,backendName:"webgl",kernelFunc:OM},PM="return a - b;",BM=CG({opSnippet:PM,packedOpSnippet:PM,supportsComplex:!0,cpuKernelImpl:LR}),HM={kernelName:Vn,backendName:"webgl",kernelFunc:BM};function UM(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=y([a],r.shape),o=wM({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=_o(o.shape,i),u=MG({inputs:{x:o},backend:n,attrs:{shape:l}}),c=BM({inputs:{a:r,b:u},backend:n}),h=dE({inputs:{x:c},backend:n}),d=DG({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=MG({inputs:{x:d},backend:n,attrs:{shape:l}}),f=OM({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const _M={kernelName:Tn,backendName:"webgl",kernelFunc:UM};const YM={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:UM({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new DM(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},JM=PR+"\n  return -x;\n";const QM={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=hR(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=A().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new sG(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new AR(s.shape,JM),n.runWebGLProgram(r,[s],s.dtype)}},jM=Ic;const qM={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=jM(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},e$=Sc;const t$={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=e$(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},n$=Cc;const s$={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=n$(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class r${constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const a$={kernelName:Pt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s,u=h(r.shape),c=new r$(u,i,o,l),d=MG({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[d],a);n.disposeIntermediateTensorInfo(d);const f=MG({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function i$(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=UL({inputs:{input:s},backend:n}),t=i$({inputs:{x:e},backend:n}),r=uW({inputs:{input:s},backend:n}),a=i$({inputs:{x:r},backend:n}),i=mG({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return IE({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const o$={kernelName:_n,backendName:"webgl",kernelFunc:i$};const l$={kernelName:At,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=UL({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=uW({inputs:{input:r},backend:s}),i=i$({inputs:{x:a},backend:s}),o=mG({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return IE({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}};const u$={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return fE({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{l(a,e.shape,"All tensors passed to stack must have matching shapes"),o(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=dW({inputs:t.map((e=>{const t=fE({inputs:{input:e},backend:n,attrs:{dim:r}});return u.push(t),t})),backend:n,attrs:{axis:r}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class c${constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=VT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class h${constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=VT(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=FR("rc",s),l=FR("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const d$=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===h(r.shape)){return IE({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}})}const o=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new h$(r.shape,a,i):new c$(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},p$={kernelName:Ht,backendName:"webgl",kernelFunc:d$},f$=CG({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+hG+"\n  return result;\n"}),m$={kernelName:Ut,backendName:"webgl",kernelFunc:f$};const g$={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=y(a,r.shape);let c=u;const d=Jo(c,o);let p,f=r;if(null!=d&&(f=AG({inputs:{x:r},backend:n,attrs:{perm:d}}),c=jo(c.length,o),l.push(f)),Yo("prod",c,o),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:s,outDtype:r}=pR(f.shape,f.dtype,e,c);p=n.makeTensorInfo(s,r,t)}else{const[e,t]=Uo(f.shape,c),s=h(t),a=MG({inputs:{x:f},backend:n,attrs:{shape:[-1,s]}}),i=XG(a,Tr(r.dtype),"prod",n);p=MG({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=_o(p.shape,u);p=MG({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const b$={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=fR(l,u,c,a.shape,a.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const y$={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=mR(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}},x$=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=gR(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},v$={kernelName:jt,backendName:"webgl",kernelFunc:x$},w$=SG({opSnippet:"return 1.0 / x;"}),k$={kernelName:en,backendName:"webgl",kernelFunc:w$},I$=SG({opSnippet:PR+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),S$={kernelName:tn,backendName:"webgl",kernelFunc:I$},C$=SG({opSnippet:PR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),T$={kernelName:ln,backendName:"webgl",kernelFunc:C$};class N${constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class R${constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const G$={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=A().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new R$(r.shape,l,u,a,i):new N$(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class L${constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const W$={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new L$(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class E${constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class M${constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const $$={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=A().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new M$(r.shape,l,u,a,i):new E$(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class z${constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const F$={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new z$(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class X${constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=VT(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class V${constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=FR("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=VT(n);var o;function l(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=s.slice(),l(o)};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Z$={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=y(a,r.shape);if(0===i)return pG({inputs:{x:r},backend:n});const l=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new V$(r.shape,o):new X$(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class K${constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const D$={kernelName:Qn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new K$(s.shape,a),[u,c]=fh(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},O$=SG({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),A$={kernelName:cn,backendName:"webgl",kernelFunc:O$},P$=SG({opSnippet:"return inversesqrt(x);",cpuKernelImpl:bR}),B$={kernelName:hn,backendName:"webgl",kernelFunc:P$};class H${constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=VT(r.length),l=VT(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const U$={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=si(0,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=MG({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=MG({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new H$(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=MG({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class _${constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===A().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Y$={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new _$(r.shape[0],r.shape[1],a.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",l)}};class J${constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=VT(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const Q$={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new J$(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],Cr(r.dtype,a.dtype))}},j$=SG({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${vh};\n  float scale = ${wh};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),q$={kernelName:mn,backendName:"webgl",kernelFunc:j$},ez=SG({opSnippet:IG+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xR}),tz={kernelName:vn,backendName:"webgl",kernelFunc:ez},nz=SG({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),sz={kernelName:xn,backendName:"webgl",kernelFunc:nz},rz=SG({opSnippet:IG+"\n  return sin(x);\n"}),az={kernelName:bn,backendName:"webgl",kernelFunc:rz},iz=SG({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),oz={kernelName:yn,backendName:"webgl",kernelFunc:iz},lz=SG({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),uz={kernelName:wn,backendName:"webgl",kernelFunc:lz},cz={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;o(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<r.shape.length;++e)u.push([0,0]);const c=[],h=d$({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),d=mh(h.shape,a,l,!1),p=gh(d.length,a.length,!1),f=bh(h.shape,a,l,!1),m=MG({inputs:{x:h},backend:n,attrs:{shape:d}}),g=AG({inputs:{x:m},backend:n,attrs:{perm:p}}),b=MG({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const hz={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=kR(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};const dz={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=IR(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const pz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=SR(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}};const fz={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=SR(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}};const mz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=si(0,r,o);if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=er(n.readSync(i.dataId)[0]),p=yR(e,t,o,d,c,u,l,h,s,false);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new H$(u,l,r.shape.length,a.shape.length,h,[d,1],false),f=n.runWebGLProgram(p,[a,r,i],a.dtype),m=MG({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};const gz={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=y(i,r.shape)[0],l=Hh(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=KL({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},bz="return sqrt(x);",yz=SG({opSnippet:bz,packedOpSnippet:bz,cpuKernelImpl:CR}),xz={kernelName:kn,backendName:"webgl",kernelFunc:yz},vz={kernelName:Mn,backendName:"webgl",kernelFunc:SG({opSnippet:"return x * x;"})},wz="return (a - b) * (a - b);",kz=CG({opSnippet:wz,packedOpSnippet:wz}),Iz={kernelName:En,backendName:"webgl",kernelFunc:kz};const Sz={kernelName:Yn,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=PR+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new AR(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class Cz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=VT(n.length),a=VT(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Tz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:l,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:v,strides:w}=xi(r.shape,a,i,l,u,c,h,d,p);let k;if(g)k=MG({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||y){o(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=oi(x,v,w),t=KL({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});k=MG({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Ra(r.shape,r.dtype,e),s=TR(f,t,w,x);k=n.makeTensorInfo(m,r.dtype,s.values)}else{const e=new Cz(x,w,f);k=n.runWebGLProgram(e,[r],r.dtype)}const I=MG({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}};const Nz={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=NR(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const Rz={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=RR(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const Gz={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=GR(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},Lz=SG({opSnippet:"return tan(x);"}),Wz={kernelName:Zn,backendName:"webgl",kernelFunc:Lz},Ez=SG({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Mz={kernelName:Kn,backendName:"webgl",kernelFunc:Ez};class $z{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=VT(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function zz(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>er(e))):e,s=Ra(r.shape,r.dtype,t),i=WR(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new $z(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const Fz={kernelName:Dn,backendName:"webgl",kernelFunc:zz};class Xz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Vz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Zz(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Kz(e){let t=1;for(;t<e;)t*=2;return t}const Dz={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=A().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=A().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=ER(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,IE({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,f=p?n.unpackTensor(r):r,m=h(u)/c,g=MG({inputs:{x:f},attrs:{shape:[m,c]},backend:n});p&&Zz(n,f);const b=Kz(a),y=Kz(c);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,s)=>{const r=v(),a=new Xz(s),i=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,r,"int32",i),Zz(n,o)};for(let e=1;e<b;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,y])}for(let e=y;e>b;e/=2){const t=v(),s=new Vz([m,e/2]),r=[[c],[null===x?1:0],[b]],a=x;x=n.runWebGLProgram(s,t,"int32",r),Zz(n,a);const i=b/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=KL({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,a]}}),Zz(n,k);let I=OE({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Zz(n,g);const S=u.slice(0,-1);S.push(a),k=x,x=MG({inputs:{x:x},attrs:{shape:S},backend:n}),Zz(n,k);const C=I;return I=MG({inputs:{x:I},attrs:{shape:S},backend:n}),Zz(n,C),[I,x]}};class Oz{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Az={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=new Oz(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[r,a],"float32")}};const Pz={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;xT(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=$R(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}};const Bz={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=KL({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),s=MG({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Hz{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Uz={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Jo([u],o);let d=r;null!=c&&(d=AG({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(d),u=jo(1,o)[0]);const p=id(d.shape,u,i),f=h([d.shape[u]]),m=MG({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=Tr(r.dtype),b=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=ad(o,a),c=new Hz({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const d=x$({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=zz({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),b(h,t,p,r,a)},y=MG({inputs:{x:b(m,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:p}});let x=y;if(null!=c){l.push(y);const e=Qo(c);x=AG({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},_z=[UG,YG,QG,qG,nL,aL,iL,oL,pL,fL,gL,yL,vL,kL,SL,NL,RL,WL,EL,ML,FL,OL,AL,PL,JL,qL,nW,gG,aW,pW,wW,TW,NW,RW,GW,LW,EW,$W,FW,OW,AW,PW,HW,YW,jW,qW,tE,sE,rE,iE,oE,uE,hE,pE,mE,yE,wE,SE,TE,GE,WE,$E,XE,VE,KE,AE,BE,UE,fG,_E,cW,JE,jE,eM,xG,nM,rM,aM,oM,uM,hM,pM,mM,yM,vM,kM,SM,CM,TM,GM,LM,WM,EM,MM,zM,VM,KM,YM,EG,QM,qM,t$,s$,HL,a$,l$,u$,p$,m$,kG,g$,b$,y$,v$,_L,AM,k$,S$,T$,$G,G$,W$,$$,F$,Z$,D$,A$,B$,U$,Y$,Q$,q$,tz,sz,az,oz,DL,_M,uz,cz,hz,dz,pz,fz,mz,gz,xz,vz,Iz,Sz,Tz,Nz,Rz,Gz,HM,OG,Wz,Mz,Fz,Dz,Az,PG,Pz,Bz,Uz,o$];for(const e of _z)os(e);const Yz="",Jz=typeof window<"u"&&window.Blob&&new Blob([atob(Yz)],{type:"text/javascript;charset=utf-8"});function Qz(){const e=Jz&&(window.URL||window.webkitURL).createObjectURL(Jz);try{return e?new Worker(e):new Worker("data:application/javascript;base64,"+Yz)}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}const jz=(e,t,n,s)=>{const{x:r,y:a,z:i}=((e,t,n,s)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]}))(e,t,n);return{x:r/i,y:a/i}},qz=1e3;class eF{constructor(e,t,n,s,r,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=a,this.trackingKeyframeList=[];for(let e=0;e<t.length;e++)this.trackingKeyframeList.push(t[e][1]);let i=0;for(let e=0;e<this.trackingKeyframeList.length;e++)i=Math.max(i,this.trackingKeyframeList[e].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let e=0;e<this.trackingKeyframeList.length;e++){const{featurePoints:t,imagePixels:n,imageProperties:s}=this._prebuild(this.trackingKeyframeList[e],i);this.featurePointsListT[e]=t,this.imagePixelsListT[e]=n,this.imagePropertiesListT[e]=s}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let s={};const r=((e,t)=>[[e[0][0]*t[0][0]+e[0][2]*t[2][0],e[0][0]*t[0][1]+e[0][2]*t[2][1],e[0][0]*t[0][2]+e[0][2]*t[2][2],e[0][0]*t[0][3]+e[0][2]*t[2][3]],[e[1][1]*t[1][0]+e[1][2]*t[2][0],e[1][1]*t[1][1]+e[1][2]*t[2][1],e[1][1]*t[1][2]+e[1][2]*t[2][2],e[1][1]*t[1][3]+e[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]])(this.projectionTransform,t),a=this._buildAdjustedModelViewTransform(r);this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height;const i=this.featurePointsListT[n],o=this.imagePixelsListT[n],l=this.imagePropertiesListT[n],u=this._computeProjection(a,e,n),{matchingPointsT:c,simT:h}=this._computeMatching(i,o,l,u),d=c.arraySync(),p=h.arraySync(),f=this.trackingKeyframeList[n],m=[],g=[],b=[];for(let e=0;e<d.length;e++)if(p[e]>.8&&e<f.points.length){b.push(e);const t=jz(r,d[e][0],d[e][1]);g.push(t),m.push({x:f.points[e].x/f.scale,y:f.points[e].y/f.scale,z:0})}return this.debugMode&&(s={projectedImage:u.arraySync(),matchingPoints:c.arraySync(),goodTrack:b,trackedPoints:g}),a.dispose(),u.dispose(),c.dispose(),h.dispose(),{worldCoords:m,screenCoords:g,debugExtra:s}}_computeMatching(e,t,n,s){const r=s.shape[0],a=s.shape[1],i=e.shape[0];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${a} - 6) || sy < 6 || sy >= (${r} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return Da((()=>{const r=this.kernelCaches.computeMatching,a=this._compileAndRun(r[0],[e,t,n,s]),i=a.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[e,n,i]),simT:this._compileAndRun(r[2],[a,i])}}))}_computeProjection(e,t,n){const s=this.trackingKeyframeList[n].width,r=this.trackingKeyframeList[n].height,a=this.trackingKeyframeList[n].scale,i=s+"-"+r+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const e={variableNames:["M","pixel"],outputShape:[r,s],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${a});\n\t      float x = float(coords[1]) / float(${a});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=e}return Da((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return Da((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let s=0;s<e[n].length;s++)t[n].push(e[n][s]/qz)}return Ur(t,[3,4])}))}_prebuild(e,t){return Da((()=>{const n=e.scale,s=[];for(let r=0;r<t;r++)r<e.points.length?s.push([e.points[r].x/n,e.points[r].y/n]):s.push([-1,-1]);const r=Ur(e.data,[e.width*e.height]),a=Ur([e.width,e.height,e.scale],[3]);return{featurePoints:Ur(s,[s.length,2],"float32"),imagePixels:r,imageProperties:a}}))}_compileAndRun(e,t){const n=Ba().compileAndRun(e,t);return Za().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}const tF=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],nF=[];for(let e=0;e<tF.length;e++){const t=tF[e].sigma;for(let n=0;n<tF[e].points.length;n++){const s=tF[e].points[n];nF.push([t,s[0],s[1]])}}const sF={};const rF={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,[s,r]=function(e){const t=e.shape[1],n="w"+t;if(!sF.hasOwnProperty(n)){const s=e.shape[0],r={variableNames:["p"],outputShape:[s,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0], coords[1]-2);\n          sum += getP(coords[0], coords[1]-1) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0], coords[1]+1) * 4.;\n          sum += getP(coords[0], coords[1]+2);\n          setOutput(sum);\n        }\n      "},a={variableNames:["p"],outputShape:[s,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0]-2, coords[1]);\n          sum += getP(coords[0]-1, coords[1]) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0]+1, coords[1]) * 4.;\n          sum += getP(coords[0]+2, coords[1]);\n          sum /= 256.;\n          setOutput(sum);\n        }\n      "};sF[n]=[r,a]}return sF[n]}(t),a=n.runWebGLProgram(s,[t],t.dtype),i=n.runWebGLProgram(r,[a],t.dtype);return n.disposeIntermediateTensorInfo(a),i}},aF={};const iF={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:e=>{let{image0:t,image1:n,image2:s}=e.inputs;const r=e.backend,a=function(e){const t=e.shape[1],n="w"+t;if(!aF.hasOwnProperty(n)){const s=e.shape[0],r={variableNames:["image0","image1","image2"],outputShape:[s,t],userCode:`\n        void main() {\n          ivec2 coords = getOutputCoords();\n    \n          int y = coords[0];\n          int x = coords[1];\n    \n          float value = getImage1(y, x);\n    \n          // Step 1: find local maxima/minima\n          if (value * value < 9.) {\n            setOutput(0.);\n            return;\n          }\n          if (y < 7 || y > ${s-1-7}) {\n            setOutput(0.);\n            return;\n          }\n          if (x < 7 || x > ${t-1-7}) {\n            setOutput(0.);\n            return;\n          }\n    \n          bool isMax = true;\n          bool isMin = true;\n          for (int dy = -1; dy <= 1; dy++) {\n            for (int dx = -1; dx <= 1; dx++) {\n              float value0 = getImage0(y+dy, x+dx);\n              float value1 = getImage1(y+dy, x+dx);\n              float value2 = getImage2(y+dy, x+dx);\n    \n        if (value < value0 || value < value1 || value < value2) {\n          isMax = false;\n        }\n        if (value > value0 || value > value1 || value > value2) {\n          isMin = false;\n        }\n            }\n          }\n    \n          if (!isMax && !isMin) {\n            setOutput(0.);\n            return;\n          }\n    \n          // compute edge score and reject based on threshold\n          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n    \n          float det = (dxx * dyy) - (dxy * dxy);\n    \n          if (abs(det) < 0.0001) { // determinant undefined. no solution\n            setOutput(0.);\n            return;\n          }\n    \n          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n    \n          if (abs(edgeScore) >= 6.25 ) {\n            setOutput(0.);\n            return;\n          }\n          setOutput(getImage1(y,x));\n        }\n      `};aF[n]=r}return aF[n]}(n);return t=Za().runKernel("DownsampleBilinear",{image:t}),s=Za().runKernel("UpsampleBilinear",{image:s,targetImage:n}),r.runWebGLProgram(a,[t,n,s],n.dtype)}},oF={};const lF={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:e=>{const{histograms:t}=e.inputs,n=e.backend,s=function(e){const t=e.shape[0];if(!oF.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n            void main() {\n                int featureIndex = getOutputCoords();\n\n                int maxIndex = 0;\n                for (int i = 1; i < 36; i++) {\n                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n                        maxIndex = i;\n                    }\n                }\n\n                int prev = imod(maxIndex - 1 + 36, 36);\n                int next = imod(maxIndex + 1, 36);\n\n                /**\n                 * Fit a quatratic to 3 points. The system of equations is:\n                 *\n                 * y0 = A*x0^2 + B*x0 + C\n                 * y1 = A*x1^2 + B*x1 + C\n                 * y2 = A*x2^2 + B*x2 + C\n                 *\n                 * This system of equations is solved for A,B,C.\n                 */\n                float p10 = float(maxIndex - 1);\n                float p11 = getHistogram(featureIndex, prev); \n                float p20 = float(maxIndex);\n                float p21 = getHistogram(featureIndex, maxIndex); \n                float p30 = float(maxIndex + 1);\n                float p31 = getHistogram(featureIndex, next); \n\n                float d1 = (p30-p20)*(p30-p10);\n                float d2 = (p10-p20)*(p30-p10);\n                float d3 = p10-p20;\n\n                // If any of the denominators are zero then, just use maxIndex.\n                    float fbin = float(maxIndex);\n                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n                float a = p10*p10;\n                float b = p20*p20;\n\n                // Solve for the coefficients A,B,C\n                float A = ((p31-p21)/d1)-((p11-p21)/d2);\n                float B = ((p11-p21)+(A*(b-a)))/d3;\n                float C = p11-(A*a)-(B*p10);\n                fbin = -B / (2. * A);\n                }\n\n                float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n                setOutput(an);\n            }\n            `};oF[t]=n}return oF[t]}(t);return n.runWebGLProgram(s,[t],t.dtype)}},uF={};const cF={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremas:n,prunedExtremasAngles:s,freakPointsT:r,pyramidImagesLength:a}=e.inputs,i=e.backend,o=function(e,t){const n=`${e}|${t.shape[0]}`;if(!uF.hasOwnProperty(n)){const s=[];for(let t=1;t<e;t++)s.push("image"+t);let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)r+=`\n  if (octave == ${t}) {\n\treturn getImage${t}(y, x);\n  }\n`;r+="}";const a={variableNames:[...s,"extrema","angles","freakPoints"],outputShape:[t.shape[0],nF.length],userCode:`\n  ${r}\n  void main() {\n\tivec2 coords = getOutputCoords();\n\tint featureIndex = coords[0];\n\tint freakIndex = coords[1];\n\n\tfloat freakSigma = getFreakPoints(freakIndex, 0);\n\tfloat freakX = getFreakPoints(freakIndex, 1);\n\tfloat freakY = getFreakPoints(freakIndex, 2);\n\n\tint octave = int(getExtrema(featureIndex, 1));\n\tfloat inputY = getExtrema(featureIndex, 2);\n\tfloat inputX = getExtrema(featureIndex, 3);\n\tfloat inputAngle = getAngles(featureIndex);\n\tfloat cos = 7. * cos(inputAngle);\n\tfloat sin = 7. * sin(inputAngle);\n\n\tfloat yp = inputY + freakX * sin + freakY * cos;\n\tfloat xp = inputX + freakX * cos + freakY * -sin;\n\n\tint x0 = int(floor(xp));\n\tint x1 = x0 + 1;\n\tint y0 = int(floor(yp));\n\tint y1 = y0 + 1;\n\n\tfloat f1 = getPixel(octave, y0, x0);\n\tfloat f2 = getPixel(octave, y0, x1);\n\tfloat f3 = getPixel(octave, y1, x0);\n\tfloat f4 = getPixel(octave, y1, x1);\n\n\tfloat x1f = float(x1);\n\tfloat y1f = float(y1);\n\tfloat x0f = float(x0);\n\tfloat y0f = float(y0);\n\n\t// ratio for interpolation between four neighbouring points\n\tfloat value = (x1f - xp) * (y1f - yp) * f1\n\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\tsetOutput(value);\n  }\n`};uF[n]=a}return uF[n]}(a,n);return i.runWebGLProgram(o,[...t,n,s,r],"float32")}},hF=(nF.length-1)*nF.length/2,dF=Math.ceil(hF/8),pF={};const fF={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:e=>{const{extremaFreaks:t,positionT:n}=e.inputs,{backend:s}=e,r=function(e){const t=`${e.shape[0]}`;if(!pF.hasOwnProperty(t)){const n={variableNames:["freak","p"],outputShape:[e.shape[0],dF],userCode:`\n  void main() {\n    ivec2 coords = getOutputCoords();\n    int featureIndex = coords[0];\n    int descIndex = coords[1] * 8;\n\n    int sum = 0;\n    for (int i = 0; i < 8; i++) {\n      if (descIndex + i >= ${hF}) {\n        continue;\n      }\n\n      int p1 = int(getP(descIndex + i, 0));\n      int p2 = int(getP(descIndex + i, 1));\n\n      float v1 = getFreak(featureIndex, p1);\n      float v2 = getFreak(featureIndex, p2);\n\n      if (v1 < v2 + 0.01) {\n        sum += int(pow(2.0, float(7 - i)));\n      }\n    }\n    setOutput(float(sum));\n  }\n`};pF[t]=n}return pF[t]}(t);return s.runWebGLProgram(r,[t,n],"int32")}},mF={};const gF={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:e=>{const{prunedExtremasList:t,dogPyramidImagesT:n}=e.inputs,s=e.backend,r=function(e,t){const n=`${e}|${t}`;if(!mF.hasOwnProperty(n)){const s=[];let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)s.push("image"+t),r+=`\n\t\t\t\tif (octave == ${t}) {\n\t\t\t\t\treturn getImage${t}(y, x);\n\t\t\t\t}\n\t\t\t`;r+="}",mF[n]={variableNames:[...s,"extrema"],outputShape:[t,3,3],userCode:`\n\t\t\t${r}\n\t\t\n\t\t\tvoid main() {\n\t\t\t\tivec3 coords = getOutputCoords();\n\t\t\t\tint featureIndex = coords[0];\n\t\t\t\tfloat score = getExtrema(featureIndex, 0);\n\t\t\t\tif (score == 0.0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tint dy = coords[1]-1;\n\t\t\t\tint dx = coords[2]-1;\n\t\t\t\tint octave = int(getExtrema(featureIndex, 1));\n\t\t\t\tint y = int(getExtrema(featureIndex, 2));\n\t\t\t\tint x = int(getExtrema(featureIndex, 3));\n\t\t\t\tsetOutput(getPixel(octave, y+dy, x+dx));\n\t\t\t}\n\t\t\t`}}return mF[n]}(n.length,t.length),a=Ur(t,[t.length,t[0].length],"int32");return s.runWebGLProgram(r,[...n.slice(1),a],n[0].dtype)}},bF=36,yF={};const xF={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremasT:n,radialPropertiesT:s,pyramidImagesLength:r}=e.inputs,a=e.backend,[i,o]=function(e,t,n){const s=`${n}|${e.shape[0]}|${t.shape[0]}`;if(!yF.hasOwnProperty(s)){const r=[];for(let e=1;e<n;e++)r.push("image"+e);let a="float getPixel(int octave, int y, int x) {";for(let e=1;e<n;e++)a+=`\n            if (octave == ${e}) {\n                return getImage${e}(y, x);\n            }\n            `;a+="}";const i={variableNames:[...r,"extrema","radial"],outputShape:[e.shape[0],t.shape[0],2],userCode:`\n                ${a}\n\n                void main() {\n                    ivec3 coords = getOutputCoords();\n                    int featureIndex = coords[0];\n                    int radialIndex = coords[1];\n                    int propertyIndex = coords[2];\n\n                    int radialY = int(getRadial(radialIndex, 0));\n                    int radialX = int(getRadial(radialIndex, 1));\n                    float radialW = getRadial(radialIndex, 2);\n\n                    int octave = int(getExtrema(featureIndex, 1));\n                    int y = int(getExtrema(featureIndex, 2));\n                    int x = int(getExtrema(featureIndex, 3));\n\n                    int xp = x + radialX;\n                    int yp = y + radialY;\n\n                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n                    if (propertyIndex == 0) {\n                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n                    \n                    float angle = atan(dy, dx) + ${Math.PI};\n                    float fbin = angle * 36. * 0.159154943091895;\n                    setOutput(fbin);\n                    return;\n                    }\n\n                    if (propertyIndex == 1) {\n                        float mag = sqrt(dx * dx + dy * dy);\n                        float magnitude = radialW * mag;\n                        setOutput(magnitude);\n                        return;\n                    }\n                }\n\n                `},o={variableNames:["fbinMag"],outputShape:[e.shape[0],bF],userCode:`\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                float sum = 0.;\n                for (int i = 0; i < ${t.shape[0]}; i++) {\n                    float fbin = getFbinMag(featureIndex, i, 0);\n                    int bin = int(floor(fbin - 0.5));\n                    int b1 = imod(bin + 36, 36);\n                    int b2 = imod(bin + 1 + 36, 36);\n\n                    if (b1 == binIndex || b2 == binIndex) {\n                        float magnitude = getFbinMag(featureIndex, i, 1);\n                        float w2 = fbin - float(bin) - 0.5;\n                        float w1 = w2 * -1. + 1.;\n\n                        if (b1 == binIndex) {\n                            sum += w1 * magnitude;\n                        }\n                        if (b2 == binIndex) {\n                            sum += w2 * magnitude;\n                        }\n                    }\n                }\n                setOutput(sum);\n            }\n            `};yF[s]=[i,o]}return yF[s]}(n,s,r),l=a.runWebGLProgram(i,[...t,n,s],s.dtype),u=a.runWebGLProgram(o,[l],s.dtype);return a.disposeIntermediateTensorInfo(l),u}},vF={};const wF={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,s=function(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(!vF.hasOwnProperty(s)){const e={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(n/2)],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int y = coords[0] * 2;\n                int x = coords[1] * 2;\n        \n                float sum = getP(y, x) * 0.25;\n                sum += getP(y+1,x) * 0.25; \n                sum += getP(y, x+1) * 0.25; \n                sum += getP(y+1,x+1) * 0.25;\n                setOutput(sum);\n            }\n            "};vF[s]=e}return vF[s]}(t);return n.runWebGLProgram(s,[t],t.dtype)}},kF={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:e=>{const{extremasResultT:t}=e.inputs,n=e.backend,s=t.shape[0],r=t.shape[1],a={variableNames:["extrema"],outputShape:[Math.floor(s/2),Math.floor(r/2)],userCode:"\n\t\t  void main() {\n\t\t\tivec2 coords = getOutputCoords();\n\t\t\tint y = coords[0] * 2;\n\t\t\tint x = coords[1] * 2;\n  \n\t\t\tfloat location = 0.0;\n\t\t\tfloat values = getExtrema(y, x);\n  \n\t\t\tif (getExtrema(y+1, x) != 0.0) {\n\t\t\t  location = 1.0;\n\t\t  values = getExtrema(y+1, x);\n\t\t\t}\n\t\t\telse if (getExtrema(y, x+1) != 0.0) {\n\t\t\t  location = 2.0;\n\t\t  values = getExtrema(y, x+1);\n\t\t\t}\n\t\t\telse if (getExtrema(y+1, x+1) != 0.0) {\n\t\t\t  location = 3.0;\n\t\t  values = getExtrema(y+1, x+1);\n\t\t\t}\n  \n\t\t\tif (values < 0.0) {\n\t\t\t  setOutput(location * -1000.0 + values);\n\t\t\t} else {\n\t\t\t  setOutput(location * 1000.0 + values);\n\t\t\t}\n\t\t  }\n\t\t"};return n.runWebGLProgram(a,[t],t.dtype)}},IF={};const SF={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:e=>{let{histograms:t}=e.inputs;const n=e.backend,s=function(e){const t=`h${e.shape[0]}`;if(!IF.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0],36],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                int prevBin = imod(binIndex - 1 + 36, 36);\n                int nextBin = imod(binIndex + 1, 36);\n                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n                setOutput(result);\n            }\n            "};IF[t]=n}return IF[t]}(t);for(let e=0;e<5;e++){const r=t;t=n.runWebGLProgram(s,[t],t.dtype),e>0&&n.disposeIntermediateTensorInfo(r)}return t}},CF={};const TF={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:e=>{const{image:t,targetImage:n}=e.inputs,s=e.backend,r=function(e,t){const n="w"+e.shape[1];if(!CF.hasOwnProperty(n)){const e={variableNames:["p"],outputShape:[t.shape[0],t.shape[1]],userCode:"\n              void main() {\n                ivec2 coords = getOutputCoords();\n                int j = coords[0];\n                int i = coords[1];\n        \n                float sj = 0.5 * float(j) - 0.25; \n                float si = 0.5 * float(i) - 0.25;\n        \n                float sj0 = floor(sj);\n                float sj1 = ceil(sj);\n                float si0 = floor(si);\n                float si1 = ceil(si);\n        \n                int sj0I = int(sj0);\n                int sj1I = int(sj1);\n                int si0I = int(si0);\n                int si1I = int(si1);\n        \n                float sum = 0.0;\n                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n                setOutput(sum);\n              }\n            "};CF[n]=e}return CF[n]}(t,n);return s.runWebGLProgram(r,[t],t.dtype)}};os(rF),os(iF),os(lF),os(cF),os(fF),os(gF),os(xF),os(wF),os(kF),os(SF),os(TF);nF.length,nF.length;class NF{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=0;for(;e>=8&&t>=8&&(e/=2,t/=2,s++,5!==s););this.numOctaves=s,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null;const n=[];for(let t=0;t<this.numOctaves;t++){let s,r;s=0===t?this._applyFilter(e):this._downsampleBilinear(n[t-1][n[t-1].length-1]),r=this._applyFilter(s),n.push([s,r])}const s=[];for(let e=0;e<this.numOctaves;e++){let t=this._differenceImageBinomial(n[e][0],n[e][1]);s.push(t)}const r=[];for(let e=1;e<this.numOctaves-1;e++){const t=this._buildExtremas(s[e-1],s[e],s[e+1]);r.push(t)}const a=this._applyPrune(r),i=this._computeLocalization(a,s),o=this._computeOrientationHistograms(i,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,i,u),h=this._computeFreakDescriptors(c),d=i.arraySync(),p=u.arraySync(),f=h.arraySync();this.debugMode&&(t={pyramidImages:n.map((e=>e.map((e=>e.arraySync())))),dogPyramidImages:s.map((e=>e?e.arraySync():null)),extremasResults:r.map((e=>e.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:i.arraySync()}),n.forEach((e=>e.forEach((e=>e.dispose())))),s.forEach((e=>e&&e.dispose())),r.forEach((e=>e.dispose())),i.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const m=[];for(let e=0;e<d.length;e++){if(0==d[e][0])continue;const t=[];for(let n=0;n<f[e].length;n+=4){let s=16777216*f[e][n]+65536*f[e][n+1]+256*f[e][n+2]+f[e][n+3];t.push(s)}const n=d[e][1],s=d[e][2],r=d[e][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,a=s*Math.pow(2,n)+Math.pow(2,n-1)-.5,i=Math.pow(2,n);m.push({maxima:d[e][0]>0,x:r,y:a,scale:i,angle:p[e],descriptors:t})}return{featurePoints:m,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let s=0;s<e.shape[1];s++)for(let r=s+1;r<e.shape[1];r++)t.push(s),n.push(r);const s=Ur(t,[t.length]).cast("int32"),r=Ur(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Aa(Pu([s,r],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;return Da((()=>Za().runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t})))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||Da((()=>{const e=Ur(nF);this.tensorCaches._computeExtremaFreak={freakPointsT:Aa(e)}}));const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,r=[];for(let t=1;t<e.length;t++)r.push(e[t][1]);return Da((()=>Za().runKernel("ComputeExtremaFreak",{gaussianImagesT:r,prunedExtremas:t,prunedExtremasAngles:n,freakPointsT:s,pyramidImagesLength:e.length})))}_computeExtremaAngles(e){return Da((()=>Za().runKernel("ComputeExtremaAngles",{histograms:e})))}_computeOrientationHistograms(e,t){const n=[];for(let e=1;e<t.length;e++)n.push(t[e][1]);this.tensorCaches.orientationHistograms||Da((()=>{const e=Math.ceil(4.5),t=[];for(let n=-e;n<=e;n++)for(let s=-e;s<=e;s++){const e=s*s+n*n;if(e<=20.25){const r=-.05555555555555555*e;let a=.0013888888*(720+r*(720+r*(360+r*(120+r*(30+r*(6+r))))));t.push([n,s,a])}}this.tensorCaches.orientationHistograms={radialPropertiesT:Aa(Ur(t,[t.length,3]))}}));const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;return Da((()=>Za().runKernel("ComputeOrientationHistograms",{gaussianImagesT:n,prunedExtremasT:e,radialPropertiesT:s,pyramidImagesLength:t.length})))}_smoothHistograms(e){return Da((()=>Za().runKernel("SmoothHistograms",{histograms:e})))}_computeLocalization(e,t){return Da((()=>{const n=Za().runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),s=[];for(let e=0;e<n.length;e++){s.push([]);for(let t=0;t<n[e].length;t++)s[e].push([])}const r=[];for(let t=0;t<e.length;t++)r[t]=[e[t][0],e[t][1],e[t][2],e[t][3]];for(let e=0;e<r.length;e++){if(0===r[e][0])continue;const t=n[e],s=.5*(t[1][2]-t[1][0]),a=.5*(t[2][1]-t[0][1]),i=t[1][2]+t[1][0]-2*t[1][1],o=t[2][1]+t[0][1]-2*t[1][1],l=.25*(t[0][0]+t[2][2]-t[0][2]-t[2][0]),u=i*o-l*l,c=(o*-s+-l*-a)/u,h=(-l*-s+i*-a)/u,d=r[e][2]+h,p=r[e][3]+c;Math.abs(u)<1e-4||(r[e][2]=d,r[e][3]=p)}return Ur(r,[r.length,r[0].length],"float32")}))}_applyPrune(e){const t=[],n=[];for(let e=0;e<100;e++){n.push([]),t.push([]);for(let s=0;s<5;s++)n[e].push([0,0,0,0]),t[e].push(0)}Da((()=>{for(let s=0;s<e.length;s++){const r=Za().runKernel("ExtremaReduction",{extremasResultT:e[s]}),a=s+1,i=r.arraySync(),o=r.shape[0],l=r.shape[1],u=2*l/10,c=2*o/10;for(let e=0;e<o;e++)for(let s=0;s<l;s++){const r=i[e][s];if(0==r)continue;const o=r%1e3,l=Math.floor(Math.abs(r)/1e3),h=2*s+(2===l||3===l?1:0),d=2*e+(1===l||3===l?1:0),p=Math.floor(h/u),f=10*Math.floor(d/c)+p,m=Math.abs(o);let g=5;for(;g>=1&&m>t[f][g-1];)g-=1;if(g<5){for(let e=4;e>=g+1;e--)t[f][e]=t[f][e-1],n[f][e][0]=n[f][e-1][0],n[f][e][1]=n[f][e-1][1],n[f][e][2]=n[f][e-1][2],n[f][e][3]=n[f][e-1][3];t[f][g]=m,n[f][g][0]=o,n[f][g][1]=a,n[f][g][2]=d,n[f][g][3]=h}}}}));const s=[];for(let e=0;e<100;e++)for(let t=0;t<5;t++)s.push(n[e][t]);return s}_buildExtremas(e,t,n){return Da((()=>Za().runKernel("BuildExtremas",{image0:e,image1:t,image2:n})))}_differenceImageBinomial(e,t){return Da((()=>e.sub(t)))}_applyFilter(e){return Da((()=>Za().runKernel("BinomialFilter",{image:e})))}_downsampleBilinear(e){return Da((()=>Za().runKernel("DownsampleBilinear",{image:e})))}_compileAndRun(e,t){const n=Ba().compileAndRun(e,t);return Za().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=Ba().runWebGLProgram(e,t,n);return Za().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}class RF{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=Math.min(e,t)/2,r=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=r,this.detector=new NF(r,r,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),s=this._detect(e,n,t);return this.debugMode&&(s.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),s}detectMoving(e){const t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let s=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),r=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return r<0&&(r=0),s<0&&(s=0),r>=this.width-this.cropSize&&(r=this.width-this.cropSize-1),s>=this.height-this.cropSize&&(s=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,r,s)}_detect(e,t,n){const s=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:r,debugExtra:a}=this.detector.detect(s);return r.forEach((e=>{e.x+=t,e.y+=n})),this.debugMode&&(a.projectedImage=s.arraySync()),s.dispose(),{featurePoints:r,debugExtra:a}}}const GF=({image:e,ratio:t})=>{const n=Math.round(e.width*t),s=Math.round(e.height*t),r=new Uint8Array(n*s);for(let a=0;a<n;a++){let i=Math.round(1*a/t),o=Math.round(1*(a+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<s;l++){let s=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,h=0;for(let t=i;t<=o;t++)for(let n=s;n<=u;n++)c+=1*e.data[n*e.width+t],h+=1;r[l*n+a]=Math.floor(c/h)}}return{data:r,width:n,height:s}},LF=e=>{const t=[];let n=100/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const s=[];for(let n=0;n<t.length;n++)e.width,t[n],e.height,t[n],s.push(Object.assign(GF({image:e,ratio:t[n]}),{scale:t[n]}));return s},WF=e=>{const t=Math.min(e.width,e.height),n=[],s=[];n.push(256/t),n.push(128/t);for(let t=0;t<n.length;t++)s.push(Object.assign(GF({image:e,ratio:n[t]}),{scale:n[t]}));return s},EF=e=>{const{v1:t,v2:n}=e;let s=0;for(let e=0;e<t.length;e++){let r=(t[e]^n[e])>>>0;s+=MF(r)}return s},MF=e=>{var t=e-(e>>1&1431655765);return t=((t=((t=((t=(t>>2&858993459)+(858993459&t))>>4)+t&252645135)>>8)+t&16711935)>>16)+t&65535},$F=()=>({seed:1234,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let e=0;e<n;e++){this.seed=(214013*this.seed+2531011)%-2147483648;let n=this.seed>>16&32767;n%=t.length;let s=t[e];t[e]=t[n],t[n]=s}},nextInt(e){this.seed=(214013*this.seed+2531011)%-2147483648;let t=this.seed>>16&32767;return t%=e,t}}),zF=({points:e})=>{const t=[];for(let n=0;n<e.length;n++)t.push(n);const n=$F();return{rootNode:FF({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}},FF=e=>{const{points:t,pointIndexes:n,centerPointIndex:s,randomizer:r}=e;let a=!1;(n.length<=8||n.length<=16)&&(a=!0);const i={};if(!a){const e=(e=>{const{points:t,pointIndexes:n,randomizer:s}=e,r=[];for(let e=0;e<n.length;e++)r.push(e);let a=Number.MAX_SAFE_INTEGER,i=-1;const o=[];for(let e=0;e<128;e++){s.arrayShuffle({arr:r,sampleSize:8});let l=0;const u=[];for(let e=0;e<n.length;e++){let s=Number.MAX_SAFE_INTEGER;for(let a=0;a<8;a++){const i=n[r[a]],o=EF({v1:t[n[e]].descriptors,v2:t[i].descriptors});o<s&&(u[e]=r[a],s=o)}l+=s}o.push(u),l<a&&(a=l,i=e)}return o[i]})({points:t,pointIndexes:n,randomizer:r});for(let t=0;t<e.length;t++)void 0===i[n[e[t]]]&&(i[n[e[t]]]=[]),i[n[e[t]]].push(n[t])}1===Object.keys(i).length&&(a=!0);const o={centerPointIndex:s};if(a){o.leaf=!0,o.pointIndexes=[];for(let e=0;e<n.length;e++)o.pointIndexes.push(n[e]);return o}return o.leaf=!1,o.children=[],Object.keys(i).forEach((e=>{o.children.push(FF({points:t,pointIndexes:i[e],centerPointIndex:e,randomizer:r}))})),o};var XF={exports:{}};!function(e,t){e.exports=function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t||4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n.r(t),n.d(t,"encode",(function(){return R})),n.d(t,"decode",(function(){return A})),n.d(t,"decodeAsync",(function(){return Q})),n.d(t,"decodeArrayStream",(function(){return j})),n.d(t,"decodeStream",(function(){return q})),n.d(t,"Decoder",(function(){return D})),n.d(t,"Encoder",(function(){return T})),n.d(t,"ExtensionCodec",(function(){return I})),n.d(t,"ExtData",(function(){return p})),n.d(t,"EXT_TIMESTAMP",(function(){return g})),n.d(t,"encodeDateToTimeSpec",(function(){return y})),n.d(t,"encodeTimeSpecToTimestamp",(function(){return b})),n.d(t,"decodeTimestampToTimeSpec",(function(){return v})),n.d(t,"encodeTimestampExtension",(function(){return x})),n.d(t,"decodeTimestampExtension",(function(){return w}));var s=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var s,r,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(s=a.next()).done;)i.push(s.value)}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return i},r=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e},a=typeof process<"u"&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function i(e){for(var t=e.length,n=0,s=0;s<t;){var r=e.charCodeAt(s++);if(0!=(4294967168&r))if(0==(4294965248&r))n+=2;else{if(r>=55296&&r<=56319&&s<t){var a=e.charCodeAt(s);56320==(64512&a)&&(++s,r=((1023&r)<<10)+(1023&a)+65536)}n+=0==(4294901760&r)?3:4}else n++}return n}var o=a?new TextEncoder:void 0,l=typeof process<"u"?200:0,u=null!=o&&o.encodeInto?function(e,t,n){o.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(o.encode(e),n)};function c(e,t,n){for(var s=t,a=s+n,i=[],o="";s<a;){var l=e[s++];if(0==(128&l))i.push(l);else if(192==(224&l)){var u=63&e[s++];i.push((31&l)<<6|u)}else if(224==(240&l)){u=63&e[s++];var c=63&e[s++];i.push((31&l)<<12|u<<6|c)}else if(240==(248&l)){var h=(7&l)<<18|(u=63&e[s++])<<12|(c=63&e[s++])<<6|63&e[s++];h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h)}else i.push(l);i.length>=4096&&(o+=String.fromCharCode.apply(String,r(i)),i.length=0)}return i.length>0&&(o+=String.fromCharCode.apply(String,r(i))),o}var h=a?new TextDecoder:null,d=typeof process<"u"?200:0,p=function(e,t){this.type=e,this.data=t};function f(e,t,n){var s=Math.floor(n/4294967296),r=n;e.setUint32(t,s),e.setUint32(t+4,r)}function m(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var g=-1;function b(e){var t,n=e.sec,s=e.nsec;if(n>=0&&s>=0&&n<=17179869183){if(0===s&&n<=4294967295){var r=new Uint8Array(4);return(t=new DataView(r.buffer)).setUint32(0,n),r}var a=n/4294967296,i=4294967295&n;return r=new Uint8Array(8),(t=new DataView(r.buffer)).setUint32(0,s<<2|3&a),t.setUint32(4,i),r}return r=new Uint8Array(12),(t=new DataView(r.buffer)).setUint32(0,s),f(t,4,n),r}function y(e){var t=e.getTime(),n=Math.floor(t/1e3),s=1e6*(t-1e3*n),r=Math.floor(s/1e9);return{sec:n+r,nsec:s-1e9*r}}function x(e){return e instanceof Date?b(y(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:m(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function w(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var k={type:g,encode:x,decode:w},I=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return e.prototype.register=function(e){var t=e.type,n=e.encode,s=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=s;else{var r=1+t;this.builtInEncoders[r]=n,this.builtInDecoders[r]=s}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(s=this.builtInEncoders[n])&&null!=(r=s(e,t)))return new p(-1-n,r);for(n=0;n<this.encoders.length;n++){var s,r;if(null!=(s=this.encoders[n])&&null!=(r=s(e,t)))return new p(n,r)}return e instanceof p?e:null},e.prototype.decode=function(e,t,n){var s=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return s?s(e,t,n):new p(t,e)},e.defaultCodec=new e,e}();function S(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var C=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],s=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&s>=e.length&&(e=void 0),{value:e&&e[s++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function e(e,t,n,s,r,a,i){void 0===e&&(e=I.defaultCodec),void 0===n&&(n=100),void 0===s&&(s=2048),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===i&&(i=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=s,this.sortKeys=r,this.forceFloat32=a,this.ignoreUndefined=i,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.encode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),s=new DataView(t);n.set(this.bytes),this.view=s,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(a&&t>l){var n=i(e);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),u(e,this.bytes,this.pos),this.pos+=n}else n=i(e),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(e,t,n){for(var s=e.length,r=n,a=0;a<s;){var i=e.charCodeAt(a++);if(0!=(4294967168&i)){if(0==(4294965248&i))t[r++]=i>>6&31|192;else{if(i>=55296&&i<=56319&&a<s){var o=e.charCodeAt(a);56320==(64512&o)&&(++a,i=((1023&i)<<10)+(1023&o)+65536)}0==(4294901760&i)?(t[r++]=i>>12&15|224,t[r++]=i>>6&63|128):(t[r++]=i>>18&7|240,t[r++]=i>>12&63|128,t[r++]=i>>6&63|128)}t[r++]=63&i|128}else t[r++]=i}}(e,this.bytes,this.pos),this.pos+=n},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var n=S(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n,s,r=e.length;if(r<16)this.writeU8(144+r);else if(r<65536)this.writeU8(220),this.writeU16(r);else{if(!(r<4294967296))throw new Error("Too large array: "+r);this.writeU8(221),this.writeU32(r)}try{for(var a=C(e),i=a.next();!i.done;i=a.next()){var o=i.value;this.encode(o,t+1)}}catch(e){n={error:e}}finally{try{i&&!i.done&&(s=a.return)&&s.call(a)}finally{if(n)throw n.error}}},e.prototype.countWithoutUndefined=function(e,t){var n,s,r=0;try{for(var a=C(t),i=a.next();!i.done;i=a.next())void 0!==e[i.value]&&r++}catch(e){n={error:e}}finally{try{i&&!i.done&&(s=a.return)&&s.call(a)}finally{if(n)throw n.error}}return r},e.prototype.encodeMap=function(e,t){var n,s,r=Object.keys(e);this.sortKeys&&r.sort();var a=this.ignoreUndefined?this.countWithoutUndefined(e,r):r.length;if(a<16)this.writeU8(128+a);else if(a<65536)this.writeU8(222),this.writeU16(a);else{if(!(a<4294967296))throw new Error("Too large map object: "+a);this.writeU8(223),this.writeU32(a)}try{for(var i=C(r),o=i.next();!o.done;o=i.next()){var l=o.value,u=e[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,t+1))}}catch(e){n={error:e}}finally{try{o&&!o.done&&(s=i.return)&&s.call(i)}finally{if(n)throw n.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){var t,n,s,r,a;this.ensureBufferSizeToWrite(8),t=this.view,n=this.pos,r=(s=e)/4294967296,a=s,t.setUint32(n,r),t.setUint32(n+4,a),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e}(),N={};function R(e,t){void 0===t&&(t=N);var n=new T(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined);return n.encode(e,1),n.getUint8Array()}function G(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var L=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,n){var s=this.caches[n-1],r=s.length;e:for(var a=0;a<r;a++){for(var i=s[a],o=i.bytes,l=0;l<n;l++)if(o[l]!==e[t+l])continue e;return i.value}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],s={bytes:e,value:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=s:n.push(s)},e.prototype.decode=function(e,t,n){var s=this.get(e,t,n);if(null!=s)return s;var r=c(e,t,n),a=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(a,r),r},e}(),W=function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))},E=function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},M=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t);function s(n){t[n]=e[n]&&function(t){return new Promise((function(s,r){var a,i,o,l;a=s,i=r,o=(t=e[n](t)).done,l=t.value,Promise.resolve(l).then((function(e){a({value:e,done:o})}),i)}))}}},$=function(e){return this instanceof $?(this.v=e,this):new $(e)},z=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,r=n.apply(e,t||[]),a=[];return s={},i("next"),i("throw"),i("return"),s[Symbol.asyncIterator]=function(){return this},s;function i(e){r[e]&&(s[e]=function(t){return new Promise((function(n,s){a.push([e,t,n,s])>1||o(e,t)}))})}function o(e,t){try{(n=r[e](t)).value instanceof $?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}},F=new DataView(new ArrayBuffer(0)),X=new Uint8Array(F.buffer),V=function(){try{F.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),Z=new V("Insufficient data"),K=new L,D=function(){function e(e,t,n,s,r,a,i,o){void 0===e&&(e=I.defaultCodec),void 0===n&&(n=4294967295),void 0===s&&(s=4294967295),void 0===r&&(r=4294967295),void 0===a&&(a=4294967295),void 0===i&&(i=4294967295),void 0===o&&(o=K),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=s,this.maxArrayLength=r,this.maxMapLength=a,this.maxExtLength=i,this.cachedKeyDecoder=o,this.totalPos=0,this.pos=0,this.view=F,this.bytes=X,this.headByte=-1,this.stack=[]}return e.prototype.setBuffer=function(e){this.bytes=S(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=S(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),n=S(e),s=new Uint8Array(t.length+n.length);s.set(t),s.set(n,t.length),this.setBuffer(s)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,n=this.pos;return new RangeError("Extra "+(t.byteLength-n)+" byte(s) found at buffer["+e+"]")},e.prototype.decodeSingleSync=function(){var e=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeSingleAsync=function(e){var t,n,s,r;return W(this,void 0,void 0,(function(){var a,i,o,l,u,c,h,d;return E(this,(function(p){switch(p.label){case 0:a=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),t=M(e),p.label=2;case 2:return[4,t.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,a)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o);try{i=this.decodeSync(),a=!0}catch(e){if(!(e instanceof V))throw e}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),s={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(r=t.return)?[4,r.call(t)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(s)throw s.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,i]}throw c=(u=this).headByte,h=u.pos,d=u.totalPos,new RangeError("Insufficient data in parcing "+G(c)+" at "+d+" ("+h+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return z(this,arguments,(function(){var n,s,r,a,i,o,l,u,c;return E(this,(function(h){switch(h.label){case 0:n=t,s=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),r=M(e),h.label=2;case 2:return[4,$(r.next())];case 3:if((a=h.sent()).done)return[3,12];if(i=a.value,t&&0===s)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(i),n&&(s=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,$(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--s?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof V))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(c=r.return)?[4,$(c.call(r))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.decodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(s=e-128)){this.pushMapState(s),this.complete();continue e}t={}}else if(e<160){if(0!=(s=e-144)){this.pushArrayState(s),this.complete();continue e}t=[]}else{var n=e-160;t=this.decodeUtf8String(n,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)n=this.lookU8(),t=this.decodeUtf8String(n,1);else if(218===e)n=this.lookU16(),t=this.decodeUtf8String(n,2);else if(219===e)n=this.lookU32(),t=this.decodeUtf8String(n,4);else if(220===e){if(0!==(s=this.readU16())){this.pushArrayState(s),this.complete();continue e}t=[]}else if(221===e){if(0!==(s=this.readU32())){this.pushArrayState(s),this.complete();continue e}t=[]}else if(222===e){if(0!==(s=this.readU16())){this.pushMapState(s),this.complete();continue e}t={}}else if(223===e){if(0!==(s=this.readU32())){this.pushMapState(s),this.complete();continue e}t={}}else if(196===e){var s=this.lookU8();t=this.decodeBinary(s,1)}else if(197===e)s=this.lookU16(),t=this.decodeBinary(s,2);else if(198===e)s=this.lookU32(),t=this.decodeBinary(s,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)s=this.lookU8(),t=this.decodeExtension(s,1);else if(200===e)s=this.lookU16(),t=this.decodeExtension(s,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+G(e));s=this.lookU32(),t=this.decodeExtension(s,4)}this.complete();for(var r=this.stack;r.length>0;){var a=r[r.length-1];if(0===a.type){if(a.array[a.position]=t,a.position++,a.position!==a.size)continue e;r.pop(),t=a.array}else{if(1===a.type){if(i=void 0,"string"!=(i=typeof t)&&"number"!==i)throw new Error("The type of key must be string or number but "+typeof t);a.key=t,a.type=2;continue e}if(a.map[a.key]=t,a.readCount++,a.readCount!==a.size){a.key=null,a.type=1;continue e}r.pop(),t=a.map}}return t}var i},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+G(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw Z;var s,r,i,o,l,u=this.pos+t;return s=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(e))?this.cachedKeyDecoder.decode(this.bytes,u,e):a&&e>d?(r=this.bytes,i=u,o=e,l=r.subarray(i,i+o),h.decode(l)):c(this.bytes,u,e),this.pos+=t+e,s},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw Z;var n=this.pos+t,s=this.bytes.subarray(n,n+e);return this.pos+=t+e,s},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+t),s=this.decodeBinary(e,t+1);return this.extensionCodec.decode(s,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,n=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,n},e.prototype.readI64=function(){var e=m(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),O={};function A(e,t){void 0===t&&(t=O);var n=new D(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return n.setBuffer(e),n.decodeSingleSync()}var P=function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},B=function(e){return this instanceof B?(this.v=e,this):new B(e)},H=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,r=n.apply(e,t||[]),a=[];return s={},i("next"),i("throw"),i("return"),s[Symbol.asyncIterator]=function(){return this},s;function i(e){r[e]&&(s[e]=function(t){return new Promise((function(n,s){a.push([e,t,n,s])>1||o(e,t)}))})}function o(e,t){try{(n=r[e](t)).value instanceof B?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}};function U(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function _(e){return null!=e[Symbol.asyncIterator]?e:function(e){return H(this,arguments,(function(){var t,n,s,r;return P(this,(function(a){switch(a.label){case 0:t=e.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,B(t.read())];case 3:return n=a.sent(),s=n.done,r=n.value,s?[4,B(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return U(r),[4,B(r)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}var Y=function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))},J=function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};function Q(e,t){return void 0===t&&(t=O),Y(this,void 0,void 0,(function(){var n;return J(this,(function(s){return n=_(e),[2,new D(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeSingleAsync(n)]}))}))}function j(e,t){void 0===t&&(t=O);var n=_(e);return new D(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(n)}function q(e,t){void 0===t&&(t=O);var n=_(e);return new D(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(n)}}])}(XF);var VF=function(e,t){return Object.assign(document.createElement("canvas"),{width:e,height:t})};class ZF{constructor(e,t,n){this.cumsum=[];for(let e=0;e<n;e++){this.cumsum.push([]);for(let n=0;n<t;n++)this.cumsum[e].push(0)}this.cumsum[0][0]=e[0];for(let n=1;n<t;n++)this.cumsum[0][n]=this.cumsum[0][n-1]+e[n];for(let s=1;s<n;s++)this.cumsum[s][0]=this.cumsum[s-1][0]+e[s*t];for(let s=1;s<n;s++)for(let n=1;n<t;n++)this.cumsum[s][n]=e[s*t+n]+this.cumsum[s-1][n]+this.cumsum[s][n-1]-this.cumsum[s-1][n-1]}query(e,t,n,s){let r=this.cumsum[s][n];return t>0&&(r-=this.cumsum[t-1][n]),e>0&&(r-=this.cumsum[s][e-1]),e>0&&t>0&&(r+=this.cumsum[t-1][e-1]),r}}const KF=e=>{const{data:t,width:n,height:s,scale:r}=e,a=[n*s];for(let e=0;e<a.length;e++)a[e]=!1;const i=new Float32Array(t.length);for(let e=0;e<n;e++)i[e]=-1,i[n*(s-1)+e]=-1;for(let e=0;e<s;e++)i[e*n]=-1,i[e*n+n-1]=-1;for(let e=1;e<n-1;e++)for(let r=1;r<s-1;r++){let s=e+n*r,a=0,o=0;for(let e=-1;e<=1;e++)a+=t[s+n*e+1]-t[s+n*e-1],o+=t[s+n+e]-t[s-n+e];a/=768,o/=768,i[s]=Math.sqrt((a*a+o*o)/2)}const o=new Uint32Array(1e3);for(let e=0;e<1e3;e++)o[e]=0;const l=[-1,1,-n,n];for(let e=1;e<n-1;e++)for(let t=1;t<s-1;t++){let s=e+n*t,r=!0;for(let e=0;e<l.length;e++)if(i[s]<=i[s+l[e]]){r=!1;break}if(r){let e=Math.floor(1e3*i[s]);e>999&&(e=999),e<0&&(e=0),o[e]+=1,a[s]=!0}}const u=.02*n*s;let c=999,h=0;for(;c>=0&&(h+=o[c],!(h>u));)c--;for(let e=0;e<a.length;e++)a[e]&&1e3*i[e]<c&&(a[e]=!1);const d=[];for(let e=0;e<t.length;e++)d[e]=t[e]*t[e];const p=new ZF(t,n,s),f=new ZF(d,n,s),m=new Float32Array(t.length);for(let t=0;t<n;t++)for(let r=0;r<s;r++){const s=r*n+t;if(!a[s]){m[s]=1;continue}const i=OF({image:e,cx:t,cy:r,sdThresh:5,imageDataCumsum:p,imageDataSqrCumsum:f});if(null===i){m[s]=1;continue}let o=-1;for(let n=-10;n<=10;n++){for(let s=-10;s<=10;s++){if(s*s+n*n<=4)continue;const a=AF({image:e,cx:t+s,cy:r+n,vlen:i,tx:t,ty:r,imageDataCumsum:p,imageDataSqrCumsum:f});if(null!==a&&a>o&&(o=a,o>.95))break}if(o>.95)break}m[s]=o}return DF({image:e,featureMap:m,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:p,imageDataSqrCumsum:f})},DF=e=>{let{image:t,featureMap:n,templateSize:s,searchSize:r,occSize:a,maxSimThresh:i,minSimThresh:o,sdThresh:l,imageDataCumsum:u,imageDataSqrCumsum:c}=e;const{data:h,width:d,height:p,scale:f}=t;a=Math.floor(Math.min(t.width,t.height)/10);const m=3*(2*s+1),g=Math.floor(d/m),b=Math.floor(p/m);let y=Math.floor(d/a)*Math.floor(p/a)+g*b;const x=[],v=new Float32Array(h.length);for(let e=0;e<v.length;e++)v[e]=n[e];let w=0;for(;w<y;){let e=i,n=-1,h=-1;for(let t=0;t<p;t++)for(let s=0;s<d;s++)v[t*d+s]<e&&(e=v[t*d+s],n=s,h=t);if(-1===n)break;const f=OF({image:t,cx:n,cy:h,sdThresh:0,imageDataCumsum:u,imageDataSqrCumsum:c});if(null===f){v[h*d+n]=1;continue}if(f/(2*s+1)<l){v[h*d+n]=1;continue}let m=1,g=-1;for(let s=-r;s<=r;s++){for(let a=-r;a<=r;a++){if(a*a+s*s>r*r||0===a&&0===s)continue;const i=AF({image:t,vlen:f,cx:n+a,cy:h+s,tx:n,ty:h,imageDataCumsum:u,imageDataSqrCumsum:c});if(null!==i&&(i<m&&(m=i,m<o&&m<e)||i>g&&(g=i,g>.99)))break}if(m<o&&m<e||g>.99)break}if(m<o&&m<e||g>.99)v[h*d+n]=1;else{x.push({x:n,y:h}),w+=1;for(let e=-a;e<=a;e++)for(let t=-a;t<=a;t++)h+e<0||h+e>=p||n+t<0||n+t>=d||(v[(h+e)*d+(n+t)]=1)}}return x},OF=({image:e,cx:t,cy:n,sdThresh:s,imageDataCumsum:r,imageDataSqrCumsum:a})=>{if(t-6<0||t+6>=e.width||n-6<0||n+6>=e.height)return null;let i=r.query(t-6,n-6,t+6,n+6);i/=169;let o=a.query(t-6,n-6,t+6,n+6);return o-=2*i*r.query(t-6,n-6,t+6,n+6),o+=169*i*i,o/169<s*s?null:(o=Math.sqrt(o),o)},AF=e=>{const{image:t,cx:n,cy:s,vlen:r,tx:a,ty:i,imageDataCumsum:o,imageDataSqrCumsum:l}=e,{data:u,width:c,height:h}=t;if(n-6<0||n+6>=c||s-6<0||s+6>=h)return null;const d=13;let p=o.query(n-6,s-6,n+6,s+6),f=l.query(n-6,s-6,n+6,s+6),m=0,g=(s-6)*c+(n-6),b=(i-6)*c+(a-6),y=c-d;for(let e=0;e<d;e++){for(let e=0;e<d;e++)m+=u[g]*u[b],g+=1,b+=1;g+=y,b+=y}let x=o.query(a-6,i-6,a+6,i+6);x/=169,m-=x*p;let v=f-p*p/169;return 0==v?null:(v=Math.sqrt(v),1*m/(r*v))};class PF{constructor(e=!1){this.data=null,this.avoidWorker=e}compileImageTargets(e,t){return new Promise((async(n,s)=>{const r=[];for(let t=0;t<e.length;t++){const n=e[t],s=VF(n.width,n.height).getContext("2d");s.drawImage(n,0,0,n.width,n.height);const a=s.getImageData(0,0,n.width,n.height),i=new Uint8Array(n.width*n.height);for(let e=0;e<i.length;e++){const t=4*e;i[e]=Math.floor((a.data[t]+a.data[t+1]+a.data[t+2])/3)}const o={data:i,height:n.height,width:n.width};r.push(o)}const a=50/r.length;let i=0;this.data=[];for(let e=0;e<r.length;e++){const n=r[e],s=LF(n),o=a/s.length,l=await BF(s,(()=>{i+=o,t(i)}));this.data.push({targetImage:n,imageList:s,matchingData:l})}for(let e=0;e<r.length;e++){const t=WF(r[e]);this.data[e].trackingImageList=t}const o=await(()=>new Promise(((e,n)=>{if(this.avoidWorker){const n=50/r.length;let s=0;const a=[];for(let e=0;e<r.length;e++){const i=r[e],o=WF(i),l=n/o.length,u=HF(o,(e=>{s+=l,t(50+s)}));a.push(u)}e(a)}else{const n=new Worker(new URL("/assets/compiler.worker.a69dc9d5.js",self.location));n.onmessage=n=>{"progress"===n.data.type?t(50+n.data.percent):"compileDone"===n.data.type&&e(n.data.list)},n.postMessage({type:"compile",targetImages:r})}})))();for(let e=0;e<r.length;e++)this.data[e].trackingData=o[e];n(this.data)}))}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return XF.exports.encode({v:2,dataList:e})}importData(e){const t=XF.exports.decode(new Uint8Array(e));if(!t.v||2!==t.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let e=0;e<n.length;e++)this.data.push({targetImage:n[e].targetImage,trackingData:n[e].trackingData,matchingData:n[e].matchingData});return this.data}}const BF=async(e,t)=>{const n=[];for(let s=0;s<e.length;s++){const r=e[s],a=new NF(r.width,r.height);await rh(),Da((()=>{const e=Ur(r.data,[r.data.length],"float32").reshape([r.height,r.width]),{featurePoints:i}=a.detect(e),o=i.filter((e=>e.maxima)),l=i.filter((e=>!e.maxima)),u=zF({points:o}),c=zF({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:r.width,height:r.height,scale:r.scale}),t(s)}))}return n},HF=(e,t)=>{const n=[];for(let s=0;s<e.length;s++){const r=e[s],a=KF(r),i={data:r.data,scale:r.scale,width:r.width,height:r.height,points:a};n.push(i),t(s)}return n};class UF{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const s=Ba();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return Da((()=>{let t=ei(e);return t=t.mean(2),t}))}loadInput(e){this.context.drawImage(e,0,0,this.width,this.height);const t=Ba();return t.gpgpu.uploadPixelDataToTexture(t.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const n=2===A().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(e,t){const n=Ba().compileAndRun(e,t);return Za().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=Ba().runWebGLProgram(e,t,n);return Za().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const _F=(e,t)=>{const n=2*Math.PI*t*e;return n/(n+1)},YF=(e,t,n)=>e*t+(1-e)*n;class JF{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map((()=>0)),this.tPrev=e,t;const{xPrev:n,tPrev:s,dxPrev:r}=this,a=e-s,i=_F(a,this.dCutOff),o=[],l=[],u=[];for(let e=0;e<t.length;e++){o[e]=(t[e]-n[e])/a,l[e]=YF(i,o[e],r[e]);const s=this.minCutOff+this.beta*Math.abs(l[e]),c=_F(a,s);u[e]=YF(c,t[e],n[e])}return this.xPrev=u,this.dxPrev=l,this.tPrev=e,u}}const QF={memory:Ka,nextFrame:rh};class jF{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,debugMode:s=!1,maxTrack:r=1,warmupTolerance:a=null,missTolerance:i=null,filterMinCF:o=null,filterBeta:l=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=r,this.filterMinCF=null===o?.001:o,this.filterBeta=null===l?1e3:l,this.warmupTolerance=null===a?5:a,this.missTolerance=null===i?5:i,this.cropDetector=new RF(this.inputWidth,this.inputHeight,s),this.inputLoader=new UF(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=45*Math.PI/180,c=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[c,0,this.inputWidth/2],[0,c,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new Qz,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(QF.memory().numTensors),console.table(QF.memory())}addImageTargets(e){return new Promise((async(t,n)=>{const s=await(await fetch(e)).arrayBuffer();t(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(e){const t=(new PF).importData(e),n=[],s=[],r=[];for(let e=0;e<t.length;e++)s.push(t[e].matchingData),n.push(t[e].trackingData),r.push([t[e].targetImage.width,t[e].targetImage.height]);return this.tracker=new eF(r,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:s}),this.markerDimensions=r,{dimensions:r,matchingDataList:s,trackingDataList:n}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:s,modelViewTransform:r}=await this._workerMatch(n,t);return{targetIndex:s,modelViewTransform:r}}async _trackAndUpdate(e,t,n){const{worldCoords:s,screenCoords:r}=this.tracker.track(e,t,n);return s.length<4?null:await this._workerTrackUpdate(t,{worldCoords:s,screenCoords:r})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new JF({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce(((e,t)=>e+(t.isTracking?1:0)),0)<this.maxTrack){const e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));const{targetIndex:n,modelViewTransform:s}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=s)}for(let e=0;e<this.trackingStates.length;e++){const n=this.trackingStates[e];if(n.isTracking){let s=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null===s?n.isTracking=!1:n.currentModelViewTransform=s}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:null})))),n.showing){const t=this._glModelViewMatrix(n.currentModelViewTransform,e);n.trackingMatrix=n.filter.filter(Date.now(),t);const s=[];for(let e=0;e<n.trackingMatrix.length;e++)s[e]=n.trackingMatrix[e];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:s})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await QF.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:s}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:s}}async match(e,t){const{modelViewTransform:n,debugExtra:s}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:s}}async track(e,t,n){const s=this.inputLoader.loadInput(e),r=this.tracker.track(s,t,n);return s.dispose(),r}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,s)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,s)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:r,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:r,screenCoords:a})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:s,far:r}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(r+s)/(r-s),-2*r*s/(r-s)],[0,0,-1,0]],i=[];for(let e=0;e<4;e++)for(let t=0;t<4;t++)i.push(a[t][e]);return i}}class qF{constructor({uiLoading:e,uiScanning:t,uiError:n}){const s=document.createElement("style");s.innerText=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}",document.head.appendChild(s),"yes"===e?this.loadingModal=this._loadHTML('<div class="mindar-ui-overlay mindar-ui-loading">\n  <div class="loader"/>\n</div>\n'):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML('<div class="mindar-ui-overlay mindar-ui-compatibility">\n  <div class="content">\n    <h1>Failed to launch :(</h1>\n    <p>\n      Looks like your device/browser is not compatible.\n    </p>\n\n    <br/>\n    <br/>\n    <p>\n      Please try the following recommended browsers:\n    </p>\n    <p>\n      For Android device - Chrome\n    </p>\n    <p>\n      For iOS device - Safari\n    </p>\n  </div>\n</div>\n'):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML('<div class="mindar-ui-overlay mindar-ui-scanning">\n  <div class="scanning">\n    <div class="inner">\n      <div class="scanline"/>\n    </div>\n  </div>\n</div>\n'):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){!this.loadingModal||this.loadingModal.classList.remove("hidden")}hideLoading(){!this.loadingModal||this.loadingModal.classList.add("hidden")}showCompatibility(){!this.compatibilityModal||this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){!this.compatibilityModal||this.compatibilityModal.classList.add("hidden")}showScanning(){!this.scanningMask||this.scanningMask.classList.remove("hidden")}hideScanning(){!this.scanningMask||this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE={Controller:jF,Compiler:PF,UI:qF},AFRAME.registerSystem("mindar-image-system",{container:null,video:null,processingImage:!1,init:function(){this.anchorEntities=[]},tick:function(){},setup:function({imageTargetSrc:e,maxTrack:t,showStats:n,uiLoading:s,uiScanning:r,uiError:a,missTolerance:i,warmupTolerance:o,filterMinCF:l,filterBeta:u}){this.imageTargetSrc=e,this.maxTrack=t,this.filterMinCF=l,this.filterBeta=u,this.missTolerance=i,this.warmupTolerance=o,this.showStats=n,this.ui=new qF({uiLoading:s,uiScanning:r,uiError:a})},registerAnchor:function(e,t){this.anchorEntities.push({el:e,targetIndex:t})},start:function(){this.container=this.el.sceneEl.parentNode,this.showStats&&(this.mainStats=new Stats,this.mainStats.showPanel(0),this.mainStats.domElement.style.cssText="position:absolute;top:0px;left:0px;z-index:999",this.container.appendChild(this.mainStats.domElement)),this.ui.showLoading(),this._startVideo()},switchTarget:function(e){this.controller.interestedTargetIndex=e},stop:function(){this.pause(),this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove(),this.controller.dispose()},pause:function(e=!1){e||this.video.pause(),this.controller.stopProcessVideo()},unpause:function(){this.video.play(),this.controller.processVideo(this.video)},_startVideo:function(){if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.el.emit("arError",{error:"VIDEO_FAIL"}),void this.ui.showCompatibility();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then((e=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),this._startAR()})),this.video.srcObject=e})).catch((e=>{console.log("getUserMedia error",e),this.el.emit("arError",{error:"VIDEO_FAIL"})}))},_startAR:async function(){const e=this.video;this.container,this.controller=new jF({inputWidth:e.videoWidth,inputHeight:e.videoHeight,maxTrack:this.maxTrack,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,missTolerance:this.missTolerance,warmupTolerance:this.warmupTolerance,onUpdate:e=>{if("processDone"===e.type)this.mainStats&&this.mainStats.update();else if("updateMatrix"===e.type){const{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchorEntities.length;e++)this.anchorEntities[e].targetIndex===t&&(this.anchorEntities[e].el.updateWorldMatrix(n),n&&this.ui.hideScanning())}}}),this._resize(),window.addEventListener("resize",this._resize.bind(this));const{dimensions:t}=await this.controller.addImageTargets(this.imageTargetSrc);for(let e=0;e<this.anchorEntities.length;e++){const{el:n,targetIndex:s}=this.anchorEntities[e];s<t.length&&n.setupMarker(t[s])}await this.controller.dummyRun(this.video),this.el.emit("arReady"),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video)},_resize:function(){const e=this.video,t=this.container;let n,s;const r=e.videoWidth/e.videoHeight;r>t.clientWidth/t.clientHeight?(s=t.clientHeight,n=s*r):(n=t.clientWidth,s=n/r);const a=this.controller.getProjectionMatrix(),i=2*Math.atan(1/a[5]/s*t.clientHeight)*180/Math.PI,o=a[14]/(a[10]-1),l=a[14]/(a[10]+1);a[5],a[0];const u=t.clientWidth/t.clientHeight,c=t.getElementsByTagName("a-camera")[0].getObject3D("camera");c.fov=i,c.aspect=u,c.near=o,c.far=l,c.updateProjectionMatrix(),this.video.style.top=-(s-t.clientHeight)/2+"px",this.video.style.left=-(n-t.clientWidth)/2+"px",this.video.style.width=n+"px",this.video.style.height=s+"px"}}),AFRAME.registerComponent("mindar-image",{dependencies:["mindar-image-system"],schema:{imageTargetSrc:{type:"string"},maxTrack:{type:"int",default:1},filterMinCF:{type:"number",default:-1},filterBeta:{type:"number",default:-1},missTolerance:{type:"int",default:-1},warmupTolerance:{type:"int",default:-1},showStats:{type:"boolean",default:!1},autoStart:{type:"boolean",default:!0},uiLoading:{type:"string",default:"yes"},uiScanning:{type:"string",default:"yes"},uiError:{type:"string",default:"yes"}},init:function(){const e=this.el.sceneEl.systems["mindar-image-system"];e.setup({imageTargetSrc:this.data.imageTargetSrc,maxTrack:this.data.maxTrack,filterMinCF:-1===this.data.filterMinCF?null:this.data.filterMinCF,filterBeta:-1===this.data.filterBeta?null:this.data.filterBeta,missTolerance:-1===this.data.missTolerance?null:this.data.missTolerance,warmupTolerance:-1===this.data.warmupTolerance?null:this.data.warmupTolerance,showStats:this.data.showStats,uiLoading:this.data.uiLoading,uiScanning:this.data.uiScanning,uiError:this.data.uiError}),this.data.autoStart&&this.el.sceneEl.addEventListener("renderstart",(()=>{e.start()}))},remove:function(){this.el.sceneEl.systems["mindar-image-system"].stop()}}),AFRAME.registerComponent("mindar-image-target",{dependencies:["mindar-image-system"],schema:{targetIndex:{type:"number"}},postMatrix:null,init:function(){this.el.sceneEl.systems["mindar-image-system"].registerAnchor(this,this.data.targetIndex);const e=this.el.object3D;e.visible=!1,e.matrixAutoUpdate=!1},setupMarker([e,t]){const n=new AFRAME.THREE.Vector3,s=new AFRAME.THREE.Quaternion,r=new AFRAME.THREE.Vector3;n.x=e/2,n.y=e/2+(t-e)/2,r.x=e,r.y=e,r.z=e,this.postMatrix=new AFRAME.THREE.Matrix4,this.postMatrix.compose(n,s,r)},updateWorldMatrix(e){if(this.el.object3D.visible||null===e?this.el.object3D.visible&&null===e&&this.el.emit("targetLost"):this.el.emit("targetFound"),this.el.object3D.visible=null!==e,null!==e){var t=new AFRAME.THREE.Matrix4;t.elements=e,t.multiply(this.postMatrix),this.el.object3D.matrix=t}}})}();