import{Scene as m,WebGLRenderer as w,sRGBEncoding as y,PerspectiveCamera as g,Mesh as M,MeshStandardMaterial as x,Group as p,BufferGeometry as A,BufferAttribute as R}from"three";import{CSS3DRenderer as S}from"three/addons/renderers/CSS3DRenderer.js";import{C as b}from"./controller.008258e8.js";import{U as E}from"./ui.4498bf0c.js";const C={BufferGeometry:A,BufferAttribute:R};class U{constructor({container:e,uiLoading:t="yes",uiScanning:i="yes",uiError:s="yes",filterMinCF:r=null,filterBeta:o=null}){this.container=e,this.ui=new E({uiLoading:t,uiScanning:i,uiError:s}),this.controller=new b({filterMinCF:r,filterBeta:o}),this.scene=new m,this.cssScene=new m,this.renderer=new w({antialias:!0,alpha:!0}),this.cssRenderer=new S({antialias:!0}),this.renderer.outputEncoding=y,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new g,this.anchors=[],this.faceMeshes=[],this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),this.shouldFaceUser=!0,window.addEventListener("resize",this._resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR(),this.ui.hideLoading()}stop(){this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove(),this.controller.stopProcessVideo()}switchCamera(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()}addFaceMesh(){const e=this.controller.createThreeFaceGeometry(C),t=new M(e,new x({color:16777215}));return t.visible=!1,t.matrixAutoUpdate=!1,this.faceMeshes.push(t),t}addAnchor(e){const t=new p;t.matrixAutoUpdate=!1;const i={group:t,landmarkIndex:e,css:!1};return this.anchors.push(i),this.scene.add(t),i}addCSSAnchor(e){const t=new p;t.matrixAutoUpdate=!1;const i={group:t,landmarkIndex:e,css:!0};return this.anchors.push(i),this.cssScene.add(t),i}_startVideo(){return new Promise(((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void t();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:this.shouldFaceUser?"face":"environment"}}).then((t=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()})),this.video.srcObject=t})).catch((e=>{console.log("getUserMedia error",e),t()}))}))}_startAR(){return new Promise((async(e,t)=>{const i=this.video;this.container,this.controller.onUpdate=({hasFace:e,estimateResult:t})=>{for(let t=0;t<this.anchors.length;t++)this.anchors[t].css?this.anchors[t].group.children.forEach((t=>{t.element.style.visibility=e?"visible":"hidden"})):this.anchors[t].group.visible=e;for(let t=0;t<this.faceMeshes.length;t++)this.faceMeshes[t].visible=e;if(e){const{metricLandmarks:e,faceMatrix:i,faceScale:s}=t;for(let e=0;e<this.anchors.length;e++){const t=this.anchors[e].landmarkIndex,i=this.controller.getLandmarkMatrix(t);if(this.anchors[e].css){const t=[.001*i[0],.001*i[1],i[2],i[3],.001*i[4],.001*i[5],i[6],i[7],.001*i[8],.001*i[9],i[10],i[11],.001*i[12],.001*i[13],i[14],i[15]];this.anchors[e].group.matrix.set(...t)}else this.anchors[e].group.matrix.set(...i)}for(let e=0;e<this.faceMeshes.length;e++)this.faceMeshes[e].matrix.set(...i)}},this._resize(),await this.controller.setup(i);const{fov:s,aspect:r,near:o,far:a}=this.controller.getCameraParams();this.camera.fov=s,this.camera.aspect=r,this.camera.near=o,this.camera.far=a,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.video.videoWidth,this.video.videoHeight),this.cssRenderer.setSize(this.video.videoWidth,this.video.videoHeight),await this.controller.dummyRun(i),this._resize(),this.controller.processVideo(i),e()}))}_resize(){const{renderer:e,cssRenderer:t,camera:i,container:s,video:r}=this;if(!r)return;let o,a;const n=r.videoWidth/r.videoHeight;n>s.clientWidth/s.clientHeight?(a=s.clientHeight,o=a*n):(o=s.clientWidth,a=o/n),r.style.top=-(a-s.clientHeight)/2+"px",r.style.left=-(o-s.clientWidth)/2+"px",r.style.width=o+"px",r.style.height=a+"px";const h=e.domElement,d=t.domElement;h.style.position="absolute",h.style.top=r.style.top,h.style.left=r.style.left,h.style.width=r.style.width,h.style.height=r.style.height,d.style.position="absolute",d.style.top=r.style.top,d.style.left=r.style.left,d.style.transformOrigin="top left",d.style.transform="scale("+o/parseFloat(d.style.width)+","+a/parseFloat(d.style.height)+")"}}window.MINDAR||(window.MINDAR={}),window.MINDAR.FACE||(window.MINDAR.FACE={}),window.MINDAR.FACE.MindARThree=U;export{U as MindARThree};